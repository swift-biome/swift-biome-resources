{"culture":"_RegexParser","dependencies":[{"package":"swift-standard-library","modules":["Swift"]}],"extensions":[],"partitions":[{"namespace":"_RegexParser","communities":[{"community":"protocol","startIndex":0,"endIndex":2},{"community":"enum","startIndex":2,"endIndex":32},{"community":"struct","startIndex":32,"endIndex":77},{"community":"enum.case","startIndex":77,"endIndex":306},{"community":"init","startIndex":306,"endIndex":363},{"community":"type.property","startIndex":363,"endIndex":375},{"community":"property","startIndex":375,"endIndex":527},{"community":"type.method","startIndex":527,"endIndex":532},{"community":"method","startIndex":532,"endIndex":550},{"community":"type.op","startIndex":550,"endIndex":552},{"community":"func","startIndex":552,"endIndex":556},{"community":"var","startIndex":556,"endIndex":557},{"community":"typealias","startIndex":557,"endIndex":563}]},{"namespace":"Swift","communities":[{"community":"enum","startIndex":563,"endIndex":568},{"community":"struct","startIndex":568,"endIndex":569},{"community":"enum.case","startIndex":569,"endIndex":1164},{"community":"init","startIndex":1164,"endIndex":1171},{"community":"subscript","startIndex":1171,"endIndex":1172},{"community":"type.property","startIndex":1172,"endIndex":1173},{"community":"property","startIndex":1173,"endIndex":1181},{"community":"type.method","startIndex":1181,"endIndex":1182},{"community":"method","startIndex":1182,"endIndex":1198}]}],"identifiers":["s12_RegexParser20LocatedErrorProtocolP","s12_RegexParser8_ASTNodeP","s12_RegexParser16TypeConstructionO","s12_RegexParser17DelimiterLexErrorV4KindO","s12_RegexParser3ASTV11ConditionalV9ConditionV16PCREVersionCheckV4KindO","s12_RegexParser3ASTV11ConditionalV9ConditionV4KindO","s12_RegexParser3ASTV14AbsentFunctionV4KindO","s12_RegexParser3ASTV14AbsentFunctionV5StartO","s12_RegexParser3ASTV14MatchingOptionV4KindO","s12_RegexParser3ASTV14QuantificationV4KindO","s12_RegexParser3ASTV14QuantificationV6AmountO","s12_RegexParser3ASTV20CustomCharacterClassV5SetOpO","s12_RegexParser3ASTV20CustomCharacterClassV5StartO","s12_RegexParser3ASTV20CustomCharacterClassV6MemberO","s12_RegexParser3ASTV20GlobalMatchingOptionV015NewlineSequenceE0O","s12_RegexParser3ASTV20GlobalMatchingOptionV07NewlineE0O","s12_RegexParser3ASTV20GlobalMatchingOptionV4KindO","s12_RegexParser3ASTV4AtomV13AssertionKindO","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO","s12_RegexParser3ASTV4AtomV17CharacterPropertyV11JavaSpecialO","s12_RegexParser3ASTV4AtomV17CharacterPropertyV19PCRESpecialCategoryO","s12_RegexParser3ASTV4AtomV17CharacterPropertyV4KindO","s12_RegexParser3ASTV4AtomV17CharacterPropertyV4KindO03MapG0O","s12_RegexParser3ASTV4AtomV21BacktrackingDirectiveV4KindO","s12_RegexParser3ASTV4AtomV4KindO","s12_RegexParser3ASTV4AtomV7CalloutO","s12_RegexParser3ASTV4AtomV7CalloutO19OnigurumaOfContentsV9DirectionO","s12_RegexParser3ASTV4AtomV7CalloutO4PCREV8ArgumentO","s12_RegexParser3ASTV4NodeO","s12_RegexParser3ASTV5GroupV4KindO","s12_RegexParser3ASTV9ReferenceV4KindO","s12_RegexParser8ASTStageO","s12_RegexParser11CaptureListV","s12_RegexParser11CaptureListV0C0V","s12_RegexParser11UnreachableV","s12_RegexParser11UnsupportedV","s12_RegexParser13PrettyPrinterV","s12_RegexParser13SyntaxOptionsV","s12_RegexParser17DelimiterLexErrorV","s12_RegexParser3ASTV","s12_RegexParser3ASTV11AlternationV","s12_RegexParser3ASTV11ConditionalV","s12_RegexParser3ASTV11ConditionalV9ConditionV","s12_RegexParser3ASTV11ConditionalV9ConditionV16PCREVersionCheckV","s12_RegexParser3ASTV11ConditionalV9ConditionV17PCREVersionNumberV","s12_RegexParser3ASTV13ConcatenationV","s12_RegexParser3ASTV13InterpolationV","s12_RegexParser3ASTV14AbsentFunctionV","s12_RegexParser3ASTV14MatchingOptionV","s12_RegexParser3ASTV14QuantificationV","s12_RegexParser3ASTV20CustomCharacterClassV","s12_RegexParser3ASTV20CustomCharacterClassV5RangeV","s12_RegexParser3ASTV20GlobalMatchingOptionV","s12_RegexParser3ASTV22MatchingOptionSequenceV","s12_RegexParser3ASTV28GlobalMatchingOptionSequenceV","s12_RegexParser3ASTV4AtomV","s12_RegexParser3ASTV4AtomV14ScalarSequenceV","s12_RegexParser3ASTV4AtomV17CharacterPropertyV","s12_RegexParser3ASTV4AtomV21BacktrackingDirectiveV","s12_RegexParser3ASTV4AtomV6ScalarV","s12_RegexParser3ASTV4AtomV7CalloutO12OnigurumaTagV","s12_RegexParser3ASTV4AtomV7CalloutO14OnigurumaNamedV","s12_RegexParser3ASTV4AtomV7CalloutO14OnigurumaNamedV7ArgListV","s12_RegexParser3ASTV4AtomV7CalloutO19OnigurumaOfContentsV","s12_RegexParser3ASTV4AtomV7CalloutO4PCREV","s12_RegexParser3ASTV5EmptyV","s12_RegexParser3ASTV5GroupV","s12_RegexParser3ASTV5GroupV15BalancedCaptureV","s12_RegexParser3ASTV5QuoteV","s12_RegexParser3ASTV6TriviaV","s12_RegexParser3ASTV9ReferenceV","s12_RegexParser6SourceV","s12_RegexParser6SourceV12LocatedErrorV","s12_RegexParser6SourceV7LocatedV","s12_RegexParser6SourceV8LocationV","s12_RegexParser7AnyTypeV","s12_RegexParser9DelimiterV","s12_RegexParser17DelimiterLexErrorV4KindO07unknownC0yA2EmF","s12_RegexParser17DelimiterLexErrorV4KindO11invalidUTF8yA2EmF","s12_RegexParser17DelimiterLexErrorV4KindO12unterminatedyA2EmF","s12_RegexParser17DelimiterLexErrorV4KindO16unprintableASCIIyA2EmF","s12_RegexParser17DelimiterLexErrorV4KindO28multilineClosingNotOnNewlineyA2EmF","s12_RegexParser3ASTV11ConditionalV9ConditionV16PCREVersionCheckV4KindO18greaterThanOrEqualyA2KmF","s12_RegexParser3ASTV11ConditionalV9ConditionV16PCREVersionCheckV4KindO5equalyA2KmF","s12_RegexParser3ASTV11ConditionalV9ConditionV4KindO11defineGroupyA2ImF","s12_RegexParser3ASTV11ConditionalV9ConditionV4KindO12groupMatchedyAiC9ReferenceVcAImF","s12_RegexParser3ASTV11ConditionalV9ConditionV4KindO14recursionCheckyA2ImF","s12_RegexParser3ASTV11ConditionalV9ConditionV4KindO16pcreVersionCheckyAiG011PCREVersionI0VcAImF","s12_RegexParser3ASTV11ConditionalV9ConditionV4KindO19groupRecursionCheckyAiC9ReferenceVcAImF","s12_RegexParser3ASTV11ConditionalV9ConditionV4KindO5groupyAiC5GroupVcAImF","s12_RegexParser3ASTV14AbsentFunctionV4KindO10expressionyAgC4NodeO_AA6SourceV8LocationVAJtcAGmF","s12_RegexParser3ASTV14AbsentFunctionV4KindO7cleareryA2GmF","s12_RegexParser3ASTV14AbsentFunctionV4KindO7stopperyAgC4NodeOcAGmF","s12_RegexParser3ASTV14AbsentFunctionV4KindO8repeateryAgC4NodeOcAGmF","s12_RegexParser3ASTV14AbsentFunctionV5StartO11withoutPipeyA2GmF","s12_RegexParser3ASTV14AbsentFunctionV5StartO8withPipeyA2GmF","s12_RegexParser3ASTV14MatchingOptionV4KindO10singleLineyA2GmF","s12_RegexParser3ASTV14MatchingOptionV4KindO13asciiOnlyWordyA2GmF","s12_RegexParser3ASTV14MatchingOptionV4KindO13byteSemanticsyA2GmF","s12_RegexParser3ASTV14MatchingOptionV4KindO13extraExtendedyA2GmF","s12_RegexParser3ASTV14MatchingOptionV4KindO14asciiOnlyDigityA2GmF","s12_RegexParser3ASTV14MatchingOptionV4KindO14asciiOnlySpaceyA2GmF","s12_RegexParser3ASTV14MatchingOptionV4KindO15caseInsensitiveyA2GmF","s12_RegexParser3ASTV14MatchingOptionV4KindO17namedCapturesOnlyyA2GmF","s12_RegexParser3ASTV14MatchingOptionV4KindO18reluctantByDefaultyA2GmF","s12_RegexParser3ASTV14MatchingOptionV4KindO19asciiOnlyPOSIXPropsyA2GmF","s12_RegexParser3ASTV14MatchingOptionV4KindO19possessiveByDefaultyA2GmF","s12_RegexParser3ASTV14MatchingOptionV4KindO19textSegmentWordModeyA2GmF","s12_RegexParser3ASTV14MatchingOptionV4KindO21unicodeWordBoundariesyA2GmF","s12_RegexParser3ASTV14MatchingOptionV4KindO22unicodeScalarSemanticsyA2GmF","s12_RegexParser3ASTV14MatchingOptionV4KindO23textSegmentGraphemeModeyA2GmF","s12_RegexParser3ASTV14MatchingOptionV4KindO24allowDuplicateGroupNamesyA2GmF","s12_RegexParser3ASTV14MatchingOptionV4KindO24graphemeClusterSemanticsyA2GmF","s12_RegexParser3ASTV14MatchingOptionV4KindO8extendedyA2GmF","s12_RegexParser3ASTV14MatchingOptionV4KindO9multilineyA2GmF","s12_RegexParser3ASTV14QuantificationV4KindO10possessiveyA2GmF","s12_RegexParser3ASTV14QuantificationV4KindO5eageryA2GmF","s12_RegexParser3ASTV14QuantificationV4KindO9reluctantyA2GmF","s12_RegexParser3ASTV14QuantificationV6AmountO10zeroOrMoreyA2GmF","s12_RegexParser3ASTV14QuantificationV6AmountO5rangeyAgA6SourceV7LocatedVy_SiG_AMtcAGmF","s12_RegexParser3ASTV14QuantificationV6AmountO5upToNyAgA6SourceV7LocatedVy_SiGcAGmF","s12_RegexParser3ASTV14QuantificationV6AmountO7exactlyyAgA6SourceV7LocatedVy_SiGcAGmF","s12_RegexParser3ASTV14QuantificationV6AmountO7nOrMoreyAgA6SourceV7LocatedVy_SiGcAGmF","s12_RegexParser3ASTV14QuantificationV6AmountO9oneOrMoreyA2GmF","s12_RegexParser3ASTV14QuantificationV6AmountO9zeroOrOneyA2GmF","s12_RegexParser3ASTV20CustomCharacterClassV5SetOpO11subtractionyA2GmF","s12_RegexParser3ASTV20CustomCharacterClassV5SetOpO12intersectionyA2GmF","s12_RegexParser3ASTV20CustomCharacterClassV5SetOpO19symmetricDifferenceyA2GmF","s12_RegexParser3ASTV20CustomCharacterClassV5StartO6normalyA2GmF","s12_RegexParser3ASTV20CustomCharacterClassV5StartO8invertedyA2GmF","s12_RegexParser3ASTV20CustomCharacterClassV6MemberO12setOperationyAGSayAGG_AA6SourceV7LocatedVy_AE5SetOpOGAItcAGmF","s12_RegexParser3ASTV20CustomCharacterClassV6MemberO4atomyAgC4AtomVcAGmF","s12_RegexParser3ASTV20CustomCharacterClassV6MemberO5quoteyAgC5QuoteVcAGmF","s12_RegexParser3ASTV20CustomCharacterClassV6MemberO5rangeyAgE5RangeVcAGmF","s12_RegexParser3ASTV20CustomCharacterClassV6MemberO6customyAgEcAGmF","s12_RegexParser3ASTV20CustomCharacterClassV6MemberO6triviayAgC6TriviaVcAGmF","s12_RegexParser3ASTV20GlobalMatchingOptionV015NewlineSequenceE0O10anyUnicodeyA2GmF","s12_RegexParser3ASTV20GlobalMatchingOptionV015NewlineSequenceE0O27anyCarriageReturnOrLinefeedyA2GmF","s12_RegexParser3ASTV20GlobalMatchingOptionV07NewlineE0O10anyUnicodeyA2GmF","s12_RegexParser3ASTV20GlobalMatchingOptionV07NewlineE0O12linefeedOnlyyA2GmF","s12_RegexParser3ASTV20GlobalMatchingOptionV07NewlineE0O12nulCharacteryA2GmF","s12_RegexParser3ASTV20GlobalMatchingOptionV07NewlineE0O18carriageReturnOnlyyA2GmF","s12_RegexParser3ASTV20GlobalMatchingOptionV07NewlineE0O23carriageAndLinefeedOnlyyA2GmF","s12_RegexParser3ASTV20GlobalMatchingOptionV07NewlineE0O27anyCarriageReturnOrLinefeedyA2GmF","s12_RegexParser3ASTV20GlobalMatchingOptionV4KindO015newlineSequenceE0yAgE07NewlineiE0OcAGmF","s12_RegexParser3ASTV20GlobalMatchingOptionV4KindO07newlineE0yAgE07NewlineE0OcAGmF","s12_RegexParser3ASTV20GlobalMatchingOptionV4KindO10limitDepthyAgA6SourceV7LocatedVy_SiGcAGmF","s12_RegexParser3ASTV20GlobalMatchingOptionV4KindO10limitMatchyAgA6SourceV7LocatedVy_SiGcAGmF","s12_RegexParser3ASTV20GlobalMatchingOptionV4KindO10noStartOptyA2GmF","s12_RegexParser3ASTV20GlobalMatchingOptionV4KindO13noAutoPossessyA2GmF","s12_RegexParser3ASTV20GlobalMatchingOptionV4KindO15noDotStarAnchoryA2GmF","s12_RegexParser3ASTV20GlobalMatchingOptionV4KindO15notEmptyAtStartyA2GmF","s12_RegexParser3ASTV20GlobalMatchingOptionV4KindO17unicodePropertiesyA2GmF","s12_RegexParser3ASTV20GlobalMatchingOptionV4KindO5noJITyA2GmF","s12_RegexParser3ASTV20GlobalMatchingOptionV4KindO7utfModeyA2GmF","s12_RegexParser3ASTV20GlobalMatchingOptionV4KindO8notEmptyyA2GmF","s12_RegexParser3ASTV20GlobalMatchingOptionV4KindO9limitHeapyAgA6SourceV7LocatedVy_SiGcAGmF","s12_RegexParser3ASTV4AtomV13AssertionKindO11startOfLineyA2GmF","s12_RegexParser3ASTV4AtomV13AssertionKindO11textSegmentyA2GmF","s12_RegexParser3ASTV4AtomV13AssertionKindO12endOfSubjectyA2GmF","s12_RegexParser3ASTV4AtomV13AssertionKindO12wordBoundaryyA2GmF","s12_RegexParser3ASTV4AtomV13AssertionKindO14notTextSegmentyA2GmF","s12_RegexParser3ASTV4AtomV13AssertionKindO14startOfSubjectyA2GmF","s12_RegexParser3ASTV4AtomV13AssertionKindO15notWordBoundaryyA2GmF","s12_RegexParser3ASTV4AtomV13AssertionKindO17resetStartOfMatchyA2GmF","s12_RegexParser3ASTV4AtomV13AssertionKindO25endOfSubjectBeforeNewlineyA2GmF","s12_RegexParser3ASTV4AtomV13AssertionKindO30firstMatchingPositionInSubjectyA2GmF","s12_RegexParser3ASTV4AtomV13AssertionKindO9endOfLineyA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO10notNewlineyA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO10whitespaceyA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO11textSegmentyA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO11trueAnycharyA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO11verticalTabyA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO12decimalDigityA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO12endOfSubjectyA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO12wordBoundaryyA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO13notWhitespaceyA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO13wordCharacteryA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO14carriageReturnyA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO14notTextSegmentyA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO14notVerticalTabyA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO14singleDataUnityA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO14startOfSubjectyA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO15graphemeClusteryA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO15newlineSequenceyA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO15notDecimalDigityA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO15notWordBoundaryyA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO16notWordCharacteryA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO17resetStartOfMatchyA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO20horizontalWhitespaceyA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO23notHorizontalWhitespaceyA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO25endOfSubjectBeforeNewlineyA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO30firstMatchingPositionInSubjectyA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO3tabyA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO5alarmyA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO6escapeyA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO7newlineyA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO8formfeedyA2GmF","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO9backspaceyA2GmF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV11JavaSpecialO10alphabeticyA2ImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV11JavaSpecialO10isoControlyA2ImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV11JavaSpecialO10javaLetteryA2ImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV11JavaSpecialO10whitespaceyA2ImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV11JavaSpecialO11ideographicyA2ImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV11JavaSpecialO17javaLetterOrDigityA2ImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV11JavaSpecialO18javaIdentifierPartyA2ImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV11JavaSpecialO19identifierIgnorableyA2ImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV11JavaSpecialO19javaIdentifierStartyA2ImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV11JavaSpecialO21unicodeIdentifierPartyA2ImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV11JavaSpecialO22unicodeIdentifierStartyA2ImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV11JavaSpecialO5digityA2ImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV11JavaSpecialO7definedyA2ImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV11JavaSpecialO8mirroredyA2ImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV11JavaSpecialO9lowerCaseyA2ImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV11JavaSpecialO9spaceCharyA2ImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV11JavaSpecialO9titleCaseyA2ImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV11JavaSpecialO9upperCaseyA2ImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV19PCRESpecialCategoryO10posixSpaceyA2ImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV19PCRESpecialCategoryO12alphanumericyA2ImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV19PCRESpecialCategoryO16universallyNamedyA2ImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV19PCRESpecialCategoryO8perlWordyA2ImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV19PCRESpecialCategoryO9perlSpaceyA2ImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV4KindO03MapG0O9lowercaseyA2KmF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV4KindO03MapG0O9titlecaseyA2KmF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV4KindO03MapG0O9uppercaseyA2KmF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV4KindO11javaSpecialyAiG04JavaI0OcAImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV4KindO11numericTypeyAIs7UnicodeO07NumericI0OcAImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV4KindO11pcreSpecialyAiG19PCRESpecialCategoryOcAImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV4KindO12numericValueyAISdcAImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV4KindO15generalCategoryyAIs7UnicodeOAAE015ExtendedGeneralI0OcAImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV4KindO15scriptExtensionyAIs7UnicodeOAAE6ScriptOcAImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV4KindO3ageyAISi_SitcAImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV4KindO3anyyA2ImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV4KindO3cccyAIs7UnicodeO23CanonicalCombiningClassVcAImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV4KindO5asciiyA2ImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV4KindO5blockyAIs7UnicodeOAAE5BlockOcAImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV4KindO5namedyAISScAImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV4KindO5posixyAIs7UnicodeOAAE13POSIXPropertyOcAImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV4KindO6binaryyAIs7UnicodeOAAE06BinaryF0O_SbtcAImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV4KindO6scriptyAIs7UnicodeOAAE6ScriptOcAImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV4KindO7mappingyA2I03MapG0O_SStcAImF","s12_RegexParser3ASTV4AtomV17CharacterPropertyV4KindO8assignedyA2ImF","s12_RegexParser3ASTV4AtomV21BacktrackingDirectiveV4KindO4failyA2ImF","s12_RegexParser3ASTV4AtomV21BacktrackingDirectiveV4KindO4markyA2ImF","s12_RegexParser3ASTV4AtomV21BacktrackingDirectiveV4KindO4skipyA2ImF","s12_RegexParser3ASTV4AtomV21BacktrackingDirectiveV4KindO4thenyA2ImF","s12_RegexParser3ASTV4AtomV21BacktrackingDirectiveV4KindO5pruneyA2ImF","s12_RegexParser3ASTV4AtomV21BacktrackingDirectiveV4KindO6acceptyA2ImF","s12_RegexParser3ASTV4AtomV21BacktrackingDirectiveV4KindO6commityA2ImF","s12_RegexParser3ASTV4AtomV4KindO10subpatternyAgC9ReferenceVcAGmF","s12_RegexParser3ASTV4AtomV4KindO11startOfLineyA2GmF","s12_RegexParser3ASTV4AtomV4KindO12keyboardMetayAGSJcAGmF","s12_RegexParser3ASTV4AtomV4KindO13backreferenceyAgC9ReferenceVcAGmF","s12_RegexParser3ASTV4AtomV4KindO14namedCharacteryAGSScAGmF","s12_RegexParser3ASTV4AtomV4KindO14scalarSequenceyAgE06ScalarG0VcAGmF","s12_RegexParser3ASTV4AtomV4KindO15keyboardControlyAGSJcAGmF","s12_RegexParser3ASTV4AtomV4KindO19keyboardMetaControlyAGSJcAGmF","s12_RegexParser3ASTV4AtomV4KindO21backtrackingDirectiveyAgE012BacktrackingG0VcAGmF","s12_RegexParser3ASTV4AtomV4KindO21changeMatchingOptionsyAgC0G14OptionSequenceVcAGmF","s12_RegexParser3ASTV4AtomV4KindO3anyyA2GmF","s12_RegexParser3ASTV4AtomV4KindO4charyAGSJcAGmF","s12_RegexParser3ASTV4AtomV4KindO6scalaryAgE6ScalarVcAGmF","s12_RegexParser3ASTV4AtomV4KindO7calloutyAgE7CalloutOcAGmF","s12_RegexParser3ASTV4AtomV4KindO7escapedyAgE14EscapedBuiltinOcAGmF","s12_RegexParser3ASTV4AtomV4KindO8propertyyAgE17CharacterPropertyVcAGmF","s12_RegexParser3ASTV4AtomV4KindO9endOfLineyA2GmF","s12_RegexParser3ASTV4AtomV7CalloutO14onigurumaNamedyA2G09OnigurumaG0VcAGmF","s12_RegexParser3ASTV4AtomV7CalloutO19OnigurumaOfContentsV9DirectionO10inProgressyA2KmF","s12_RegexParser3ASTV4AtomV7CalloutO19OnigurumaOfContentsV9DirectionO12inRetractionyA2KmF","s12_RegexParser3ASTV4AtomV7CalloutO19OnigurumaOfContentsV9DirectionO4bothyA2KmF","s12_RegexParser3ASTV4AtomV7CalloutO19onigurumaOfContentsyA2G09OnigurumagH0VcAGmF","s12_RegexParser3ASTV4AtomV7CalloutO4PCREV8ArgumentO6numberyAKSicAKmF","s12_RegexParser3ASTV4AtomV7CalloutO4PCREV8ArgumentO6stringyAKSScAKmF","s12_RegexParser3ASTV4AtomV7CalloutO4pcreyA2G4PCREVcAGmF","s12_RegexParser3ASTV4NodeO11alternationyAeC11AlternationVcAEmF","s12_RegexParser3ASTV4NodeO11conditionalyAeC11ConditionalVcAEmF","s12_RegexParser3ASTV4NodeO13concatenationyAeC13ConcatenationVcAEmF","s12_RegexParser3ASTV4NodeO13interpolationyAeC13InterpolationVcAEmF","s12_RegexParser3ASTV4NodeO14absentFunctionyAeC06AbsentF0VcAEmF","s12_RegexParser3ASTV4NodeO14quantificationyAeC14QuantificationVcAEmF","s12_RegexParser3ASTV4NodeO20customCharacterClassyAeC06CustomfG0VcAEmF","s12_RegexParser3ASTV4NodeO4atomyAeC4AtomVcAEmF","s12_RegexParser3ASTV4NodeO5emptyyAeC5EmptyVcAEmF","s12_RegexParser3ASTV4NodeO5groupyAeC5GroupVcAEmF","s12_RegexParser3ASTV4NodeO5quoteyAeC5QuoteVcAEmF","s12_RegexParser3ASTV4NodeO6triviayAeC6TriviaVcAEmF","s12_RegexParser3ASTV5GroupV4KindO10lookbehindyA2GmF","s12_RegexParser3ASTV5GroupV4KindO10nonCaptureyA2GmF","s12_RegexParser3ASTV5GroupV4KindO12namedCaptureyAgA6SourceV7LocatedVy_SSGcAGmF","s12_RegexParser3ASTV5GroupV4KindO15atomicScriptRunyA2GmF","s12_RegexParser3ASTV5GroupV4KindO15balancedCaptureyAgE08BalancedG0VcAGmF","s12_RegexParser3ASTV5GroupV4KindO15nonCaptureResetyA2GmF","s12_RegexParser3ASTV5GroupV4KindO17negativeLookaheadyA2GmF","s12_RegexParser3ASTV5GroupV4KindO18atomicNonCapturingyA2GmF","s12_RegexParser3ASTV5GroupV4KindO18negativeLookbehindyA2GmF","s12_RegexParser3ASTV5GroupV4KindO18nonAtomicLookaheadyA2GmF","s12_RegexParser3ASTV5GroupV4KindO19nonAtomicLookbehindyA2GmF","s12_RegexParser3ASTV5GroupV4KindO21changeMatchingOptionsyAgC0G14OptionSequenceVcAGmF","s12_RegexParser3ASTV5GroupV4KindO7captureyA2GmF","s12_RegexParser3ASTV5GroupV4KindO9lookaheadyA2GmF","s12_RegexParser3ASTV5GroupV4KindO9scriptRunyA2GmF","s12_RegexParser3ASTV9ReferenceV4KindO5namedyAGSScAGmF","s12_RegexParser3ASTV9ReferenceV4KindO8absoluteyAGSicAGmF","s12_RegexParser3ASTV9ReferenceV4KindO8relativeyAGSicAGmF","s12_RegexParser8ASTStageO8semanticyA2CmF","s12_RegexParser8ASTStageO9syntacticyA2CmF","s12_RegexParser11CaptureListV0C0V4name4type13optionalDepth_AESSSg_ypXpSiAA6SourceV8LocationVtcfc","s12_RegexParser11CaptureListV12arrayLiteralA2C0C0Vd_tcfc","s12_RegexParser11CaptureListVyACxcSTRzAC0C0V7ElementRtzlufc","s12_RegexParser11UnreachableV_4file4lineACSS_s12StaticStringVSutcfc","s12_RegexParser11UnsupportedV_4file4lineACSS_s12StaticStringVSutcfc","s12_RegexParser13PrettyPrinterV16maxTopDownLevels011minBottomUpH0ACSiSg_AFtcfc","s12_RegexParser13SyntaxOptionsV8rawValueACSu_tcfc","s12_RegexParser13SyntaxOptionsVACycfc","s12_RegexParser3ASTV11AlternationV_5pipesAESayAC4NodeOG_SayAA6SourceV8LocationVGtcfc","s12_RegexParser3ASTV11ConditionalV9ConditionV16PCREVersionCheckVyAiA6SourceV7LocatedVy_AI4KindOG_AG0F6NumberVtcfc","s12_RegexParser3ASTV11ConditionalV9ConditionV17PCREVersionNumberV5major5minor_AISi_SiAA6SourceV8LocationVtcfc","s12_RegexParser3ASTV11ConditionalV9ConditionVyA2G4KindO_AA6SourceV8LocationVtcfc","s12_RegexParser3ASTV11ConditionalV_10trueBranch4pipe05falseF0_A2E9ConditionV_AC4NodeOAA6SourceV8LocationVSgAlPtcfc","s12_RegexParser3ASTV13ConcatenationVyAESayAC4NodeOG_AA6SourceV8LocationVtcfc","s12_RegexParser3ASTV13InterpolationVyAESS_AA6SourceV8LocationVtcfc","s12_RegexParser3ASTV14AbsentFunctionV_5start8locationA2E4KindO_AA6SourceV8LocationVAMtcfc","s12_RegexParser3ASTV14MatchingOptionV_8locationA2E4KindO_AA6SourceV8LocationVtcfc","s12_RegexParser3ASTV14QuantificationV4KindO8rawValueAGSgSS_tcfc","s12_RegexParser3ASTV14QuantificationV____6triviaAeA6SourceV7LocatedVy_AE6AmountOG_AJy_AE4KindOGAC4NodeOAH8LocationVSayAC6TriviaVGtcfc","s12_RegexParser3ASTV20CustomCharacterClassV5RangeV___6triviaAgC4AtomV_AA6SourceV8LocationVAJSayAC6TriviaVGtcfc","s12_RegexParser3ASTV20CustomCharacterClassV5SetOpO8rawValueAGSgSS_tcfc","s12_RegexParser3ASTV20CustomCharacterClassV5StartO8rawValueAGSgSS_tcfc","s12_RegexParser3ASTV20CustomCharacterClassVyAeA6SourceV7LocatedVy_AE5StartOG_SayAE6MemberOGAG8LocationVtcfc","s12_RegexParser3ASTV20GlobalMatchingOptionVyA2E4KindO_AA6SourceV8LocationVtcfc","s12_RegexParser3ASTV22MatchingOptionSequenceV6addingAESayAC0dE0VG_tcfc","s12_RegexParser3ASTV22MatchingOptionSequenceV8caretLoc6adding05minusH08removingAeA6SourceV8LocationVSg_SayAC0dE0VGAnQtcfc","s12_RegexParser3ASTV22MatchingOptionSequenceV8removingAESayAC0dE0VG_tcfc","s12_RegexParser3ASTV28GlobalMatchingOptionSequenceVyAESgSayAC0deF0VGcfc","s12_RegexParser3ASTV4AtomV13AssertionKindO8rawValueAGSgSS_tcfc","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO_22inCustomCharacterClassAGSgSJ_Sbtcfc","s12_RegexParser3ASTV4AtomV14ScalarSequenceV_6triviaAGSayAE0E0VG_SayAC6TriviaVGtcfc","s12_RegexParser3ASTV4AtomV17CharacterPropertyV11JavaSpecialO8rawValueAISgSS_tcfc","s12_RegexParser3ASTV4AtomV17CharacterPropertyV19PCRESpecialCategoryO8rawValueAISgSS_tcfc","s12_RegexParser3ASTV4AtomV17CharacterPropertyV_10isInverted0G5POSIXA2G4KindO_S2btcfc","s12_RegexParser3ASTV4AtomV21BacktrackingDirectiveV_4nameAgA6SourceV7LocatedVy_AG4KindOG_ALy_SSGSgtcfc","s12_RegexParser3ASTV4AtomV6ScalarVyAGs7UnicodeOAFV_AA6SourceV8LocationVtcfc","s12_RegexParser3ASTV4AtomV7CalloutO12OnigurumaTagVyAiA6SourceV8LocationV_AK7LocatedVy_SSGAMtcfc","s12_RegexParser3ASTV4AtomV7CalloutO14OnigurumaNamedV7ArgListVyAkA6SourceV8LocationV_SayAM7LocatedVy_SSGGAOtcfc","s12_RegexParser3ASTV4AtomV7CalloutO14OnigurumaNamedV_3tag4argsAiA6SourceV7LocatedVy_SSG_AG0F3TagVSgAI7ArgListVSgtcfc","s12_RegexParser3ASTV4AtomV7CalloutO19OnigurumaOfContentsV___3tag9directionAiA6SourceV8LocationV_AM7LocatedVy_SSGAoG0F3TagVSgAQy_AI9DirectionOGtcfc","s12_RegexParser3ASTV4AtomV7CalloutO4PCREVyAiA6SourceV7LocatedVy_AI8ArgumentOGcfc","s12_RegexParser3ASTV4AtomVyA2E4KindO_AA6SourceV8LocationVtcfc","s12_RegexParser3ASTV5EmptyVyAeA6SourceV8LocationVcfc","s12_RegexParser3ASTV5GroupV15BalancedCaptureV4name4dash9priorNameAgA6SourceV7LocatedVy_SSGSg_AL8LocationVAOtcfc","s12_RegexParser3ASTV5GroupVyAeA6SourceV7LocatedVy_AE4KindOG_AC4NodeOAG8LocationVtcfc","s12_RegexParser3ASTV5QuoteVyAESS_AA6SourceV8LocationVtcfc","s12_RegexParser3ASTV6TriviaVyAESS_AA6SourceV8LocationVtcfc","s12_RegexParser3ASTV9ReferenceV_14recursionLevel8innerLocA2E4KindO_AA6SourceV7LocatedVy_SiGSgAK8LocationVtcfc","s12_RegexParser3ASTV_13globalOptionsA2C4NodeO_AC28GlobalMatchingOptionSequenceVSgtcfc","s12_RegexParser6SourceV12LocatedErrorVyAEy_xGx_SnySS5IndexVGtcfc","s12_RegexParser6SourceV7LocatedV6fakingAEy_xGx_tcfc","s12_RegexParser6SourceV7LocatedVyAEy_xGx_AC8LocationVtcfc","s12_RegexParser6SourceV7LocatedVyAEy_xGx_SnySS5IndexVGtcfc","s12_RegexParser6SourceV8LocationV4fromAESs_tcfc","s12_RegexParser6SourceV8LocationV_2inAEx_ACtcSXRzSS5IndexV5BoundRtzlufc","s12_RegexParser6SourceV8LocationVyAESnySS5IndexVGcfc","s12_RegexParser7AnyTypeVyACypXpcfc","s12_RegexParser13SyntaxOptionsV017multilineExtendedC0ACvpZ","s12_RegexParser13SyntaxOptionsV08extendedC0ACvpZ","s12_RegexParser13SyntaxOptionsV11traditionalACvpZ","s12_RegexParser13SyntaxOptionsV12experimentalACvpZ","s12_RegexParser13SyntaxOptionsV17endOfLineCommentsACvpZ","s12_RegexParser13SyntaxOptionsV17namedCapturesOnlyACvpZ","s12_RegexParser13SyntaxOptionsV18experimentalQuotesACvpZ","s12_RegexParser13SyntaxOptionsV18experimentalRangesACvpZ","s12_RegexParser13SyntaxOptionsV20experimentalCapturesACvpZ","s12_RegexParser13SyntaxOptionsV20experimentalCommentsACvpZ","s12_RegexParser13SyntaxOptionsV21nonSemanticWhitespaceACvpZ","s12_RegexParser6SourceV8LocationV4fakeAEvpZ","s12_RegexParser11CaptureListV0C0V11descriptionSSvp","s12_RegexParser11CaptureListV0C0V13optionalDepthSivp","s12_RegexParser11CaptureListV0C0V4nameSSSgvp","s12_RegexParser11CaptureListV0C0V4typeypXpvp","s12_RegexParser11CaptureListV0C0V8locationAA6SourceV8LocationVvp","s12_RegexParser11CaptureListV11descriptionSSvp","s12_RegexParser11CaptureListV8capturesSayAC0C0VGvp","s12_RegexParser11UnreachableV11descriptionSSvp","s12_RegexParser11UnsupportedV11descriptionSSvp","s12_RegexParser13PrettyPrinterV11indentWidthSivp","s12_RegexParser13PrettyPrinterV16maxTopDownLevelsSiSgvp","s12_RegexParser13PrettyPrinterV17minBottomUpLevelsSiSgvp","s12_RegexParser13PrettyPrinterV22quantificationBehaviorAA3ASTV14QuantificationV4KindOvp","s12_RegexParser13PrettyPrinterV5depthSivp","s12_RegexParser13SyntaxOptionsV8rawValueSuvp","s12_RegexParser17DelimiterLexErrorV11descriptionSSvp","s12_RegexParser17DelimiterLexErrorV4kindAC4KindOvp","s12_RegexParser17DelimiterLexErrorV9resumePtrSVvp","s12_RegexParser20LocatedErrorProtocolP8locationAA6SourceV8LocationVvp","s12_RegexParser3ASTV10hasCaptureSbvp","s12_RegexParser3ASTV11AlternationV5pipesSayAA6SourceV8LocationVGvp","s12_RegexParser3ASTV11AlternationV8childrenSayAC4NodeOGvp","s12_RegexParser3ASTV11AlternationV8locationAA6SourceV8LocationVvp","s12_RegexParser3ASTV11ConditionalV10trueBranchAC4NodeOvp","s12_RegexParser3ASTV11ConditionalV11falseBranchAC4NodeOvp","s12_RegexParser3ASTV11ConditionalV4pipeAA6SourceV8LocationVSgvp","s12_RegexParser3ASTV11ConditionalV8locationAA6SourceV8LocationVvp","s12_RegexParser3ASTV11ConditionalV9ConditionV16PCREVersionCheckV3numAG0F6NumberVvp","s12_RegexParser3ASTV11ConditionalV9ConditionV16PCREVersionCheckV4kindAA6SourceV7LocatedVy_AI4KindOGvp","s12_RegexParser3ASTV11ConditionalV9ConditionV17PCREVersionNumberV5majorSivp","s12_RegexParser3ASTV11ConditionalV9ConditionV17PCREVersionNumberV5minorSivp","s12_RegexParser3ASTV11ConditionalV9ConditionV17PCREVersionNumberV8locationAA6SourceV8LocationVvp","s12_RegexParser3ASTV11ConditionalV9ConditionV4kindAG4KindOvp","s12_RegexParser3ASTV11ConditionalV9ConditionV8locationAA6SourceV8LocationVvp","s12_RegexParser3ASTV11ConditionalV9conditionAE9ConditionVvp","s12_RegexParser3ASTV11captureListAA07CaptureE0Vvp","s12_RegexParser3ASTV13ConcatenationV8childrenSayAC4NodeOGvp","s12_RegexParser3ASTV13ConcatenationV8locationAA6SourceV8LocationVvp","s12_RegexParser3ASTV13InterpolationV8contentsSSvp","s12_RegexParser3ASTV13InterpolationV8locationAA6SourceV8LocationVvp","s12_RegexParser3ASTV13globalOptionsAC28GlobalMatchingOptionSequenceVSgvp","s12_RegexParser3ASTV14AbsentFunctionV4kindAE4KindOvp","s12_RegexParser3ASTV14AbsentFunctionV5startAA6SourceV8LocationVvp","s12_RegexParser3ASTV14AbsentFunctionV8childrenSayAC4NodeOGvp","s12_RegexParser3ASTV14AbsentFunctionV8locationAA6SourceV8LocationVvp","s12_RegexParser3ASTV14MatchingOptionV010isSemanticD5LevelSbvp","s12_RegexParser3ASTV14MatchingOptionV13isAnyExtendedSbvp","s12_RegexParser3ASTV14MatchingOptionV17isTextSegmentModeSbvp","s12_RegexParser3ASTV14MatchingOptionV4kindAE4KindOvp","s12_RegexParser3ASTV14MatchingOptionV8locationAA6SourceV8LocationVvp","s12_RegexParser3ASTV14QuantificationV4kindAA6SourceV7LocatedVy_AE4KindOGvp","s12_RegexParser3ASTV14QuantificationV5childAC4NodeOvp","s12_RegexParser3ASTV14QuantificationV6AmountO6boundsSi7atLeast_SiSg0G4Mosttvp","s12_RegexParser3ASTV14QuantificationV6amountAA6SourceV7LocatedVy_AE6AmountOGvp","s12_RegexParser3ASTV14QuantificationV6triviaSayAC6TriviaVGvp","s12_RegexParser3ASTV14QuantificationV8locationAA6SourceV8LocationVvp","s12_RegexParser3ASTV20CustomCharacterClassV10isInvertedSbvp","s12_RegexParser3ASTV20CustomCharacterClassV22strippingTriviaShallowAEvp","s12_RegexParser3ASTV20CustomCharacterClassV5RangeV3lhsAC4AtomVvp","s12_RegexParser3ASTV20CustomCharacterClassV5RangeV3rhsAC4AtomVvp","s12_RegexParser3ASTV20CustomCharacterClassV5RangeV6triviaSayAC6TriviaVGvp","s12_RegexParser3ASTV20CustomCharacterClassV5RangeV7dashLocAA6SourceV8LocationVvp","s12_RegexParser3ASTV20CustomCharacterClassV5startAA6SourceV7LocatedVy_AE5StartOGvp","s12_RegexParser3ASTV20CustomCharacterClassV6MemberO10isSemanticSbvp","s12_RegexParser3ASTV20CustomCharacterClassV6MemberO8asTriviaAC0I0VSgvp","s12_RegexParser3ASTV20CustomCharacterClassV6MemberO8isTriviaSbvp","s12_RegexParser3ASTV20CustomCharacterClassV7membersSayAE6MemberOGvp","s12_RegexParser3ASTV20CustomCharacterClassV8locationAA6SourceV8LocationVvp","s12_RegexParser3ASTV20GlobalMatchingOptionV4kindAE4KindOvp","s12_RegexParser3ASTV20GlobalMatchingOptionV8locationAA6SourceV8LocationVvp","s12_RegexParser3ASTV22MatchingOptionSequenceV20resetsCurrentOptionsSbvp","s12_RegexParser3ASTV22MatchingOptionSequenceV6addingSayAC0dE0VGvp","s12_RegexParser3ASTV22MatchingOptionSequenceV8caretLocAA6SourceV8LocationVSgvp","s12_RegexParser3ASTV22MatchingOptionSequenceV8minusLocAA6SourceV8LocationVSgvp","s12_RegexParser3ASTV22MatchingOptionSequenceV8removingSayAC0dE0VGvp","s12_RegexParser3ASTV28GlobalMatchingOptionSequenceV7optionsSayAC0deF0VGvp","s12_RegexParser3ASTV28GlobalMatchingOptionSequenceV8locationAA6SourceV8LocationVvp","s12_RegexParser3ASTV4AtomV13assertionKindAE09AssertionF0OSgvp","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO11scalarValues7UnicodeO6ScalarVSgvp","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO14isQuantifiableSbvp","s12_RegexParser3ASTV4AtomV14EscapedBuiltinO9characterSJvp","s12_RegexParser3ASTV4AtomV14ScalarSequenceV12scalarValuesSays7UnicodeO0E0VGvp","s12_RegexParser3ASTV4AtomV14ScalarSequenceV6triviaSayAC6TriviaVGvp","s12_RegexParser3ASTV4AtomV14ScalarSequenceV7scalarsSayAE0E0VGvp","s12_RegexParser3ASTV4AtomV14isQuantifiableSbvp","s12_RegexParser3ASTV4AtomV17CharacterPropertyV10isInvertedSbvp","s12_RegexParser3ASTV4AtomV17CharacterPropertyV4kindAG4KindOvp","s12_RegexParser3ASTV4AtomV17CharacterPropertyV7isPOSIXSbvp","s12_RegexParser3ASTV4AtomV18literalStringValueSSSgvp","s12_RegexParser3ASTV4AtomV21BacktrackingDirectiveV14isQuantifiableSbvp","s12_RegexParser3ASTV4AtomV21BacktrackingDirectiveV4kindAA6SourceV7LocatedVy_AG4KindOGvp","s12_RegexParser3ASTV4AtomV21BacktrackingDirectiveV4nameAA6SourceV7LocatedVy_SSGSgvp","s12_RegexParser3ASTV4AtomV21literalCharacterValueSJSgvp","s12_RegexParser3ASTV4AtomV31isValidCharacterClassRangeBoundSbvp","s12_RegexParser3ASTV4AtomV4kindAE4KindOvp","s12_RegexParser3ASTV4AtomV6ScalarV5values7UnicodeOAFVvp","s12_RegexParser3ASTV4AtomV6ScalarV8locationAA6SourceV8LocationVvp","s12_RegexParser3ASTV4AtomV7CalloutO12OnigurumaTagV11leftBracketAA6SourceV8LocationVvp","s12_RegexParser3ASTV4AtomV7CalloutO12OnigurumaTagV12rightBracketAA6SourceV8LocationVvp","s12_RegexParser3ASTV4AtomV7CalloutO12OnigurumaTagV4nameAA6SourceV7LocatedVy_SSGvp","s12_RegexParser3ASTV4AtomV7CalloutO14OnigurumaNamedV3tagAG0F3TagVSgvp","s12_RegexParser3ASTV4AtomV7CalloutO14OnigurumaNamedV4argsAI7ArgListVSgvp","s12_RegexParser3ASTV4AtomV7CalloutO14OnigurumaNamedV4nameAA6SourceV7LocatedVy_SSGvp","s12_RegexParser3ASTV4AtomV7CalloutO14OnigurumaNamedV7ArgListV10rightBraceAA6SourceV8LocationVvp","s12_RegexParser3ASTV4AtomV7CalloutO14OnigurumaNamedV7ArgListV4argsSayAA6SourceV7LocatedVy_SSGGvp","s12_RegexParser3ASTV4AtomV7CalloutO14OnigurumaNamedV7ArgListV9leftBraceAA6SourceV8LocationVvp","s12_RegexParser3ASTV4AtomV7CalloutO19OnigurumaOfContentsV10openBracesAA6SourceV8LocationVvp","s12_RegexParser3ASTV4AtomV7CalloutO19OnigurumaOfContentsV11closeBracesAA6SourceV8LocationVvp","s12_RegexParser3ASTV4AtomV7CalloutO19OnigurumaOfContentsV19isDirectionImplicitSbvp","s12_RegexParser3ASTV4AtomV7CalloutO19OnigurumaOfContentsV3tagAG0F3TagVSgvp","s12_RegexParser3ASTV4AtomV7CalloutO19OnigurumaOfContentsV8contentsAA6SourceV7LocatedVy_SSGvp","s12_RegexParser3ASTV4AtomV7CalloutO19OnigurumaOfContentsV9directionAA6SourceV7LocatedVy_AI9DirectionOGvp","s12_RegexParser3ASTV4AtomV7CalloutO4PCREV10isImplicitSbvp","s12_RegexParser3ASTV4AtomV7CalloutO4PCREV3argAA6SourceV7LocatedVy_AI8ArgumentOGvp","s12_RegexParser3ASTV4AtomV8locationAA6SourceV8LocationVvp","s12_RegexParser3ASTV4NodeO10hasCaptureSbvp","s12_RegexParser3ASTV4NodeO14isQuantifiableSbvp","s12_RegexParser3ASTV4NodeO18literalStringValueSSSgvp","s12_RegexParser3ASTV4NodeO8childrenSayAEGSgvp","s12_RegexParser3ASTV4NodeO8isTriviaSbvp","s12_RegexParser3ASTV4NodeO8locationAA6SourceV8LocationVvp","s12_RegexParser3ASTV4rootAC4NodeOvp","s12_RegexParser3ASTV5EmptyV8locationAA6SourceV8LocationVvp","s12_RegexParser3ASTV5GroupV15BalancedCaptureV4dashAA6SourceV8LocationVvp","s12_RegexParser3ASTV5GroupV15BalancedCaptureV4nameAA6SourceV7LocatedVy_SSGSgvp","s12_RegexParser3ASTV5GroupV15BalancedCaptureV9priorNameAA6SourceV7LocatedVy_SSGvp","s12_RegexParser3ASTV5GroupV4KindO010lookaroundE0Sb8forwards_Sb8positivetSgvp","s12_RegexParser3ASTV5GroupV4KindO11isCapturingSbvp","s12_RegexParser3ASTV5GroupV4KindO4nameSSSgvp","s12_RegexParser3ASTV5GroupV4kindAA6SourceV7LocatedVy_AE4KindOGvp","s12_RegexParser3ASTV5GroupV5childAC4NodeOvp","s12_RegexParser3ASTV5GroupV8locationAA6SourceV8LocationVvp","s12_RegexParser3ASTV5QuoteV7literalSSvp","s12_RegexParser3ASTV5QuoteV8locationAA6SourceV8LocationVvp","s12_RegexParser3ASTV6TriviaV8contentsSSvp","s12_RegexParser3ASTV6TriviaV8locationAA6SourceV8LocationVvp","s12_RegexParser3ASTV9ReferenceV14recursionLevelAA6SourceV7LocatedVy_SiGSgvp","s12_RegexParser3ASTV9ReferenceV20recursesWholePatternSbvp","s12_RegexParser3ASTV9ReferenceV4kindAE4KindOvp","s12_RegexParser3ASTV9ReferenceV8innerLocAA6SourceV8LocationVvp","s12_RegexParser6SourceV12LocatedErrorV11descriptionSSvp","s12_RegexParser6SourceV12LocatedErrorV5errorxvp","s12_RegexParser6SourceV12LocatedErrorV8locationAC8LocationVvp","s12_RegexParser6SourceV7LocatedV5valuexvp","s12_RegexParser6SourceV7LocatedV8locationAC8LocationVvp","s12_RegexParser6SourceV8LocationV3endSS5IndexVvp","s12_RegexParser6SourceV8LocationV5rangeSnySS5IndexVGvp","s12_RegexParser6SourceV8LocationV5startSS5IndexVvp","s12_RegexParser6SourceV8LocationV6isFakeSbvp","s12_RegexParser6SourceV8LocationV6isRealSbvp","s12_RegexParser6SourceV8LocationV7isEmptySbvp","s12_RegexParser7AnyTypeV4baseypXpvp","s12_RegexParser16TypeConstructionO05arrayC02ofypXpypXp_tFZ","s12_RegexParser16TypeConstructionO05tupleC02of6labelsypXpxn_SSSgtSKRzypXp7ElementRtzlFZ","s12_RegexParser16TypeConstructionO08optionalC02of5depthypXpxm_SitlFZ","s12_RegexParser16TypeConstructionO08optionalC02ofypXpypXp_tFZ","s12_RegexParser16TypeConstructionO5tuple2ofypxn_tSKRzyp7ElementRtzlFZ","s12_RegexParser11CaptureListV03hasC05namedSbSS_tF","s12_RegexParser11CaptureListV07indexOfC05namedSiSgSS_tF","s12_RegexParser11CaptureListV6appendyyAC0C0VF","s12_RegexParser13PrettyPrinterV10printBlock_14startDelimiter03endH0_ySS_S2SyACzXEtF","s12_RegexParser13PrettyPrinterV13printIndentedyyyACzXEF","s12_RegexParser13PrettyPrinterV13terminateLineyyF","s12_RegexParser13PrettyPrinterV16printAsCanonical_10delimiters13terminateLineyAA3ASTV_S2btF","s12_RegexParser13PrettyPrinterV5printyySSF","s12_RegexParser13PrettyPrinterV6finishSSyF","s12_RegexParser13PrettyPrinterV6indentyyF","s12_RegexParser13PrettyPrinterV6outputyySSF","s12_RegexParser13PrettyPrinterV9printLineyySSSgyXEF","s12_RegexParser3ASTV17renderAsCanonical14showDelimiters13terminateLineSSSb_SbtF","s12_RegexParser3ASTV4NodeO17renderAsCanonical14showDelimiters13terminateLineSSSb_SbtF","s12_RegexParser3ASTV4NodeO2asyxSgxmAA8_ASTNodeRzlF","s12_RegexParser6SourceV7LocatedV3mapyAEy_qd__Gqd__xKXEKlF","s12_RegexParser6SourceV8LocationV5union4withA2E_tF","s12_RegexParser7AnyTypeV4hash4intoys6HasherVz_tF","s12_RegexParser11CaptureListV0C0V2eeoiySbAE_AEtFZ","s12_RegexParser7AnyTypeV2eeoiySbAC_ACtFZ","s12_RegexParser03lexA05start3endSS8contents_AA9DelimiterVSVADtSV_SVtKF","s12_RegexParser19parseWithDelimitersyAA3ASTVx_AA8ASTStageOtKSyRzSs11SubSequenceRtzlF","s12_RegexParser5parseyAA3ASTVx_AA8ASTStageOAA13SyntaxOptionsVtKSyRzSs11SubSequenceRtzlF","s12_RegexParser8validateyyAA3ASTVKF","s12_RegexParser07currentA20LiteralFormatVersionSivp","s12_RegexParser14SourceLocationa","s12_RegexParser3ASTV7Locateda","s12_RegexParser6SourceV4Chara","s12_RegexParser6SourceV5Inputa","s12_RegexParser6SourceV8Positiona","s12_RegexParser7Offsetsa","ss7UnicodeO12_RegexParserE13POSIXPropertyO","ss7UnicodeO12_RegexParserE14BinaryPropertyO","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO","ss7UnicodeO12_RegexParserE5BlockO","ss7UnicodeO12_RegexParserE6ScriptO","ss7UnicodeO6ScalarV12_RegexParserE10AllScalarsV","ss7UnicodeO12_RegexParserE13POSIXPropertyO4wordyA2EmF","ss7UnicodeO12_RegexParserE13POSIXPropertyO5alnumyA2EmF","ss7UnicodeO12_RegexParserE13POSIXPropertyO5blankyA2EmF","ss7UnicodeO12_RegexParserE13POSIXPropertyO5graphyA2EmF","ss7UnicodeO12_RegexParserE13POSIXPropertyO5printyA2EmF","ss7UnicodeO12_RegexParserE13POSIXPropertyO6xdigityA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO03idsD8OperatoryA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO10alphabeticyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO10deprecatedyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO10idContinueyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO10softDottedyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO10whitespaceyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO11bidiControlyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO11ideographicyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO11joinControlyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO11xidContinueyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO12bidiMirroredyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO12expandsOnNFCyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO12expandsOnNFDyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO12graphemeBaseyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO12graphemeLinkyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO12otherIDStartyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO13asciiHexDigityA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO13caseIgnorableyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO13emojiModifieryA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO13expandsOnNFKCyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO13expandsOnNFKDyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO13patternSyntaxyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO13quotationMarkyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO14emojiComponentyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO14otherLowercaseyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO14otherUppercaseyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO15otherAlphabeticyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO15otherIDContinueyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO16graphemeExtendedyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO16sentenceTerminalyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO16unifiedIdiographyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO17emojiModifierBaseyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO17emojiPresentationyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO17patternWhitespaceyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO17regionalIndicatoryA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO17variationSelectoryA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO18idsTrinaryOperatoryA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO19terminalPunctuationyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO20compositionExclusionyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO20extendedPictographicyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO21changesWhenCasefoldedyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO21changesWhenCasemappedyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO21changesWhenLowercasedyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO21changesWhenTitlecasedyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO21changesWhenUppercasedyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO21logicalOrderExceptionyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO21noncharacterCodePointyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO21otherGraphemeExtendedyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO24fullCompositionExclusionyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO25changesWhenNFKCCasefoldedyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO25defaultIgnorableCodePointyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO26prependedConcatenationMarkyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO30otherDefaultIgnorableCodePointyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO4dashyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO4mathyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO5casedyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO5emojiyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO6hyphenyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO7idStartyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO7radicalyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO8extenderyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO8hexDigityA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO8xidStartyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO9diacraticyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO9lowercaseyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO9otherMathyA2EmF","ss7UnicodeO12_RegexParserE14BinaryPropertyO9uppercaseyA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO10mathSymbolyA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO10privateUseyA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO10unassignedyA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO11casedLetteryA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO11otherLetteryA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO11otherNumberyA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO11otherSymbolyA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO11punctuationyA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO11spacingMarkyA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO12letterNumberyA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO13decimalNumberyA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO13enclosingMarkyA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO13lineSeparatoryA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO14currencySymbolyA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO14modifierLetteryA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO14modifierSymbolyA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO14nonspacingMarkyA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO14spaceSeparatoryA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO15dashPunctuationyA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO15lowercaseLetteryA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO15openPunctuationyA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO15titlecaseLetteryA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO15uppercaseLetteryA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO16closePunctuationyA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO16finalPunctuationyA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO16otherPunctuationyA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO18initialPunctuationyA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO18paragraphSeparatoryA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO20connectorPunctuationyA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO4markyA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO5otheryA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO6formatyA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO6letteryA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO6numberyA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO6symbolyA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO7controlyA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO9separatoryA2EmF","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO9surrogateyA2EmF","ss7UnicodeO12_RegexParserE5BlockO02noD0yA2EmF","ss7UnicodeO12_RegexParserE5BlockO10basicLatinyA2EmF","ss7UnicodeO12_RegexParserE5BlockO10boxDrawingyA2EmF","ss7UnicodeO12_RegexParserE5BlockO10chorasmianyA2EmF","ss7UnicodeO12_RegexParserE5BlockO10cjkStrokesyA2EmF","ss7UnicodeO12_RegexParserE5BlockO10devanagariyA2EmF","ss7UnicodeO12_RegexParserE5BlockO10divesAkuruyA2EmF","ss7UnicodeO12_RegexParserE5BlockO10glagoliticyA2EmF","ss7UnicodeO12_RegexParserE5BlockO10hangulJamoyA2EmF","ss7UnicodeO12_RegexParserE5BlockO10kharoshthiyA2EmF","ss7UnicodeO12_RegexParserE5BlockO10manichaeanyA2EmF","ss7UnicodeO12_RegexParserE5BlockO10oldPersianyA2EmF","ss7UnicodeO12_RegexParserE5BlockO10oldSogdianyA2EmF","ss7UnicodeO12_RegexParserE5BlockO10phoenicianyA2EmF","ss7UnicodeO12_RegexParserE5BlockO10saurashtrayA2EmF","ss7UnicodeO12_RegexParserE5BlockO10warangCitiyA2EmF","ss7UnicodeO12_RegexParserE5BlockO10yiRadicalsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO11cyproMinoanyA2EmF","ss7UnicodeO12_RegexParserE5BlockO11dominoTilesyA2EmF","ss7UnicodeO12_RegexParserE5BlockO11medefaidrinyA2EmF","ss7UnicodeO12_RegexParserE5BlockO11meeteiMayekyA2EmF","ss7UnicodeO12_RegexParserE5BlockO11nandinagariyA2EmF","ss7UnicodeO12_RegexParserE5BlockO11numberFormsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO11pahawhHmongyA2EmF","ss7UnicodeO12_RegexParserE5BlockO11soraSompengyA2EmF","ss7UnicodeO12_RegexParserE5BlockO11sylotiNagriyA2EmF","ss7UnicodeO12_RegexParserE5BlockO11yiSyllablesyA2EmF","ss7UnicodeO12_RegexParserE5BlockO12chessSymbolsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO12gunjalaGondiyA2EmF","ss7UnicodeO12_RegexParserE5BlockO12khmerSymbolsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO12mahjongTilesyA2EmF","ss7UnicodeO12_RegexParserE5BlockO12masaramGondiyA2EmF","ss7UnicodeO12_RegexParserE5BlockO12mendeKikakuiyA2EmF","ss7UnicodeO12_RegexParserE5BlockO12oldHungarianyA2EmF","ss7UnicodeO12_RegexParserE5BlockO12phaistosDiscyA2EmF","ss7UnicodeO12_RegexParserE5BlockO12playingCardsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO13aegeanNumbersyA2EmF","ss7UnicodeO12_RegexParserE5BlockO13blockElementsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO13greekExtendedyA2EmF","ss7UnicodeO12_RegexParserE5BlockO13ipaExtensionsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO13kanaExtendedAyA2EmF","ss7UnicodeO12_RegexParserE5BlockO13kanaExtendedByA2EmF","ss7UnicodeO12_RegexParserE5BlockO13lowSurrogatesyA2EmF","ss7UnicodeO12_RegexParserE5BlockO13mayanNumeralsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO13verticalFormsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO14ancientSymbolsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO14greekAndCopticyA2EmF","ss7UnicodeO12_RegexParserE5BlockO14hanifiRohingyayA2EmF","ss7UnicodeO12_RegexParserE5BlockO14highSurrogatesyA2EmF","ss7UnicodeO12_RegexParserE5BlockO14kanaSupplementyA2EmF","ss7UnicodeO12_RegexParserE5BlockO14kangxiRadicalsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO14latinExtendedAyA2EmF","ss7UnicodeO12_RegexParserE5BlockO14latinExtendedByA2EmF","ss7UnicodeO12_RegexParserE5BlockO14latinExtendedCyA2EmF","ss7UnicodeO12_RegexParserE5BlockO14latinExtendedDyA2EmF","ss7UnicodeO12_RegexParserE5BlockO14latinExtendedEyA2EmF","ss7UnicodeO12_RegexParserE5BlockO14latinExtendedFyA2EmF","ss7UnicodeO12_RegexParserE5BlockO14latinExtendedGyA2EmF","ss7UnicodeO12_RegexParserE5BlockO14lisuSupplementyA2EmF","ss7UnicodeO12_RegexParserE5BlockO14musicalSymbolsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO14privateUseAreayA2EmF","ss7UnicodeO12_RegexParserE5BlockO14psalterPahlaviyA2EmF","ss7UnicodeO12_RegexParserE5BlockO15arabicExtendedAyA2EmF","ss7UnicodeO12_RegexParserE5BlockO15arabicExtendedByA2EmF","ss7UnicodeO12_RegexParserE5BlockO15bamumSupplementyA2EmF","ss7UnicodeO12_RegexParserE5BlockO15braillePatternsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO15controlPicturesyA2EmF","ss7UnicodeO12_RegexParserE5BlockO15currencySymbolsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO15geometricShapesyA2EmF","ss7UnicodeO12_RegexParserE5BlockO15hangulSyllablesyA2EmF","ss7UnicodeO12_RegexParserE5BlockO15imperialAramaicyA2EmF","ss7UnicodeO12_RegexParserE5BlockO15meroiticCursiveyA2EmF","ss7UnicodeO12_RegexParserE5BlockO15oldNorthArabianyA2EmF","ss7UnicodeO12_RegexParserE5BlockO15oldSouthArabianyA2EmF","ss7UnicodeO12_RegexParserE5BlockO15tamilSupplementyA2EmF","ss7UnicodeO12_RegexParserE5BlockO15vedicExtensionsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO15zanabazarSquareyA2EmF","ss7UnicodeO12_RegexParserE5BlockO16arabicSupplementyA2EmF","ss7UnicodeO12_RegexParserE5BlockO16bopomofoExtendedyA2EmF","ss7UnicodeO12_RegexParserE5BlockO16cjkCompatibilityyA2EmF","ss7UnicodeO12_RegexParserE5BlockO16cypriotSyllabaryyA2EmF","ss7UnicodeO12_RegexParserE5BlockO16ethiopicExtendedyA2EmF","ss7UnicodeO12_RegexParserE5BlockO16georgianExtendedyA2EmF","ss7UnicodeO12_RegexParserE5BlockO16latin1SupplementyA2EmF","ss7UnicodeO12_RegexParserE5BlockO16linearBIdeogramsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO16linearBSyllabaryyA2EmF","ss7UnicodeO12_RegexParserE5BlockO16myanmarExtendedAyA2EmF","ss7UnicodeO12_RegexParserE5BlockO16myanmarExtendedByA2EmF","ss7UnicodeO12_RegexParserE5BlockO16syriacSupplementyA2EmF","ss7UnicodeO12_RegexParserE5BlockO16tangutComponentsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO16tangutSupplementyA2EmF","ss7UnicodeO12_RegexParserE5BlockO17alchemicalSymbolsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO17caucasianAlbanianyA2EmF","ss7UnicodeO12_RegexParserE5BlockO17cyrillicExtendedAyA2EmF","ss7UnicodeO12_RegexParserE5BlockO17cyrillicExtendedByA2EmF","ss7UnicodeO12_RegexParserE5BlockO17cyrillicExtendedCyA2EmF","ss7UnicodeO12_RegexParserE5BlockO17ethiopicExtendedAyA2EmF","ss7UnicodeO12_RegexParserE5BlockO17ethiopicExtendedByA2EmF","ss7UnicodeO12_RegexParserE5BlockO17indicSiyaqNumbersyA2EmF","ss7UnicodeO12_RegexParserE5BlockO17khitanSmallScriptyA2EmF","ss7UnicodeO12_RegexParserE5BlockO17letterLikeSymbolsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO17smallFormVariantsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO17suttonSignwritingyA2EmF","ss7UnicodeO12_RegexParserE5BlockO18cherokeeSupplementyA2EmF","ss7UnicodeO12_RegexParserE5BlockO18combiningHalfMarksyA2EmF","ss7UnicodeO12_RegexParserE5BlockO18copticEpactNumbersyA2EmF","ss7UnicodeO12_RegexParserE5BlockO18cyrillicSupplementyA2EmF","ss7UnicodeO12_RegexParserE5BlockO18devanagariExtendedyA2EmF","ss7UnicodeO12_RegexParserE5BlockO18ethiopicSupplementyA2EmF","ss7UnicodeO12_RegexParserE5BlockO18generalPunctuationyA2EmF","ss7UnicodeO12_RegexParserE5BlockO18georgianSupplementyA2EmF","ss7UnicodeO12_RegexParserE5BlockO18ornamentalDingbatsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO18phoneticExtensionsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO18rumiNumeralSymbolsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO18smallKanaExtensionyA2EmF","ss7UnicodeO12_RegexParserE5BlockO18taiXuanJingSymbolsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO18variationSelectorsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO19ancientGreekNumbersyA2EmF","ss7UnicodeO12_RegexParserE5BlockO19countingRodNumeralsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO19egyptianHieroglyphsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO19hangulJamoExtendedAyA2EmF","ss7UnicodeO12_RegexParserE5BlockO19hangulJamoExtendedByA2EmF","ss7UnicodeO12_RegexParserE5BlockO19meroiticHieroglyphsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO19modifierToneLettersyA2EmF","ss7UnicodeO12_RegexParserE5BlockO19mongolianSupplementyA2EmF","ss7UnicodeO12_RegexParserE5BlockO19ottomanSiyaqNumbersyA2EmF","ss7UnicodeO12_RegexParserE5BlockO19sundaneseSupplementyA2EmF","ss7UnicodeO12_RegexParserE5BlockO19supplementalArrowsAyA2EmF","ss7UnicodeO12_RegexParserE5BlockO19supplementalArrowsByA2EmF","ss7UnicodeO12_RegexParserE5BlockO19supplementalArrowsCyA2EmF","ss7UnicodeO12_RegexParserE5BlockO20anatolianHieroglyphsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO20cjkUnifiedIdeographsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO20glagoliticSupplementyA2EmF","ss7UnicodeO12_RegexParserE5BlockO20inscriptionalPahlaviyA2EmF","ss7UnicodeO12_RegexParserE5BlockO20miscellaneousSymbolsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO20nyiakengPuachueHmongyA2EmF","ss7UnicodeO12_RegexParserE5BlockO21cjkRadicalsSupplementyA2EmF","ss7UnicodeO12_RegexParserE5BlockO21cjkcompatibilityFormsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO21enclosedAlphanumericsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO21inscriptionalParthianyA2EmF","ss7UnicodeO12_RegexParserE5BlockO21mathematicalOperatorsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO21meeteiMayekExtensionsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO21sinhalaArchaicNumbersyA2EmF","ss7UnicodeO12_RegexParserE5BlockO21yijingHexagramSymbolsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO22commonIndicNumberFormsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO22earlyDynasticCuneiformyA2EmF","ss7UnicodeO12_RegexParserE5BlockO22miscellaneousTechnicalyA2EmF","ss7UnicodeO12_RegexParserE5BlockO22spacingModifierLettersyA2EmF","ss7UnicodeO12_RegexParserE5BlockO22transportAndMapSymbolsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO23byzantineMusicalSymbolsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO23geometricShapesExtendedyA2EmF","ss7UnicodeO12_RegexParserE5BlockO23hangulCompatibilityJamoyA2EmF","ss7UnicodeO12_RegexParserE5BlockO23latinExtendedAdditionalyA2EmF","ss7UnicodeO12_RegexParserE5BlockO23shorthandFormatControlsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO23supplementalPunctuationyA2EmF","ss7UnicodeO12_RegexParserE5BlockO23znamennyMusicalNotationyA2EmF","ss7UnicodeO12_RegexParserE5BlockO24arabicPresentationFormsAyA2EmF","ss7UnicodeO12_RegexParserE5BlockO24arabicPresentationFormsByA2EmF","ss7UnicodeO12_RegexParserE5BlockO24cjkSymbolsAndPunctuationyA2EmF","ss7UnicodeO12_RegexParserE5BlockO24highPrivateUseSurrogatesyA2EmF","ss7UnicodeO12_RegexParserE5BlockO25combiningDiacriticalMarksyA2EmF","ss7UnicodeO12_RegexParserE5BlockO25superscriptsAndSubscriptsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO25symbolsForLegacyComputingyA2EmF","ss7UnicodeO12_RegexParserE5BlockO26cjkCompatibilityIdeographsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO26halfwidthAndFullwidthFormsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO26katakanaPhoneticExtensionsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO27alphabeticPresentationFormsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO27ancientGreekMusicalNotationyA2EmF","ss7UnicodeO12_RegexParserE5BlockO27enclosedCJKLettersAndMonthsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO27opticalCharacterRecognitionyA2EmF","ss7UnicodeO12_RegexParserE5BlockO28phoneticExtensionsSupplementyA2EmF","ss7UnicodeO12_RegexParserE5BlockO28supplementaryPrivateUseAreaAyA2EmF","ss7UnicodeO12_RegexParserE5BlockO28supplementaryPrivateUseAreaByA2EmF","ss7UnicodeO12_RegexParserE5BlockO28variationSelectorsSupplementyA2EmF","ss7UnicodeO12_RegexParserE5BlockO29enclosedIdeographicSupplementyA2EmF","ss7UnicodeO12_RegexParserE5BlockO29miscellaneousSymbolsAndArrowsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO30cjkUnifiedIdeographsExtensionAyA2EmF","ss7UnicodeO12_RegexParserE5BlockO30cjkUnifiedIdeographsExtensionByA2EmF","ss7UnicodeO12_RegexParserE5BlockO30cjkUnifiedIdeographsExtensionCyA2EmF","ss7UnicodeO12_RegexParserE5BlockO30cjkUnifiedIdeographsExtensionDyA2EmF","ss7UnicodeO12_RegexParserE5BlockO30cjkUnifiedIdeographsExtensionEyA2EmF","ss7UnicodeO12_RegexParserE5BlockO30cjkUnifiedIdeographsExtensionFyA2EmF","ss7UnicodeO12_RegexParserE5BlockO30cjkUnifiedIdeographsExtensionGyA2EmF","ss7UnicodeO12_RegexParserE5BlockO30cuneiformNumbersAndPunctuationyA2EmF","ss7UnicodeO12_RegexParserE5BlockO30enclosedAlphanumericSupplementyA2EmF","ss7UnicodeO12_RegexParserE5BlockO30symbolsAndPictographsExtendedAyA2EmF","ss7UnicodeO12_RegexParserE5BlockO31mathematicalAlphanumericSymbolsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO32egyptianHieroglyphFormatControlsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO32ideographicDescriptionCharactersyA2EmF","ss7UnicodeO12_RegexParserE5BlockO32ideographicSymbolsAndPunctuationyA2EmF","ss7UnicodeO12_RegexParserE5BlockO33combiningDiacriticalMarksExtendedyA2EmF","ss7UnicodeO12_RegexParserE5BlockO33miscellaneousMathematicalSymbolsAyA2EmF","ss7UnicodeO12_RegexParserE5BlockO33miscellaneousMathematicalSymbolsByA2EmF","ss7UnicodeO12_RegexParserE5BlockO33supplementalMathematicalOperatorsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO33supplementalSymbolsAndPictographsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO34miscellaneousSymbolsandPictographsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO34unifiedCanadianAboriginalSyllabicsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO35arabicMathematicalAlphabeticSymbolsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO35combiningDiacriticalMarksForSymbolsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO35combiningDiacriticalMarksSupplementyA2EmF","ss7UnicodeO12_RegexParserE5BlockO36cjkCompatibilityIdeographsSupplementyA2EmF","ss7UnicodeO12_RegexParserE5BlockO3laoyA2EmF","ss7UnicodeO12_RegexParserE5BlockO3mroyA2EmF","ss7UnicodeO12_RegexParserE5BlockO3nkoyA2EmF","ss7UnicodeO12_RegexParserE5BlockO3vaiyA2EmF","ss7UnicodeO12_RegexParserE5BlockO42unifiedCanadianAboriginalSyllabicsExtendedyA2EmF","ss7UnicodeO12_RegexParserE5BlockO43unifiedCanadianAboriginalSyllabicsExtendedAyA2EmF","ss7UnicodeO12_RegexParserE5BlockO4ahomyA2EmF","ss7UnicodeO12_RegexParserE5BlockO4chamyA2EmF","ss7UnicodeO12_RegexParserE5BlockO4lisuyA2EmF","ss7UnicodeO12_RegexParserE5BlockO4miaoyA2EmF","ss7UnicodeO12_RegexParserE5BlockO4modiyA2EmF","ss7UnicodeO12_RegexParserE5BlockO4newayA2EmF","ss7UnicodeO12_RegexParserE5BlockO4tagsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO4thaiyA2EmF","ss7UnicodeO12_RegexParserE5BlockO4totoyA2EmF","ss7UnicodeO12_RegexParserE5BlockO5adlamyA2EmF","ss7UnicodeO12_RegexParserE5BlockO5bamumyA2EmF","ss7UnicodeO12_RegexParserE5BlockO5batakyA2EmF","ss7UnicodeO12_RegexParserE5BlockO5buhidyA2EmF","ss7UnicodeO12_RegexParserE5BlockO5dograyA2EmF","ss7UnicodeO12_RegexParserE5BlockO5khmeryA2EmF","ss7UnicodeO12_RegexParserE5BlockO5limbuyA2EmF","ss7UnicodeO12_RegexParserE5BlockO5nushuyA2EmF","ss7UnicodeO12_RegexParserE5BlockO5oghamyA2EmF","ss7UnicodeO12_RegexParserE5BlockO5oriyayA2EmF","ss7UnicodeO12_RegexParserE5BlockO5osageyA2EmF","ss7UnicodeO12_RegexParserE5BlockO5runicyA2EmF","ss7UnicodeO12_RegexParserE5BlockO5taiLeyA2EmF","ss7UnicodeO12_RegexParserE5BlockO5takriyA2EmF","ss7UnicodeO12_RegexParserE5BlockO5tamilyA2EmF","ss7UnicodeO12_RegexParserE5BlockO6arabicyA2EmF","ss7UnicodeO12_RegexParserE5BlockO6arrowsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO6brahmiyA2EmF","ss7UnicodeO12_RegexParserE5BlockO6carianyA2EmF","ss7UnicodeO12_RegexParserE5BlockO6chakmayA2EmF","ss7UnicodeO12_RegexParserE5BlockO6copticyA2EmF","ss7UnicodeO12_RegexParserE5BlockO6gothicyA2EmF","ss7UnicodeO12_RegexParserE5BlockO6hatranyA2EmF","ss7UnicodeO12_RegexParserE5BlockO6hebrewyA2EmF","ss7UnicodeO12_RegexParserE5BlockO6kaithiyA2EmF","ss7UnicodeO12_RegexParserE5BlockO6kanbunyA2EmF","ss7UnicodeO12_RegexParserE5BlockO6khojkiyA2EmF","ss7UnicodeO12_RegexParserE5BlockO6lepchayA2EmF","ss7UnicodeO12_RegexParserE5BlockO6lycianyA2EmF","ss7UnicodeO12_RegexParserE5BlockO6lydianyA2EmF","ss7UnicodeO12_RegexParserE5BlockO6rejangyA2EmF","ss7UnicodeO12_RegexParserE5BlockO6syriacyA2EmF","ss7UnicodeO12_RegexParserE5BlockO6tangsayA2EmF","ss7UnicodeO12_RegexParserE5BlockO6tangutyA2EmF","ss7UnicodeO12_RegexParserE5BlockO6teluguyA2EmF","ss7UnicodeO12_RegexParserE5BlockO6thaanayA2EmF","ss7UnicodeO12_RegexParserE5BlockO6wanchoyA2EmF","ss7UnicodeO12_RegexParserE5BlockO6yezidiyA2EmF","ss7UnicodeO12_RegexParserE5BlockO7avestanyA2EmF","ss7UnicodeO12_RegexParserE5BlockO7bengaliyA2EmF","ss7UnicodeO12_RegexParserE5BlockO7deseretyA2EmF","ss7UnicodeO12_RegexParserE5BlockO7elbasanyA2EmF","ss7UnicodeO12_RegexParserE5BlockO7elymaicyA2EmF","ss7UnicodeO12_RegexParserE5BlockO7granthayA2EmF","ss7UnicodeO12_RegexParserE5BlockO7hanunooyA2EmF","ss7UnicodeO12_RegexParserE5BlockO7kannadayA2EmF","ss7UnicodeO12_RegexParserE5BlockO7kayahLiyA2EmF","ss7UnicodeO12_RegexParserE5BlockO7linearAyA2EmF","ss7UnicodeO12_RegexParserE5BlockO7makasaryA2EmF","ss7UnicodeO12_RegexParserE5BlockO7mandaicyA2EmF","ss7UnicodeO12_RegexParserE5BlockO7marchenyA2EmF","ss7UnicodeO12_RegexParserE5BlockO7multaniyA2EmF","ss7UnicodeO12_RegexParserE5BlockO7myanmaryA2EmF","ss7UnicodeO12_RegexParserE5BlockO7olChikiyA2EmF","ss7UnicodeO12_RegexParserE5BlockO7osmanyayA2EmF","ss7UnicodeO12_RegexParserE5BlockO7phagsPAyA2EmF","ss7UnicodeO12_RegexParserE5BlockO7sharadayA2EmF","ss7UnicodeO12_RegexParserE5BlockO7shavianyA2EmF","ss7UnicodeO12_RegexParserE5BlockO7siddhamyA2EmF","ss7UnicodeO12_RegexParserE5BlockO7sinhalayA2EmF","ss7UnicodeO12_RegexParserE5BlockO7sogdianyA2EmF","ss7UnicodeO12_RegexParserE5BlockO7soyomboyA2EmF","ss7UnicodeO12_RegexParserE5BlockO7tagalogyA2EmF","ss7UnicodeO12_RegexParserE5BlockO7taiThamyA2EmF","ss7UnicodeO12_RegexParserE5BlockO7taiVietyA2EmF","ss7UnicodeO12_RegexParserE5BlockO7tibetanyA2EmF","ss7UnicodeO12_RegexParserE5BlockO7tirhutayA2EmF","ss7UnicodeO12_RegexParserE5BlockO8armenianyA2EmF","ss7UnicodeO12_RegexParserE5BlockO8balineseyA2EmF","ss7UnicodeO12_RegexParserE5BlockO8bassaVahyA2EmF","ss7UnicodeO12_RegexParserE5BlockO8bopomofoyA2EmF","ss7UnicodeO12_RegexParserE5BlockO8bugineseyA2EmF","ss7UnicodeO12_RegexParserE5BlockO8cherokeeyA2EmF","ss7UnicodeO12_RegexParserE5BlockO8cyrillicyA2EmF","ss7UnicodeO12_RegexParserE5BlockO8dingbatsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO8duployanyA2EmF","ss7UnicodeO12_RegexParserE5BlockO8ethiopicyA2EmF","ss7UnicodeO12_RegexParserE5BlockO8georgianyA2EmF","ss7UnicodeO12_RegexParserE5BlockO8gujaratiyA2EmF","ss7UnicodeO12_RegexParserE5BlockO8gurmukhiyA2EmF","ss7UnicodeO12_RegexParserE5BlockO8hiraganayA2EmF","ss7UnicodeO12_RegexParserE5BlockO8javaneseyA2EmF","ss7UnicodeO12_RegexParserE5BlockO8katakanayA2EmF","ss7UnicodeO12_RegexParserE5BlockO8mahajaniyA2EmF","ss7UnicodeO12_RegexParserE5BlockO8specialsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO8tagbanwayA2EmF","ss7UnicodeO12_RegexParserE5BlockO8tifinaghyA2EmF","ss7UnicodeO12_RegexParserE5BlockO8ugariticyA2EmF","ss7UnicodeO12_RegexParserE5BlockO8vithkuqiyA2EmF","ss7UnicodeO12_RegexParserE5BlockO9bhaiksukiyA2EmF","ss7UnicodeO12_RegexParserE5BlockO9cuneiformyA2EmF","ss7UnicodeO12_RegexParserE5BlockO9emoticonsyA2EmF","ss7UnicodeO12_RegexParserE5BlockO9khudawadiyA2EmF","ss7UnicodeO12_RegexParserE5BlockO9malayalamyA2EmF","ss7UnicodeO12_RegexParserE5BlockO9mongolianyA2EmF","ss7UnicodeO12_RegexParserE5BlockO9nabataeanyA2EmF","ss7UnicodeO12_RegexParserE5BlockO9newTailueyA2EmF","ss7UnicodeO12_RegexParserE5BlockO9oldItalicyA2EmF","ss7UnicodeO12_RegexParserE5BlockO9oldPermicyA2EmF","ss7UnicodeO12_RegexParserE5BlockO9oldTurkicyA2EmF","ss7UnicodeO12_RegexParserE5BlockO9oldUyghuryA2EmF","ss7UnicodeO12_RegexParserE5BlockO9palmyreneyA2EmF","ss7UnicodeO12_RegexParserE5BlockO9pauCinHauyA2EmF","ss7UnicodeO12_RegexParserE5BlockO9samaritanyA2EmF","ss7UnicodeO12_RegexParserE5BlockO9sundaneseyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO011khitanSmallD0yA2EmF","ss7UnicodeO12_RegexParserE6ScriptO10chorasmianyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO10devanagariyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO10divesAkuruyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO10glagoliticyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO10kharoshthiyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO10manichaeanyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO10oldPersianyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO10oldSogdianyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO10phoenicianyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO10saurashtrayA2EmF","ss7UnicodeO12_RegexParserE6ScriptO10warangCitiyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO11cyproMinoanyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO11medefaidrinyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO11meeteiMayekyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO11nandinagariyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO11pahawhHmongyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO11signWritingyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO11soraSompengyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO11sylotiNagriyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO12gunjalaGondiyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO12masaramGondiyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO12mendeKikakuiyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO12oldHungarianyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO14hanifiRohingyayA2EmF","ss7UnicodeO12_RegexParserE6ScriptO14psalterPahlaviyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO15imperialAramaicyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO15meroiticCursiveyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO15oldNorthArabianyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO15oldSouthArabianyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO15zanabazarSquareyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO17caucasianAlbanianyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO18canadianAboriginalyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO18katakanaOrHiraganayA2EmF","ss7UnicodeO12_RegexParserE6ScriptO19egyptianHieroglyphsyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO19meroiticHieroglyphsyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO20anatolianHieroglyphsyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO20inscriptionalPahlaviyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO20nyiakengPuachueHmongyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO21inscriptionalParthianyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO2yiyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO3hanyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO3laoyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO3mroyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO3nkoyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO3vaiyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO4ahomyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO4chamyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO4lisuyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO4miaoyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO4modiyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO4newayA2EmF","ss7UnicodeO12_RegexParserE6ScriptO4thaiyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO4totoyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO5adlamyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO5bamumyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO5batakyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO5buhidyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO5dograyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO5greekyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO5khmeryA2EmF","ss7UnicodeO12_RegexParserE6ScriptO5latinyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO5limbuyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO5nushuyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO5oghamyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO5oriyayA2EmF","ss7UnicodeO12_RegexParserE6ScriptO5osageyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO5runicyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO5taiLeyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO5takriyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO5tamilyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO6arabicyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO6brahmiyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO6carianyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO6chakmayA2EmF","ss7UnicodeO12_RegexParserE6ScriptO6commonyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO6copticyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO6gothicyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO6hangulyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO6hatranyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO6hebrewyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO6kaithiyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO6khojkiyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO6lepchayA2EmF","ss7UnicodeO12_RegexParserE6ScriptO6lycianyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO6lydianyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO6rejangyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO6syriacyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO6tangsayA2EmF","ss7UnicodeO12_RegexParserE6ScriptO6tangutyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO6teluguyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO6thaanayA2EmF","ss7UnicodeO12_RegexParserE6ScriptO6wanchoyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO6yezidiyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7avestanyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7bengaliyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7brailleyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7cypriotyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7deseretyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7elbasanyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7elymaicyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7granthayA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7hanunooyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7kannadayA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7kayahLiyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7linearAyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7linearByA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7makasaryA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7mandaicyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7marchenyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7multaniyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7myanmaryA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7olChikiyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7osmanyayA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7phagsPayA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7sharadayA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7shavianyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7siddhamyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7sinhalayA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7sogdianyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7soyomboyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7tagalogyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7taiThamyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7taiVietyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7tibetanyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7tirhutayA2EmF","ss7UnicodeO12_RegexParserE6ScriptO7unknownyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO8armenianyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO8balineseyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO8bassaVahyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO8bopomofoyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO8bugineseyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO8cherokeeyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO8cyrillicyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO8duployanyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO8ethiopicyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO8georgianyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO8gujaratiyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO8gurmukhiyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO8hiraganayA2EmF","ss7UnicodeO12_RegexParserE6ScriptO8javaneseyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO8katakanayA2EmF","ss7UnicodeO12_RegexParserE6ScriptO8mahajaniyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO8tagbanwayA2EmF","ss7UnicodeO12_RegexParserE6ScriptO8tifinaghyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO8ugariticyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO8vithkuqiyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO9bhaiksukiyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO9cuneiformyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO9inheritedyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO9khudawadiyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO9malayalamyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO9mongolianyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO9nabataeanyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO9newTaiLueyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO9oldItalicyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO9oldPermicyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO9oldTurkicyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO9oldUyghuryA2EmF","ss7UnicodeO12_RegexParserE6ScriptO9palmyreneyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO9pauCinHauyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO9samaritanyA2EmF","ss7UnicodeO12_RegexParserE6ScriptO9sundaneseyA2EmF","sSS12_RegexParserEySSxcSlRzs7UnicodeO6ScalarV7ElementRtzlufc","sSz12_RegexParserE9assertingxqd___tcSzRd__lufc","ss7UnicodeO12_RegexParserE13POSIXPropertyO8rawValueAESgSS_tcfc","ss7UnicodeO12_RegexParserE14BinaryPropertyO8rawValueAESgSS_tcfc","ss7UnicodeO12_RegexParserE23ExtendedGeneralCategoryO8rawValueAESgSS_tcfc","ss7UnicodeO12_RegexParserE5BlockO8rawValueAESgSS_tcfc","ss7UnicodeO12_RegexParserE6ScriptO8rawValueAESgSS_tcfc","ss7UnicodeO6ScalarV12_RegexParserE10AllScalarsVyADSicip","ss7UnicodeO6ScalarV12_RegexParserE10allScalarsAdEE03AllF0VvpZ","sSJ12_RegexParserE12isOctalDigitSbvp","sSJ12_RegexParserE15isWordCharacterSbvp","sSJ12_RegexParserE19isPatternWhitespaceSbvp","sSn12_RegexParserE11destructurex10lowerBound_x05upperE0tvp","ss23CustomStringConvertibleP12_RegexParserE21halfWidthCornerQuotedSSvp","ss7UnicodeO6ScalarV12_RegexParserE10AllScalarsV10startIndexSivp","ss7UnicodeO6ScalarV12_RegexParserE10AllScalarsV8endIndexSivp","ss7UnicodeO6ScalarV12_RegexParserE16isPrintableASCIISbvp","ss12MemoryLayoutO12_RegexParserE17tupleElementIndex2of12elementTypesSiSgs14PartialKeyPathCyxG_qd__tSlRd__ypXp0F0Rtd__lFZ","sSK12_RegexParserE10mapOffsetsySny5IndexQzGSi5lower_Si5uppert_tF","sSK12_RegexParserE14flatmapOffsetsySny5IndexQzGSi5lower_Si5uppertSgF","sSS12_RegexParserE27isOnGraphemeClusterBoundaryySbSS5IndexVF","sST12_RegexParserE3allyS2b7ElementQzXEF","sST12_RegexParserE3anyyS2b7ElementQzXEF","sST12_RegexParserE4noneyS2b7ElementQzXEF","sSl12_RegexParserE15convertByOffset_2in5IndexQyd__ADQz_qd__tSlRd__lF","sSl12_RegexParserE15convertByOffset_2inSny5IndexQyd__GSnyADQzG_qd__tSlRd__lF","sSl12_RegexParserE5index8atOffset5IndexQzSi_tF","sSl12_RegexParserE5split6around11SubSequenceQz6prefix_A2E6suffixtSny5IndexQzG_tF","sSl12_RegexParserE6offset2ofSi5IndexQz_tF","sSl12_RegexParserE6offset7ofIndexSi0E0Qz_tF","sSl12_RegexParserE7offsets2ofSnySiGSny5IndexQzG_tF","sSl12_RegexParserSQ7ElementRpzrlE13tryDropPrefixy11SubSequenceQzSgqd__SlRd__ABQyd__ACRSlF","sSl12_RegexParserSQ7ElementRpzrlE13tryDropSuffixy11SubSequenceQzSgqd__SlRd__ABQyd__ACRSlF","sSv12_RegexParserE9roundedUp13toAlignmentOfSvxm_tlF","s12_RegexParser10_ASTParentP8childrenSayAA3ASTV4NodeOGvp","s12_RegexParser8_ASTNodeP8locationAA6SourceV8LocationVvp","s12_RegexParser9_TreeNodeP8childrenSayxGSgvp","sSH","sSH4hash4intoys6HasherVz_tF","sSJ","sSK","sSK9formIndex6beforey0B0Qzz_tF","sSKsE10difference4from2bys20CollectionDifferenceVy7ElementQzGqd___SbAG_AGtXEtSKRd__AFQyd__AGRSlF","sSKsE4last5where7ElementQzSgSbADKXE_tKF","sSKsE4last7ElementQzSgvp","sSKsE6suffixy11SubSequenceQzSiF","sSKsE8dropLasty11SubSequenceQzSiF","sSKsE8reverseds18ReversedCollectionVyxGyF","sSKsE9formIndex6beforey0B0Qzz_tF","sSKsE9lastIndex5where0B0QzSgSb7ElementQzKXE_tKF","sSKsSQ7ElementRpzrlE10difference4froms20CollectionDifferenceVyABGqd___tSKRd__AAQyd__ABRSlF","sSKsSQ7ElementRpzrlE9lastIndex2of0C0QzSgAB_tF","sSL","sSQ","sSQ2eeoiySbx_xtFZ","sSQsE2neoiySbx_xtFZ","sSS","sSS11SubSequencea","sSS5IndexV","sST","sST32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlF","sSTsE10allSatisfyyS2b7ElementQzKXEKF","sSTsE10compactMapySayqd__Gqd__Sg7ElementQzKXEKlF","sSTsE10enumerateds18EnumeratedSequenceVyxGyF","sSTsE13elementsEqual_2bySbqd___Sb7ElementQz_ACQyd__tKXEtKSTRd__lF","sSTsE19underestimatedCountSivp","sSTsE25lexicographicallyPrecedes_2bySbqd___Sb7ElementQz_ADtKXEtKSTRd__ACQyd__ADRSlF","sSTsE32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlF","sSTsE3mapySayqd__Gqd__7ElementQzKXEKlF","sSTsE3max2by7ElementQzSgSbAD_ADtKXE_tKF","sSTsE3min2by7ElementQzSgSbAD_ADtKXE_tKF","sSTsE4lazys12LazySequenceVyxGvp","sSTsE5first5where7ElementQzSgSbADKXE_tKF","sSTsE6filterySay7ElementQzGSbACKXEKF","sSTsE6reduce4into_qd__qd__n_yqd__z_7ElementQztKXEtKlF","sSTsE6reduceyqd__qd___qd__qd___7ElementQztKXEtKlF","sSTsE6sorted2bySay7ElementQzGSbAD_ADtKXE_tKF","sSTsE6starts4with2bySbqd___Sb7ElementQz_ADQyd__tKXEtKSTRd__lF","sSTsE7flatMapySay7ElementQyd__Gqd__ABQzKXEKSTRd__lF","sSTsE7flatMapySayqd__Gqd__Sg7ElementQzKXEKlF","sSTsE7forEachyyy7ElementQzKXEKF","sSTsE8contains5whereS2b7ElementQzKXE_tKF","sSTsE8shuffled5usingSay7ElementQzGqd__z_tSGRd__lF","sSTsE8shuffledSay7ElementQzGyF","sSTsSL7ElementRpzrlE25lexicographicallyPrecedesySbqd__STRd__AAQyd__ABRSlF","sSTsSL7ElementRpzrlE3maxABSgyF","sSTsSL7ElementRpzrlE3minABSgyF","sSTsSL7ElementRpzrlE6sortedSayABGyF","sSTsSQ7ElementRpzrlE13elementsEqualySbqd__STRd__AAQyd__ABRSlF","sSTsSQ7ElementRpzrlE6starts4withSbqd___tSTRd__AAQyd__ABRSlF","sSTsSQ7ElementRpzrlE8containsySbABF","sSV","sSX","sSY","sSY8rawValue03RawB0Qzvp","sSY8rawValuexSg03RawB0Qz_tcfc","sSYsSHRzSH8RawValueSYRpzrlE04hashB0Sivp","sSYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF","sSb","sSd","sSi","sSk","sSksE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF","sSl","sSl10startIndex0B0Qzvp","sSl8endIndex0B0Qzvp","sSlsE10firstIndex5where0B0QzSgSb7ElementQzKXE_tKF","sSlsE13randomElement0B0QzSgyF","sSlsE13randomElement5using0B0QzSgqd__z_tSGRd__lF","sSlsE19underestimatedCountSivp","sSlsE3mapySayqd__Gqd__7ElementQzKXEKlF","sSlsE4drop5while11SubSequenceQzSb7ElementQzKXE_tKF","sSlsE5countSivp","sSlsE5first7ElementQzSgvp","sSlsE5split9maxSplits25omittingEmptySubsequences14whereSeparatorSay11SubSequenceQzGSi_S2b7ElementQzKXEtKF","sSlsE6prefix4upTo11SubSequenceQz5IndexQz_tF","sSlsE6prefix5while11SubSequenceQzSb7ElementQzKXE_tKF","sSlsE6prefix7through11SubSequenceQz5IndexQz_tF","sSlsE6prefixy11SubSequenceQzSiF","sSlsE6suffix4from11SubSequenceQz5IndexQz_tF","sSlsE7isEmptySbvp","sSlsE9dropFirsty11SubSequenceQzSiF","sSlsE9formIndex5aftery0B0Qzz_tF","sSlsE9formIndex_8offsetBy07limitedD0Sb0B0Qzz_SiAEtF","sSlsE9formIndex_8offsetByy0B0Qzz_SitF","sSlsEy11SubSequenceQzqd__cSXRd__5BoundQyd__5IndexRtzluip","sSlsEy11SubSequenceQzys15UnboundedRange_OXEcip","sSlsSQ7ElementRpzrlE10firstIndex2of0C0QzSgAB_tF","sSlsSQ7ElementRpzrlE5index2of5IndexQzSgAB_tF","sSlsSQ7ElementRpzrlE5split9separator9maxSplits25omittingEmptySubsequencesSay11SubSequenceQzGAB_SiSbtF","sSlss16IndexingIteratorVyxG0B0RtzrlE04makeB0ACyF","sSlss5SliceVyxG11SubSequenceRtzrlEyACSny5IndexQzGcip","sSly7ElementQz5IndexQzcip","sSn","sSs","sSu","sSv","sSy","sSz","ss10SetAlgebraP","ss10SetAlgebraPs7ElementQz012ArrayLiteralC0RtzrlE05arrayE0xAFd_tcfc","ss10SetAlgebraPsE10isDisjoint4withSbx_tF","ss10SetAlgebraPsE10isSuperset2ofSbx_tF","ss10SetAlgebraPsE11subtractingyxxF","ss10SetAlgebraPsE14isStrictSubset2ofSbx_tF","ss10SetAlgebraPsE16isStrictSuperset2ofSbx_tF","ss10SetAlgebraPsE7isEmptySbvp","ss10SetAlgebraPsE8isSubset2ofSbx_tF","ss10SetAlgebraPsE8subtractyyxF","ss10SetAlgebraPsEyxqd__ncSTRd__7ElementQyd__ACRtzlufc","ss10SetAlgebraPxycfc","ss12CaseIterableP","ss12MemoryLayoutO","ss12StaticStringV","ss13UnicodeScalara","ss14PartialKeyPathC","ss23CustomStringConvertibleP","ss23CustomStringConvertibleP11descriptionSSvp","ss25ExpressibleByArrayLiteralP","ss25ExpressibleByArrayLiteralP05arrayD0x0cD7ElementQzd_tcfc","ss28CustomDebugStringConvertibleP","ss5ErrorP","ss6HasherV","ss7UnicodeO","ss7UnicodeO11NumericTypeO","ss7UnicodeO23CanonicalCombiningClassV","ss7UnicodeO6ScalarV","ss8SendableP","ss9OptionSetP","ss9OptionSetP8rawValuex03RawD0Qz_tcfc","ss9OptionSetPs7ElementQzRszrlE6insertySb8inserted_x17memberAfterInserttxF","ss9OptionSetPs7ElementQzRszrlE6removeyxSgxF","ss9OptionSetPs7ElementQzRszrlE6update4withxSgx_tF","ss9OptionSetPs7ElementQzRszrlE8containsySbxF","ss9OptionSetPsE12intersectionyxxF","ss9OptionSetPsE19symmetricDifferenceyxxF","ss9OptionSetPsE5unionyxxF","ss9OptionSetPss17FixedWidthInteger8RawValueRpzrlE16formIntersectionyyxF","ss9OptionSetPss17FixedWidthInteger8RawValueRpzrlE23formSymmetricDifferenceyyxF","ss9OptionSetPss17FixedWidthInteger8RawValueRpzrlE9formUnionyyxF","ss9OptionSetPss17FixedWidthInteger8RawValueRpzrlExycfc"],"vertices":[{"p":["LocatedErrorProtocol"],"f":[["protocol",12],[" ",17],["LocatedErrorProtocol",7],[" : ",17],["Error",18,1325]],"s":[["protocol",12],[" ",17],["LocatedErrorProtocol",7]]},{"p":["_ASTNode"],"f":[["protocol",12],[" ",17],["_ASTNode",7]],"s":[["protocol",12],[" ",17],["_ASTNode",7]]},{"p":["TypeConstruction"],"f":[["enum",12],[" ",17],["TypeConstruction",7]],"s":[["enum",12],[" ",17],["TypeConstruction",7]]},{"p":["DelimiterLexError","Kind"],"f":[["enum",12],[" ",17],["Kind",7]],"s":[["enum",12],[" ",17],["Kind",7]]},{"p":["AST","Conditional","Condition","PCREVersionCheck","Kind"],"f":[["enum",12],[" ",17],["Kind",7]],"s":[["enum",12],[" ",17],["Kind",7]]},{"p":["AST","Conditional","Condition","Kind"],"f":[["enum",12],[" ",17],["Kind",7]],"s":[["enum",12],[" ",17],["Kind",7]]},{"p":["AST","AbsentFunction","Kind"],"f":[["enum",12],[" ",17],["Kind",7]],"s":[["enum",12],[" ",17],["Kind",7]]},{"p":["AST","AbsentFunction","Start"],"f":[["enum",12],[" ",17],["Start",7]],"s":[["enum",12],[" ",17],["Start",7]]},{"p":["AST","MatchingOption","Kind"],"f":[["enum",12],[" ",17],["Kind",7]],"s":[["enum",12],[" ",17],["Kind",7]]},{"p":["AST","Quantification","Kind"],"f":[["enum",12],[" ",17],["Kind",7]],"s":[["enum",12],[" ",17],["Kind",7]]},{"p":["AST","Quantification","Amount"],"f":[["enum",12],[" ",17],["Amount",7]],"s":[["enum",12],[" ",17],["Amount",7]]},{"p":["AST","CustomCharacterClass","SetOp"],"f":[["enum",12],[" ",17],["SetOp",7]],"s":[["enum",12],[" ",17],["SetOp",7]]},{"p":["AST","CustomCharacterClass","Start"],"f":[["enum",12],[" ",17],["Start",7]],"s":[["enum",12],[" ",17],["Start",7]]},{"p":["AST","CustomCharacterClass","Member"],"f":[["enum",12],[" ",17],["Member",7]],"s":[["enum",12],[" ",17],["Member",7]]},{"p":["AST","GlobalMatchingOption","NewlineSequenceMatching"],"f":[["enum",12],[" ",17],["NewlineSequenceMatching",7]],"s":[["enum",12],[" ",17],["NewlineSequenceMatching",7]],"d":"Determines what `\\R` matches."},{"p":["AST","GlobalMatchingOption","NewlineMatching"],"f":[["enum",12],[" ",17],["NewlineMatching",7]],"s":[["enum",12],[" ",17],["NewlineMatching",7]],"d":"Determines the definition of a newline for the '.' character class and\nwhen parsing end-of-line comments."},{"p":["AST","GlobalMatchingOption","Kind"],"f":[["enum",12],[" ",17],["Kind",7]],"s":[["enum",12],[" ",17],["Kind",7]]},{"p":["AST","Atom","AssertionKind"],"f":[["enum",12],[" ",17],["AssertionKind",7]],"s":[["enum",12],[" ",17],["AssertionKind",7]],"d":"Anchors and other built-in zero-width assertions."},{"p":["AST","Atom","EscapedBuiltin"],"f":[["enum",12],[" ",17],["EscapedBuiltin",7]],"s":[["enum",12],[" ",17],["EscapedBuiltin",7]]},{"p":["AST","Atom","CharacterProperty","JavaSpecial"],"f":[["enum",12],[" ",17],["JavaSpecial",7]],"s":[["enum",12],[" ",17],["JavaSpecial",7]],"d":"Special Java properties that correspond to methods on\n`java.lang.Character`, with the `java` prefix replaced by `is`."},{"p":["AST","Atom","CharacterProperty","PCRESpecialCategory"],"f":[["enum",12],[" ",17],["PCRESpecialCategory",7]],"s":[["enum",12],[" ",17],["PCRESpecialCategory",7]]},{"p":["AST","Atom","CharacterProperty","Kind"],"f":[["enum",12],[" ",17],["Kind",7]],"s":[["enum",12],[" ",17],["Kind",7]]},{"p":["AST","Atom","CharacterProperty","Kind","MapKind"],"f":[["enum",12],[" ",17],["MapKind",7]],"s":[["enum",12],[" ",17],["MapKind",7]]},{"p":["AST","Atom","BacktrackingDirective","Kind"],"f":[["enum",12],[" ",17],["Kind",7]],"s":[["enum",12],[" ",17],["Kind",7]]},{"p":["AST","Atom","Kind"],"f":[["enum",12],[" ",17],["Kind",7]],"s":[["enum",12],[" ",17],["Kind",7]]},{"p":["AST","Atom","Callout"],"f":[["enum",12],[" ",17],["Callout",7]],"s":[["enum",12],[" ",17],["Callout",7]]},{"p":["AST","Atom","Callout","OnigurumaOfContents","Direction"],"f":[["enum",12],[" ",17],["Direction",7]],"s":[["enum",12],[" ",17],["Direction",7]]},{"p":["AST","Atom","Callout","PCRE","Argument"],"f":[["enum",12],[" ",17],["Argument",7]],"s":[["enum",12],[" ",17],["Argument",7]]},{"p":["AST","Node"],"f":[["indirect",12],[" ",17],["enum",12],[" ",17],["Node",7]],"s":[["enum",12],[" ",17],["Node",7]],"d":"A node in the regex AST."},{"p":["AST","Group","Kind"],"f":[["enum",12],[" ",17],["Kind",7]],"s":[["enum",12],[" ",17],["Kind",7]]},{"p":["AST","Reference","Kind"],"f":[["enum",12],[" ",17],["Kind",7]],"s":[["enum",12],[" ",17],["Kind",7]]},{"p":["ASTStage"],"f":[["enum",12],[" ",17],["ASTStage",7]],"s":[["enum",12],[" ",17],["ASTStage",7]]},{"p":["CaptureList"],"f":[["struct",12],[" ",17],["CaptureList",7]],"s":[["struct",12],[" ",17],["CaptureList",7]]},{"p":["CaptureList","Capture"],"f":[["struct",12],[" ",17],["Capture",7]],"s":[["struct",12],[" ",17],["Capture",7]]},{"p":["Unreachable"],"f":[["struct",12],[" ",17],["Unreachable",7]],"s":[["struct",12],[" ",17],["Unreachable",7]]},{"p":["Unsupported"],"f":[["struct",12],[" ",17],["Unsupported",7]],"s":[["struct",12],[" ",17],["Unsupported",7]]},{"p":["PrettyPrinter"],"f":[["struct",12],[" ",17],["PrettyPrinter",7]],"s":[["struct",12],[" ",17],["PrettyPrinter",7]],"d":"State used when to pretty-printing regex ASTs."},{"p":["SyntaxOptions"],"f":[["struct",12],[" ",17],["SyntaxOptions",7]],"s":[["struct",12],[" ",17],["SyntaxOptions",7]]},{"p":["DelimiterLexError"],"f":[["struct",12],[" ",17],["DelimiterLexError",7]],"s":[["struct",12],[" ",17],["DelimiterLexError",7]]},{"p":["AST"],"f":[["struct",12],[" ",17],["AST",7]],"s":[["struct",12],[" ",17],["AST",7]],"d":"A regex abstract syntax tree.\n\nThis is a top-level type that stores the root node."},{"p":["AST","Alternation"],"f":[["struct",12],[" ",17],["Alternation",7]],"s":[["struct",12],[" ",17],["Alternation",7]]},{"p":["AST","Conditional"],"f":[["struct",12],[" ",17],["Conditional",7]],"s":[["struct",12],[" ",17],["Conditional",7]]},{"p":["AST","Conditional","Condition"],"f":[["struct",12],[" ",17],["Condition",7]],"s":[["struct",12],[" ",17],["Condition",7]]},{"p":["AST","Conditional","Condition","PCREVersionCheck"],"f":[["struct",12],[" ",17],["PCREVersionCheck",7]],"s":[["struct",12],[" ",17],["PCREVersionCheck",7]]},{"p":["AST","Conditional","Condition","PCREVersionNumber"],"f":[["struct",12],[" ",17],["PCREVersionNumber",7]],"s":[["struct",12],[" ",17],["PCREVersionNumber",7]]},{"p":["AST","Concatenation"],"f":[["struct",12],[" ",17],["Concatenation",7]],"s":[["struct",12],[" ",17],["Concatenation",7]]},{"p":["AST","Interpolation"],"f":[["struct",12],[" ",17],["Interpolation",7]],"s":[["struct",12],[" ",17],["Interpolation",7]]},{"p":["AST","AbsentFunction"],"f":[["struct",12],[" ",17],["AbsentFunction",7]],"s":[["struct",12],[" ",17],["AbsentFunction",7]],"d":"An Oniguruma absent function.\n\nThis is used to model a pattern which should\nnot be matched against across varying scopes."},{"p":["AST","MatchingOption"],"f":[["struct",12],[" ",17],["MatchingOption",7]],"s":[["struct",12],[" ",17],["MatchingOption",7]],"d":"An option, written in source, that changes matching semantics."},{"p":["AST","Quantification"],"f":[["struct",12],[" ",17],["Quantification",7]],"s":[["struct",12],[" ",17],["Quantification",7]]},{"p":["AST","CustomCharacterClass"],"f":[["struct",12],[" ",17],["CustomCharacterClass",7]],"s":[["struct",12],[" ",17],["CustomCharacterClass",7]]},{"p":["AST","CustomCharacterClass","Range"],"f":[["struct",12],[" ",17],["Range",7]],"s":[["struct",12],[" ",17],["Range",7]]},{"p":["AST","GlobalMatchingOption"],"f":[["struct",12],[" ",17],["GlobalMatchingOption",7]],"s":[["struct",12],[" ",17],["GlobalMatchingOption",7]],"d":"Global matching option specifiers.\n\nUnlike `MatchingOptionSequence`,\nthese options must appear at the start of the pattern,\nand they apply to the entire pattern."},{"p":["AST","MatchingOptionSequence"],"f":[["struct",12],[" ",17],["MatchingOptionSequence",7]],"s":[["struct",12],[" ",17],["MatchingOptionSequence",7]],"d":"A sequence of matching options, written in source."},{"p":["AST","GlobalMatchingOptionSequence"],"f":[["struct",12],[" ",17],["GlobalMatchingOptionSequence",7]],"s":[["struct",12],[" ",17],["GlobalMatchingOptionSequence",7]],"d":"A set of global matching options in a regular expression literal."},{"p":["AST","Atom"],"f":[["struct",12],[" ",17],["Atom",7]],"s":[["struct",12],[" ",17],["Atom",7]]},{"p":["AST","Atom","ScalarSequence"],"f":[["struct",12],[" ",17],["ScalarSequence",7]],"s":[["struct",12],[" ",17],["ScalarSequence",7]]},{"p":["AST","Atom","CharacterProperty"],"f":[["struct",12],[" ",17],["CharacterProperty",7]],"s":[["struct",12],[" ",17],["CharacterProperty",7]]},{"p":["AST","Atom","BacktrackingDirective"],"f":[["struct",12],[" ",17],["BacktrackingDirective",7]],"s":[["struct",12],[" ",17],["BacktrackingDirective",7]]},{"p":["AST","Atom","Scalar"],"f":[["struct",12],[" ",17],["Scalar",7]],"s":[["struct",12],[" ",17],["Scalar",7]]},{"p":["AST","Atom","Callout","OnigurumaTag"],"f":[["struct",12],[" ",17],["OnigurumaTag",7]],"s":[["struct",12],[" ",17],["OnigurumaTag",7]],"d":"A tag specifier `[...]` that can appear in an Oniguruma callout."},{"p":["AST","Atom","Callout","OnigurumaNamed"],"f":[["struct",12],[" ",17],["OnigurumaNamed",7]],"s":[["struct",12],[" ",17],["OnigurumaNamed",7]],"d":"A named Oniguruma callout written `(*name[tag]{args, ...})`"},{"p":["AST","Atom","Callout","OnigurumaNamed","ArgList"],"f":[["struct",12],[" ",17],["ArgList",7]],"s":[["struct",12],[" ",17],["ArgList",7]]},{"p":["AST","Atom","Callout","OnigurumaOfContents"],"f":[["struct",12],[" ",17],["OnigurumaOfContents",7]],"s":[["struct",12],[" ",17],["OnigurumaOfContents",7]],"d":"An Oniguruma callout 'of contents', written `(?{...}[tag]D)`"},{"p":["AST","Atom","Callout","PCRE"],"f":[["struct",12],[" ",17],["PCRE",7]],"s":[["struct",12],[" ",17],["PCRE",7]],"d":"A PCRE callout written `(?C...)`"},{"p":["AST","Empty"],"f":[["struct",12],[" ",17],["Empty",7]],"s":[["struct",12],[" ",17],["Empty",7]]},{"p":["AST","Group"],"f":[["struct",12],[" ",17],["Group",7]],"s":[["struct",12],[" ",17],["Group",7]]},{"p":["AST","Group","BalancedCapture"],"f":[["struct",12],[" ",17],["BalancedCapture",7]],"s":[["struct",12],[" ",17],["BalancedCapture",7]]},{"p":["AST","Quote"],"f":[["struct",12],[" ",17],["Quote",7]],"s":[["struct",12],[" ",17],["Quote",7]]},{"p":["AST","Trivia"],"f":[["struct",12],[" ",17],["Trivia",7]],"s":[["struct",12],[" ",17],["Trivia",7]]},{"p":["AST","Reference"],"f":[["struct",12],[" ",17],["Reference",7]],"s":[["struct",12],[" ",17],["Reference",7]]},{"p":["Source"],"f":[["struct",12],[" ",17],["Source",7]],"s":[["struct",12],[" ",17],["Source",7]],"d":"The source of text being given to a parser.\n\nThis can be bytes in memory, a file on disk,\nsomething streamed over a network connection, and so on.\n"},{"p":["Source","LocatedError"],"f":[["struct",12],[" ",17],["LocatedError",7],["<",17],["E",0],["> ",17],["where",12],[" ",17],["E",18],[" : ",17],["Error",18,1325]],"s":[["struct",12],[" ",17],["LocatedError",7]],"c":[["E",1,"Error",1325]],"g":[["E",0,0]],"d":"An error that includes information about the location in source code."},{"p":["Source","Located"],"f":[["struct",12],[" ",17],["Located",7],["<",17],["T",0],[">",17]],"s":[["struct",12],[" ",17],["Located",7]],"g":[["T",0,0]],"d":"A value wrapped with a source range.\n\nNote: Source location is part of value identity so that, for example, the\nsame `Character` value appearing twice can be stored in a data structure\ndistinctly. To ignore source locations, use `.value` directly."},{"p":["Source","Location"],"f":[["struct",12],[" ",17],["Location",7]],"s":[["struct",12],[" ",17],["Location",7]],"d":"The location in the input of a parsed entity, presented as a region over the input"},{"p":["AnyType"],"f":[["struct",12],[" ",17],["AnyType",7]],"s":[["struct",12],[" ",17],["AnyType",7]],"d":"A wrapper of an existential metatype, equatable and hashable by reference."},{"p":["Delimiter"],"f":[["struct",12],[" ",17],["Delimiter",7]],"s":[["struct",12],[" ",17],["Delimiter",7]]},{"p":["DelimiterLexError","Kind","unknownDelimiter"],"f":[["case",12],[" ",17],["unknownDelimiter",7]],"s":[["case",12],[" ",17],["unknownDelimiter",7]]},{"p":["DelimiterLexError","Kind","invalidUTF8"],"f":[["case",12],[" ",17],["invalidUTF8",7]],"s":[["case",12],[" ",17],["invalidUTF8",7]]},{"p":["DelimiterLexError","Kind","unterminated"],"f":[["case",12],[" ",17],["unterminated",7]],"s":[["case",12],[" ",17],["unterminated",7]]},{"p":["DelimiterLexError","Kind","unprintableASCII"],"f":[["case",12],[" ",17],["unprintableASCII",7]],"s":[["case",12],[" ",17],["unprintableASCII",7]]},{"p":["DelimiterLexError","Kind","multilineClosingNotOnNewline"],"f":[["case",12],[" ",17],["multilineClosingNotOnNewline",7]],"s":[["case",12],[" ",17],["multilineClosingNotOnNewline",7]]},{"p":["AST","Conditional","Condition","PCREVersionCheck","Kind","greaterThanOrEqual"],"f":[["case",12],[" ",17],["greaterThanOrEqual",7]],"s":[["case",12],[" ",17],["greaterThanOrEqual",7]]},{"p":["AST","Conditional","Condition","PCREVersionCheck","Kind","equal"],"f":[["case",12],[" ",17],["equal",7]],"s":[["case",12],[" ",17],["equal",7]]},{"p":["AST","Conditional","Condition","Kind","defineGroup"],"f":[["case",12],[" ",17],["defineGroup",7]],"s":[["case",12],[" ",17],["defineGroup",7]],"d":"Define a new group that can be referenced elsewhere."},{"p":["AST","Conditional","Condition","Kind","groupMatched(_:)"],"f":[["case",12],[" ",17],["groupMatched",7],["(",17],["AST",18,39],[".",17],["Reference",18,70],[")",17]],"s":[["case",12],[" ",17],["groupMatched",7],["(",17],["AST",18],[".",17],["Reference",18],[")",17]],"d":"Check to see if a certain group was matched."},{"p":["AST","Conditional","Condition","Kind","recursionCheck"],"f":[["case",12],[" ",17],["recursionCheck",7]],"s":[["case",12],[" ",17],["recursionCheck",7]]},{"p":["AST","Conditional","Condition","Kind","pcreVersionCheck(_:)"],"f":[["case",12],[" ",17],["pcreVersionCheck",7],["(",17],["AST",18,39],[".",17],["Conditional",18,41],[".",17],["Condition",18,42],[".",17],["PCREVersionCheck",18,43],[")",17]],"s":[["case",12],[" ",17],["pcreVersionCheck",7],["(",17],["AST",18],[".",17],["Conditional",18],[".",17],["Condition",18],[".",17],["PCREVersionCheck",18],[")",17]],"d":"A PCRE version check."},{"p":["AST","Conditional","Condition","Kind","groupRecursionCheck(_:)"],"f":[["case",12],[" ",17],["groupRecursionCheck",7],["(",17],["AST",18,39],[".",17],["Reference",18,70],[")",17]],"s":[["case",12],[" ",17],["groupRecursionCheck",7],["(",17],["AST",18],[".",17],["Reference",18],[")",17]]},{"p":["AST","Conditional","Condition","Kind","group(_:)"],"f":[["case",12],[" ",17],["group",7],["(",17],["AST",18,39],[".",17],["Group",18,66],[")",17]],"s":[["case",12],[" ",17],["group",7],["(",17],["AST",18],[".",17],["Group",18],[")",17]],"d":"A group condition, which checks to see if an arbitrary bit of regex\nmatches. Note that the semantics of this differs by engine, .NET only\ntreats it as a lookahead, whereas Oniguruma can evaluate separately\nfrom the body of the conditional."},{"p":["AST","AbsentFunction","Kind","expression(absentee:pipe:expr:)"],"f":[["case",12],[" ",17],["expression",7],["(",17],["absentee",1],[": ",17],["AST",18,39],[".",17],["Node",18,28],[", ",17],["pipe",1],[": ",17],["SourceLocation",18,557],[", ",17],["expr",1],[": ",17],["AST",18,39],[".",17],["Node",18,28],[")",17]],"s":[["case",12],[" ",17],["expression",7],["(",17],["absentee",1],[": ",17],["AST",18],[".",17],["Node",18],[", ",17],["pipe",1],[": ",17],["SourceLocation",18],[", ",17],["expr",1],[": ",17],["AST",18],[".",17],["Node",18],[")",17]],"d":"An absent expression `(?~|absent|expr)`, which defines an `absent`\npattern which must not be matched against while the pattern `expr` is\nmatched."},{"p":["AST","AbsentFunction","Kind","clearer"],"f":[["case",12],[" ",17],["clearer",7]],"s":[["case",12],[" ",17],["clearer",7]],"d":"An absent clearer `(?~|)` which cancels the effect of an absent\nstopper."},{"p":["AST","AbsentFunction","Kind","stopper(_:)"],"f":[["case",12],[" ",17],["stopper",7],["(",17],["AST",18,39],[".",17],["Node",18,28],[")",17]],"s":[["case",12],[" ",17],["stopper",7],["(",17],["AST",18],[".",17],["Node",18],[")",17]],"d":"An absent stopper `(?~|absent)`, which prevents matching against\n`absent` until the end of the regex, or until it is cleared."},{"p":["AST","AbsentFunction","Kind","repeater(_:)"],"f":[["case",12],[" ",17],["repeater",7],["(",17],["AST",18,39],[".",17],["Node",18,28],[")",17]],"s":[["case",12],[" ",17],["repeater",7],["(",17],["AST",18],[".",17],["Node",18],[")",17]],"d":"An absent repeater `(?~absent)`. This is equivalent to `(?~|absent|.*)`\nand therefore matches as long as the pattern `absent` is not matched."},{"p":["AST","AbsentFunction","Start","withoutPipe"],"f":[["case",12],[" ",17],["withoutPipe",7]],"s":[["case",12],[" ",17],["withoutPipe",7]],"d":"`(?~`"},{"p":["AST","AbsentFunction","Start","withPipe"],"f":[["case",12],[" ",17],["withPipe",7]],"s":[["case",12],[" ",17],["withPipe",7]],"d":"`(?~|`"},{"p":["AST","MatchingOption","Kind","singleLine"],"f":[["case",12],[" ",17],["singleLine",7]],"s":[["case",12],[" ",17],["singleLine",7]]},{"p":["AST","MatchingOption","Kind","asciiOnlyWord"],"f":[["case",12],[" ",17],["asciiOnlyWord",7]],"s":[["case",12],[" ",17],["asciiOnlyWord",7]]},{"p":["AST","MatchingOption","Kind","byteSemantics"],"f":[["case",12],[" ",17],["byteSemantics",7]],"s":[["case",12],[" ",17],["byteSemantics",7]]},{"p":["AST","MatchingOption","Kind","extraExtended"],"f":[["case",12],[" ",17],["extraExtended",7]],"s":[["case",12],[" ",17],["extraExtended",7]]},{"p":["AST","MatchingOption","Kind","asciiOnlyDigit"],"f":[["case",12],[" ",17],["asciiOnlyDigit",7]],"s":[["case",12],[" ",17],["asciiOnlyDigit",7]]},{"p":["AST","MatchingOption","Kind","asciiOnlySpace"],"f":[["case",12],[" ",17],["asciiOnlySpace",7]],"s":[["case",12],[" ",17],["asciiOnlySpace",7]]},{"p":["AST","MatchingOption","Kind","caseInsensitive"],"f":[["case",12],[" ",17],["caseInsensitive",7]],"s":[["case",12],[" ",17],["caseInsensitive",7]]},{"p":["AST","MatchingOption","Kind","namedCapturesOnly"],"f":[["case",12],[" ",17],["namedCapturesOnly",7]],"s":[["case",12],[" ",17],["namedCapturesOnly",7]]},{"p":["AST","MatchingOption","Kind","reluctantByDefault"],"f":[["case",12],[" ",17],["reluctantByDefault",7]],"s":[["case",12],[" ",17],["reluctantByDefault",7]]},{"p":["AST","MatchingOption","Kind","asciiOnlyPOSIXProps"],"f":[["case",12],[" ",17],["asciiOnlyPOSIXProps",7]],"s":[["case",12],[" ",17],["asciiOnlyPOSIXProps",7]]},{"p":["AST","MatchingOption","Kind","possessiveByDefault"],"f":[["case",12],[" ",17],["possessiveByDefault",7]],"s":[["case",12],[" ",17],["possessiveByDefault",7]]},{"p":["AST","MatchingOption","Kind","textSegmentWordMode"],"f":[["case",12],[" ",17],["textSegmentWordMode",7]],"s":[["case",12],[" ",17],["textSegmentWordMode",7]]},{"p":["AST","MatchingOption","Kind","unicodeWordBoundaries"],"f":[["case",12],[" ",17],["unicodeWordBoundaries",7]],"s":[["case",12],[" ",17],["unicodeWordBoundaries",7]]},{"p":["AST","MatchingOption","Kind","unicodeScalarSemantics"],"f":[["case",12],[" ",17],["unicodeScalarSemantics",7]],"s":[["case",12],[" ",17],["unicodeScalarSemantics",7]]},{"p":["AST","MatchingOption","Kind","textSegmentGraphemeMode"],"f":[["case",12],[" ",17],["textSegmentGraphemeMode",7]],"s":[["case",12],[" ",17],["textSegmentGraphemeMode",7]]},{"p":["AST","MatchingOption","Kind","allowDuplicateGroupNames"],"f":[["case",12],[" ",17],["allowDuplicateGroupNames",7]],"s":[["case",12],[" ",17],["allowDuplicateGroupNames",7]]},{"p":["AST","MatchingOption","Kind","graphemeClusterSemantics"],"f":[["case",12],[" ",17],["graphemeClusterSemantics",7]],"s":[["case",12],[" ",17],["graphemeClusterSemantics",7]]},{"p":["AST","MatchingOption","Kind","extended"],"f":[["case",12],[" ",17],["extended",7]],"s":[["case",12],[" ",17],["extended",7]]},{"p":["AST","MatchingOption","Kind","multiline"],"f":[["case",12],[" ",17],["multiline",7]],"s":[["case",12],[" ",17],["multiline",7]]},{"p":["AST","Quantification","Kind","possessive"],"f":[["case",12],[" ",17],["possessive",7]],"s":[["case",12],[" ",17],["possessive",7]]},{"p":["AST","Quantification","Kind","eager"],"f":[["case",12],[" ",17],["eager",7]],"s":[["case",12],[" ",17],["eager",7]]},{"p":["AST","Quantification","Kind","reluctant"],"f":[["case",12],[" ",17],["reluctant",7]],"s":[["case",12],[" ",17],["reluctant",7]]},{"p":["AST","Quantification","Amount","zeroOrMore"],"f":[["case",12],[" ",17],["zeroOrMore",7]],"s":[["case",12],[" ",17],["zeroOrMore",7]]},{"p":["AST","Quantification","Amount","range(_:_:)"],"f":[["case",12],[" ",17],["range",7],["(",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["Int",18,1264],[">, ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["Int",18,1264],[">)",17]],"s":[["case",12],[" ",17],["range",7],["(",17],["Source",18],[".",17],["Located",18],["<",17],["Int",18],[">, ",17],["Source",18],[".",17],["Located",18],["<",17],["Int",18],[">)",17]]},{"p":["AST","Quantification","Amount","upToN(_:)"],"f":[["case",12],[" ",17],["upToN",7],["(",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["Int",18,1264],[">)",17]],"s":[["case",12],[" ",17],["upToN",7],["(",17],["Source",18],[".",17],["Located",18],["<",17],["Int",18],[">)",17]]},{"p":["AST","Quantification","Amount","exactly(_:)"],"f":[["case",12],[" ",17],["exactly",7],["(",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["Int",18,1264],[">)",17]],"s":[["case",12],[" ",17],["exactly",7],["(",17],["Source",18],[".",17],["Located",18],["<",17],["Int",18],[">)",17]]},{"p":["AST","Quantification","Amount","nOrMore(_:)"],"f":[["case",12],[" ",17],["nOrMore",7],["(",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["Int",18,1264],[">)",17]],"s":[["case",12],[" ",17],["nOrMore",7],["(",17],["Source",18],[".",17],["Located",18],["<",17],["Int",18],[">)",17]]},{"p":["AST","Quantification","Amount","oneOrMore"],"f":[["case",12],[" ",17],["oneOrMore",7]],"s":[["case",12],[" ",17],["oneOrMore",7]]},{"p":["AST","Quantification","Amount","zeroOrOne"],"f":[["case",12],[" ",17],["zeroOrOne",7]],"s":[["case",12],[" ",17],["zeroOrOne",7]]},{"p":["AST","CustomCharacterClass","SetOp","subtraction"],"f":[["case",12],[" ",17],["subtraction",7]],"s":[["case",12],[" ",17],["subtraction",7]]},{"p":["AST","CustomCharacterClass","SetOp","intersection"],"f":[["case",12],[" ",17],["intersection",7]],"s":[["case",12],[" ",17],["intersection",7]]},{"p":["AST","CustomCharacterClass","SetOp","symmetricDifference"],"f":[["case",12],[" ",17],["symmetricDifference",7]],"s":[["case",12],[" ",17],["symmetricDifference",7]]},{"p":["AST","CustomCharacterClass","Start","normal"],"f":[["case",12],[" ",17],["normal",7]],"s":[["case",12],[" ",17],["normal",7]]},{"p":["AST","CustomCharacterClass","Start","inverted"],"f":[["case",12],[" ",17],["inverted",7]],"s":[["case",12],[" ",17],["inverted",7]]},{"p":["AST","CustomCharacterClass","Member","setOperation(_:_:_:)"],"f":[["case",12],[" ",17],["setOperation",7],["([",17],["AST",18,39],[".",17],["CustomCharacterClass",18,50],[".",17],["Member",18,13],["], ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["AST",18,39],[".",17],["CustomCharacterClass",18,50],[".",17],["SetOp",18,11],[">, [",17],["AST",18,39],[".",17],["CustomCharacterClass",18,50],[".",17],["Member",18,13],["])",17]],"s":[["case",12],[" ",17],["setOperation",7],["([",17],["AST",18],[".",17],["CustomCharacterClass",18],[".",17],["Member",18],["], ",17],["Source",18],[".",17],["Located",18],["<",17],["AST",18],[".",17],["CustomCharacterClass",18],[".",17],["SetOp",18],[">, [",17],["AST",18],[".",17],["CustomCharacterClass",18],[".",17],["Member",18],["])",17]],"d":"A binary operator applied to sets of members `abc&&def`"},{"p":["AST","CustomCharacterClass","Member","atom(_:)"],"f":[["case",12],[" ",17],["atom",7],["(",17],["AST",18,39],[".",17],["Atom",18,55],[")",17]],"s":[["case",12],[" ",17],["atom",7],["(",17],["AST",18],[".",17],["Atom",18],[")",17]],"d":"A single character or escape"},{"p":["AST","CustomCharacterClass","Member","quote(_:)"],"f":[["case",12],[" ",17],["quote",7],["(",17],["AST",18,39],[".",17],["Quote",18,68],[")",17]],"s":[["case",12],[" ",17],["quote",7],["(",17],["AST",18],[".",17],["Quote",18],[")",17]],"d":"A quoted sequence. Inside a custom character class this just means\nthe contents should be interpreted literally."},{"p":["AST","CustomCharacterClass","Member","range(_:)"],"f":[["case",12],[" ",17],["range",7],["(",17],["AST",18,39],[".",17],["CustomCharacterClass",18,50],[".",17],["Range",18,51],[")",17]],"s":[["case",12],[" ",17],["range",7],["(",17],["AST",18],[".",17],["CustomCharacterClass",18],[".",17],["Range",18],[")",17]],"d":"A character range `a-z`"},{"p":["AST","CustomCharacterClass","Member","custom(_:)"],"f":[["case",12],[" ",17],["custom",7],["(",17],["AST",18,39],[".",17],["CustomCharacterClass",18,50],[")",17]],"s":[["case",12],[" ",17],["custom",7],["(",17],["AST",18],[".",17],["CustomCharacterClass",18],[")",17]],"d":"A nested custom character class `[[ab][cd]]`"},{"p":["AST","CustomCharacterClass","Member","trivia(_:)"],"f":[["case",12],[" ",17],["trivia",7],["(",17],["AST",18,39],[".",17],["Trivia",18,69],[")",17]],"s":[["case",12],[" ",17],["trivia",7],["(",17],["AST",18],[".",17],["Trivia",18],[")",17]],"d":"Trivia such as non-semantic whitespace."},{"p":["AST","GlobalMatchingOption","NewlineSequenceMatching","anyUnicode"],"f":[["case",12],[" ",17],["anyUnicode",7]],"s":[["case",12],[" ",17],["anyUnicode",7]],"d":"(*BSR_UNICODE)"},{"p":["AST","GlobalMatchingOption","NewlineSequenceMatching","anyCarriageReturnOrLinefeed"],"f":[["case",12],[" ",17],["anyCarriageReturnOrLinefeed",7]],"s":[["case",12],[" ",17],["anyCarriageReturnOrLinefeed",7]],"d":"(*BSR_ANYCRLF)"},{"p":["AST","GlobalMatchingOption","NewlineMatching","anyUnicode"],"f":[["case",12],[" ",17],["anyUnicode",7]],"s":[["case",12],[" ",17],["anyUnicode",7]],"d":"(*ANY)"},{"p":["AST","GlobalMatchingOption","NewlineMatching","linefeedOnly"],"f":[["case",12],[" ",17],["linefeedOnly",7]],"s":[["case",12],[" ",17],["linefeedOnly",7]],"d":"(*LF)"},{"p":["AST","GlobalMatchingOption","NewlineMatching","nulCharacter"],"f":[["case",12],[" ",17],["nulCharacter",7]],"s":[["case",12],[" ",17],["nulCharacter",7]],"d":"(*NUL)"},{"p":["AST","GlobalMatchingOption","NewlineMatching","carriageReturnOnly"],"f":[["case",12],[" ",17],["carriageReturnOnly",7]],"s":[["case",12],[" ",17],["carriageReturnOnly",7]],"d":"(*CR*)"},{"p":["AST","GlobalMatchingOption","NewlineMatching","carriageAndLinefeedOnly"],"f":[["case",12],[" ",17],["carriageAndLinefeedOnly",7]],"s":[["case",12],[" ",17],["carriageAndLinefeedOnly",7]],"d":"(*CRLF)"},{"p":["AST","GlobalMatchingOption","NewlineMatching","anyCarriageReturnOrLinefeed"],"f":[["case",12],[" ",17],["anyCarriageReturnOrLinefeed",7]],"s":[["case",12],[" ",17],["anyCarriageReturnOrLinefeed",7]],"d":"(*ANYCRLF)"},{"p":["AST","GlobalMatchingOption","Kind","newlineSequenceMatching(_:)"],"f":[["case",12],[" ",17],["newlineSequenceMatching",7],["(",17],["AST",18,39],[".",17],["GlobalMatchingOption",18,52],[".",17],["NewlineSequenceMatching",18,14],[")",17]],"s":[["case",12],[" ",17],["newlineSequenceMatching",7],["(",17],["AST",18],[".",17],["GlobalMatchingOption",18],[".",17],["NewlineSequenceMatching",18],[")",17]]},{"p":["AST","GlobalMatchingOption","Kind","newlineMatching(_:)"],"f":[["case",12],[" ",17],["newlineMatching",7],["(",17],["AST",18,39],[".",17],["GlobalMatchingOption",18,52],[".",17],["NewlineMatching",18,15],[")",17]],"s":[["case",12],[" ",17],["newlineMatching",7],["(",17],["AST",18],[".",17],["GlobalMatchingOption",18],[".",17],["NewlineMatching",18],[")",17]]},{"p":["AST","GlobalMatchingOption","Kind","limitDepth(_:)"],"f":[["case",12],[" ",17],["limitDepth",7],["(",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["Int",18,1264],[">)",17]],"s":[["case",12],[" ",17],["limitDepth",7],["(",17],["Source",18],[".",17],["Located",18],["<",17],["Int",18],[">)",17]],"d":"(*LIMIT_DEPTH=d)"},{"p":["AST","GlobalMatchingOption","Kind","limitMatch(_:)"],"f":[["case",12],[" ",17],["limitMatch",7],["(",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["Int",18,1264],[">)",17]],"s":[["case",12],[" ",17],["limitMatch",7],["(",17],["Source",18],[".",17],["Located",18],["<",17],["Int",18],[">)",17]],"d":"(*LIMIT_MATCH=d)"},{"p":["AST","GlobalMatchingOption","Kind","noStartOpt"],"f":[["case",12],[" ",17],["noStartOpt",7]],"s":[["case",12],[" ",17],["noStartOpt",7]],"d":"(*NO_START_OPT)"},{"p":["AST","GlobalMatchingOption","Kind","noAutoPossess"],"f":[["case",12],[" ",17],["noAutoPossess",7]],"s":[["case",12],[" ",17],["noAutoPossess",7]],"d":"(*NO_AUTO_POSSESS)"},{"p":["AST","GlobalMatchingOption","Kind","noDotStarAnchor"],"f":[["case",12],[" ",17],["noDotStarAnchor",7]],"s":[["case",12],[" ",17],["noDotStarAnchor",7]],"d":"(*NO_DOTSTAR_ANCHOR)"},{"p":["AST","GlobalMatchingOption","Kind","notEmptyAtStart"],"f":[["case",12],[" ",17],["notEmptyAtStart",7]],"s":[["case",12],[" ",17],["notEmptyAtStart",7]],"d":"(*NOTEMPTY_ATSTART)"},{"p":["AST","GlobalMatchingOption","Kind","unicodeProperties"],"f":[["case",12],[" ",17],["unicodeProperties",7]],"s":[["case",12],[" ",17],["unicodeProperties",7]],"d":"(*UCP)"},{"p":["AST","GlobalMatchingOption","Kind","noJIT"],"f":[["case",12],[" ",17],["noJIT",7]],"s":[["case",12],[" ",17],["noJIT",7]],"d":"(*NO_JIT)"},{"p":["AST","GlobalMatchingOption","Kind","utfMode"],"f":[["case",12],[" ",17],["utfMode",7]],"s":[["case",12],[" ",17],["utfMode",7]],"d":"(*UTF)"},{"p":["AST","GlobalMatchingOption","Kind","notEmpty"],"f":[["case",12],[" ",17],["notEmpty",7]],"s":[["case",12],[" ",17],["notEmpty",7]],"d":"(*NOTEMPTY)"},{"p":["AST","GlobalMatchingOption","Kind","limitHeap(_:)"],"f":[["case",12],[" ",17],["limitHeap",7],["(",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["Int",18,1264],[">)",17]],"s":[["case",12],[" ",17],["limitHeap",7],["(",17],["Source",18],[".",17],["Located",18],["<",17],["Int",18],[">)",17]],"d":"(*LIMIT_HEAP=d)"},{"p":["AST","Atom","AssertionKind","startOfLine"],"f":[["case",12],[" ",17],["startOfLine",7]],"s":[["case",12],[" ",17],["startOfLine",7]],"d":"^"},{"p":["AST","Atom","AssertionKind","textSegment"],"f":[["case",12],[" ",17],["textSegment",7]],"s":[["case",12],[" ",17],["textSegment",7]],"d":"\\y"},{"p":["AST","Atom","AssertionKind","endOfSubject"],"f":[["case",12],[" ",17],["endOfSubject",7]],"s":[["case",12],[" ",17],["endOfSubject",7]],"d":"\\z"},{"p":["AST","Atom","AssertionKind","wordBoundary"],"f":[["case",12],[" ",17],["wordBoundary",7]],"s":[["case",12],[" ",17],["wordBoundary",7]],"d":"\\b (from outside a custom character class)"},{"p":["AST","Atom","AssertionKind","notTextSegment"],"f":[["case",12],[" ",17],["notTextSegment",7]],"s":[["case",12],[" ",17],["notTextSegment",7]],"d":"\\Y"},{"p":["AST","Atom","AssertionKind","startOfSubject"],"f":[["case",12],[" ",17],["startOfSubject",7]],"s":[["case",12],[" ",17],["startOfSubject",7]],"d":"\\A"},{"p":["AST","Atom","AssertionKind","notWordBoundary"],"f":[["case",12],[" ",17],["notWordBoundary",7]],"s":[["case",12],[" ",17],["notWordBoundary",7]],"d":"\\B"},{"p":["AST","Atom","AssertionKind","resetStartOfMatch"],"f":[["case",12],[" ",17],["resetStartOfMatch",7]],"s":[["case",12],[" ",17],["resetStartOfMatch",7]],"d":"\\K"},{"p":["AST","Atom","AssertionKind","endOfSubjectBeforeNewline"],"f":[["case",12],[" ",17],["endOfSubjectBeforeNewline",7]],"s":[["case",12],[" ",17],["endOfSubjectBeforeNewline",7]],"d":"\\Z"},{"p":["AST","Atom","AssertionKind","firstMatchingPositionInSubject"],"f":[["case",12],[" ",17],["firstMatchingPositionInSubject",7]],"s":[["case",12],[" ",17],["firstMatchingPositionInSubject",7]],"d":"\\G"},{"p":["AST","Atom","AssertionKind","endOfLine"],"f":[["case",12],[" ",17],["endOfLine",7]],"s":[["case",12],[" ",17],["endOfLine",7]],"d":"$"},{"p":["AST","Atom","EscapedBuiltin","notNewline"],"f":[["case",12],[" ",17],["notNewline",7]],"s":[["case",12],[" ",17],["notNewline",7]],"d":"\\N"},{"p":["AST","Atom","EscapedBuiltin","whitespace"],"f":[["case",12],[" ",17],["whitespace",7]],"s":[["case",12],[" ",17],["whitespace",7]],"d":"\\s"},{"p":["AST","Atom","EscapedBuiltin","textSegment"],"f":[["case",12],[" ",17],["textSegment",7]],"s":[["case",12],[" ",17],["textSegment",7]],"d":"\\y"},{"p":["AST","Atom","EscapedBuiltin","trueAnychar"],"f":[["case",12],[" ",17],["trueAnychar",7]],"s":[["case",12],[" ",17],["trueAnychar",7]],"d":"\\O"},{"p":["AST","Atom","EscapedBuiltin","verticalTab"],"f":[["case",12],[" ",17],["verticalTab",7]],"s":[["case",12],[" ",17],["verticalTab",7]],"d":"\\v"},{"p":["AST","Atom","EscapedBuiltin","decimalDigit"],"f":[["case",12],[" ",17],["decimalDigit",7]],"s":[["case",12],[" ",17],["decimalDigit",7]],"d":"\\d"},{"p":["AST","Atom","EscapedBuiltin","endOfSubject"],"f":[["case",12],[" ",17],["endOfSubject",7]],"s":[["case",12],[" ",17],["endOfSubject",7]],"d":"\\z"},{"p":["AST","Atom","EscapedBuiltin","wordBoundary"],"f":[["case",12],[" ",17],["wordBoundary",7]],"s":[["case",12],[" ",17],["wordBoundary",7]],"d":"\\b (from outside a custom character class)"},{"p":["AST","Atom","EscapedBuiltin","notWhitespace"],"f":[["case",12],[" ",17],["notWhitespace",7]],"s":[["case",12],[" ",17],["notWhitespace",7]],"d":"\\S"},{"p":["AST","Atom","EscapedBuiltin","wordCharacter"],"f":[["case",12],[" ",17],["wordCharacter",7]],"s":[["case",12],[" ",17],["wordCharacter",7]],"d":"\\w"},{"p":["AST","Atom","EscapedBuiltin","carriageReturn"],"f":[["case",12],[" ",17],["carriageReturn",7]],"s":[["case",12],[" ",17],["carriageReturn",7]],"d":"\\r"},{"p":["AST","Atom","EscapedBuiltin","notTextSegment"],"f":[["case",12],[" ",17],["notTextSegment",7]],"s":[["case",12],[" ",17],["notTextSegment",7]],"d":"\\Y"},{"p":["AST","Atom","EscapedBuiltin","notVerticalTab"],"f":[["case",12],[" ",17],["notVerticalTab",7]],"s":[["case",12],[" ",17],["notVerticalTab",7]],"d":"\\V"},{"p":["AST","Atom","EscapedBuiltin","singleDataUnit"],"f":[["case",12],[" ",17],["singleDataUnit",7]],"s":[["case",12],[" ",17],["singleDataUnit",7]],"d":"\\C"},{"p":["AST","Atom","EscapedBuiltin","startOfSubject"],"f":[["case",12],[" ",17],["startOfSubject",7]],"s":[["case",12],[" ",17],["startOfSubject",7]],"d":"\\A"},{"p":["AST","Atom","EscapedBuiltin","graphemeCluster"],"f":[["case",12],[" ",17],["graphemeCluster",7]],"s":[["case",12],[" ",17],["graphemeCluster",7]],"d":"\\X"},{"p":["AST","Atom","EscapedBuiltin","newlineSequence"],"f":[["case",12],[" ",17],["newlineSequence",7]],"s":[["case",12],[" ",17],["newlineSequence",7]],"d":"\\R"},{"p":["AST","Atom","EscapedBuiltin","notDecimalDigit"],"f":[["case",12],[" ",17],["notDecimalDigit",7]],"s":[["case",12],[" ",17],["notDecimalDigit",7]],"d":"\\D"},{"p":["AST","Atom","EscapedBuiltin","notWordBoundary"],"f":[["case",12],[" ",17],["notWordBoundary",7]],"s":[["case",12],[" ",17],["notWordBoundary",7]],"d":"\\B"},{"p":["AST","Atom","EscapedBuiltin","notWordCharacter"],"f":[["case",12],[" ",17],["notWordCharacter",7]],"s":[["case",12],[" ",17],["notWordCharacter",7]],"d":"\\W"},{"p":["AST","Atom","EscapedBuiltin","resetStartOfMatch"],"f":[["case",12],[" ",17],["resetStartOfMatch",7]],"s":[["case",12],[" ",17],["resetStartOfMatch",7]],"d":"\\K"},{"p":["AST","Atom","EscapedBuiltin","horizontalWhitespace"],"f":[["case",12],[" ",17],["horizontalWhitespace",7]],"s":[["case",12],[" ",17],["horizontalWhitespace",7]],"d":"\\h"},{"p":["AST","Atom","EscapedBuiltin","notHorizontalWhitespace"],"f":[["case",12],[" ",17],["notHorizontalWhitespace",7]],"s":[["case",12],[" ",17],["notHorizontalWhitespace",7]],"d":"\\H"},{"p":["AST","Atom","EscapedBuiltin","endOfSubjectBeforeNewline"],"f":[["case",12],[" ",17],["endOfSubjectBeforeNewline",7]],"s":[["case",12],[" ",17],["endOfSubjectBeforeNewline",7]],"d":"\\Z"},{"p":["AST","Atom","EscapedBuiltin","firstMatchingPositionInSubject"],"f":[["case",12],[" ",17],["firstMatchingPositionInSubject",7]],"s":[["case",12],[" ",17],["firstMatchingPositionInSubject",7]],"d":"\\G"},{"p":["AST","Atom","EscapedBuiltin","tab"],"f":[["case",12],[" ",17],["tab",7]],"s":[["case",12],[" ",17],["tab",7]],"d":"\\t"},{"p":["AST","Atom","EscapedBuiltin","alarm"],"f":[["case",12],[" ",17],["alarm",7]],"s":[["case",12],[" ",17],["alarm",7]],"d":"\\a"},{"p":["AST","Atom","EscapedBuiltin","escape"],"f":[["case",12],[" ",17],["escape",7]],"s":[["case",12],[" ",17],["escape",7]],"d":"\\e"},{"p":["AST","Atom","EscapedBuiltin","newline"],"f":[["case",12],[" ",17],["newline",7]],"s":[["case",12],[" ",17],["newline",7]],"d":"\\n"},{"p":["AST","Atom","EscapedBuiltin","formfeed"],"f":[["case",12],[" ",17],["formfeed",7]],"s":[["case",12],[" ",17],["formfeed",7]],"d":"\\f"},{"p":["AST","Atom","EscapedBuiltin","backspace"],"f":[["case",12],[" ",17],["backspace",7]],"s":[["case",12],[" ",17],["backspace",7]],"d":"\\b (from within a custom character class)"},{"p":["AST","Atom","CharacterProperty","JavaSpecial","alphabetic"],"f":[["case",12],[" ",17],["alphabetic",7]],"s":[["case",12],[" ",17],["alphabetic",7]]},{"p":["AST","Atom","CharacterProperty","JavaSpecial","isoControl"],"f":[["case",12],[" ",17],["isoControl",7]],"s":[["case",12],[" ",17],["isoControl",7]]},{"p":["AST","Atom","CharacterProperty","JavaSpecial","javaLetter"],"f":[["case",12],[" ",17],["javaLetter",7]],"s":[["case",12],[" ",17],["javaLetter",7]]},{"p":["AST","Atom","CharacterProperty","JavaSpecial","whitespace"],"f":[["case",12],[" ",17],["whitespace",7]],"s":[["case",12],[" ",17],["whitespace",7]]},{"p":["AST","Atom","CharacterProperty","JavaSpecial","ideographic"],"f":[["case",12],[" ",17],["ideographic",7]],"s":[["case",12],[" ",17],["ideographic",7]]},{"p":["AST","Atom","CharacterProperty","JavaSpecial","javaLetterOrDigit"],"f":[["case",12],[" ",17],["javaLetterOrDigit",7]],"s":[["case",12],[" ",17],["javaLetterOrDigit",7]]},{"p":["AST","Atom","CharacterProperty","JavaSpecial","javaIdentifierPart"],"f":[["case",12],[" ",17],["javaIdentifierPart",7]],"s":[["case",12],[" ",17],["javaIdentifierPart",7]]},{"p":["AST","Atom","CharacterProperty","JavaSpecial","identifierIgnorable"],"f":[["case",12],[" ",17],["identifierIgnorable",7]],"s":[["case",12],[" ",17],["identifierIgnorable",7]]},{"p":["AST","Atom","CharacterProperty","JavaSpecial","javaIdentifierStart"],"f":[["case",12],[" ",17],["javaIdentifierStart",7]],"s":[["case",12],[" ",17],["javaIdentifierStart",7]]},{"p":["AST","Atom","CharacterProperty","JavaSpecial","unicodeIdentifierPart"],"f":[["case",12],[" ",17],["unicodeIdentifierPart",7]],"s":[["case",12],[" ",17],["unicodeIdentifierPart",7]]},{"p":["AST","Atom","CharacterProperty","JavaSpecial","unicodeIdentifierStart"],"f":[["case",12],[" ",17],["unicodeIdentifierStart",7]],"s":[["case",12],[" ",17],["unicodeIdentifierStart",7]]},{"p":["AST","Atom","CharacterProperty","JavaSpecial","digit"],"f":[["case",12],[" ",17],["digit",7]],"s":[["case",12],[" ",17],["digit",7]]},{"p":["AST","Atom","CharacterProperty","JavaSpecial","defined"],"f":[["case",12],[" ",17],["defined",7]],"s":[["case",12],[" ",17],["defined",7]]},{"p":["AST","Atom","CharacterProperty","JavaSpecial","mirrored"],"f":[["case",12],[" ",17],["mirrored",7]],"s":[["case",12],[" ",17],["mirrored",7]]},{"p":["AST","Atom","CharacterProperty","JavaSpecial","lowerCase"],"f":[["case",12],[" ",17],["lowerCase",7]],"s":[["case",12],[" ",17],["lowerCase",7]]},{"p":["AST","Atom","CharacterProperty","JavaSpecial","spaceChar"],"f":[["case",12],[" ",17],["spaceChar",7]],"s":[["case",12],[" ",17],["spaceChar",7]]},{"p":["AST","Atom","CharacterProperty","JavaSpecial","titleCase"],"f":[["case",12],[" ",17],["titleCase",7]],"s":[["case",12],[" ",17],["titleCase",7]]},{"p":["AST","Atom","CharacterProperty","JavaSpecial","upperCase"],"f":[["case",12],[" ",17],["upperCase",7]],"s":[["case",12],[" ",17],["upperCase",7]]},{"p":["AST","Atom","CharacterProperty","PCRESpecialCategory","posixSpace"],"f":[["case",12],[" ",17],["posixSpace",7]],"s":[["case",12],[" ",17],["posixSpace",7]]},{"p":["AST","Atom","CharacterProperty","PCRESpecialCategory","alphanumeric"],"f":[["case",12],[" ",17],["alphanumeric",7]],"s":[["case",12],[" ",17],["alphanumeric",7]]},{"p":["AST","Atom","CharacterProperty","PCRESpecialCategory","universallyNamed"],"f":[["case",12],[" ",17],["universallyNamed",7]],"s":[["case",12],[" ",17],["universallyNamed",7]]},{"p":["AST","Atom","CharacterProperty","PCRESpecialCategory","perlWord"],"f":[["case",12],[" ",17],["perlWord",7]],"s":[["case",12],[" ",17],["perlWord",7]]},{"p":["AST","Atom","CharacterProperty","PCRESpecialCategory","perlSpace"],"f":[["case",12],[" ",17],["perlSpace",7]],"s":[["case",12],[" ",17],["perlSpace",7]]},{"p":["AST","Atom","CharacterProperty","Kind","MapKind","lowercase"],"f":[["case",12],[" ",17],["lowercase",7]],"s":[["case",12],[" ",17],["lowercase",7]]},{"p":["AST","Atom","CharacterProperty","Kind","MapKind","titlecase"],"f":[["case",12],[" ",17],["titlecase",7]],"s":[["case",12],[" ",17],["titlecase",7]]},{"p":["AST","Atom","CharacterProperty","Kind","MapKind","uppercase"],"f":[["case",12],[" ",17],["uppercase",7]],"s":[["case",12],[" ",17],["uppercase",7]]},{"p":["AST","Atom","CharacterProperty","Kind","javaSpecial(_:)"],"f":[["case",12],[" ",17],["javaSpecial",7],["(",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["CharacterProperty",18,57],[".",17],["JavaSpecial",18,19],[")",17]],"s":[["case",12],[" ",17],["javaSpecial",7],["(",17],["AST",18],[".",17],["Atom",18],[".",17],["CharacterProperty",18],[".",17],["JavaSpecial",18],[")",17]],"d":"Some special properties implemented by Java."},{"p":["AST","Atom","CharacterProperty","Kind","numericType(_:)"],"f":[["case",12],[" ",17],["numericType",7],["(",17],["Unicode",18,1327],[".",17],["NumericType",18,1328],[")",17]],"s":[["case",12],[" ",17],["numericType",7],["(",17],["Unicode",18],[".",17],["NumericType",18],[")",17]],"d":"Numeric type."},{"p":["AST","Atom","CharacterProperty","Kind","pcreSpecial(_:)"],"f":[["case",12],[" ",17],["pcreSpecial",7],["(",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["CharacterProperty",18,57],[".",17],["PCRESpecialCategory",18,20],[")",17]],"s":[["case",12],[" ",17],["pcreSpecial",7],["(",17],["AST",18],[".",17],["Atom",18],[".",17],["CharacterProperty",18],[".",17],["PCRESpecialCategory",18],[")",17]],"d":"Some special properties implemented by PCRE and Oniguruma."},{"p":["AST","Atom","CharacterProperty","Kind","numericValue(_:)"],"f":[["case",12],[" ",17],["numericValue",7],["(",17],["Double",18,1263],[")",17]],"s":[["case",12],[" ",17],["numericValue",7],["(",17],["Double",18],[")",17]],"d":"Numeric value."},{"p":["AST","Atom","CharacterProperty","Kind","generalCategory(_:)"],"f":[["case",12],[" ",17],["generalCategory",7],["(",17],["Unicode",18,1327],[".",17],["ExtendedGeneralCategory",18,565],[")",17]],"s":[["case",12],[" ",17],["generalCategory",7],["(",17],["Unicode",18],[".",17],["ExtendedGeneralCategory",18],[")",17]],"d":"A general category property."},{"p":["AST","Atom","CharacterProperty","Kind","scriptExtension(_:)"],"f":[["case",12],[" ",17],["scriptExtension",7],["(",17],["Unicode",18,1327],[".",17],["Script",18,567],[")",17]],"s":[["case",12],[" ",17],["scriptExtension",7],["(",17],["Unicode",18],[".",17],["Script",18],[")",17]]},{"p":["AST","Atom","CharacterProperty","Kind","age(major:minor:)"],"f":[["case",12],[" ",17],["age",7],["(",17],["major",1],[": ",17],["Int",18,1264],[", ",17],["minor",1],[": ",17],["Int",18,1264],[")",17]],"s":[["case",12],[" ",17],["age",7],["(",17],["major",1],[": ",17],["Int",18],[", ",17],["minor",1],[": ",17],["Int",18],[")",17]],"d":"Character age, as per UnicodeScalar.Properties.age."},{"p":["AST","Atom","CharacterProperty","Kind","any"],"f":[["case",12],[" ",17],["any",7]],"s":[["case",12],[" ",17],["any",7]],"d":"Matches any character, equivalent to Oniguruma's '\\O'."},{"p":["AST","Atom","CharacterProperty","Kind","ccc(_:)"],"f":[["case",12],[" ",17],["ccc",7],["(",17],["Unicode",18,1327],[".",17],["CanonicalCombiningClass",18,1329],[")",17]],"s":[["case",12],[" ",17],["ccc",7],["(",17],["Unicode",18],[".",17],["CanonicalCombiningClass",18],[")",17]],"d":"Canonical Combining Class."},{"p":["AST","Atom","CharacterProperty","Kind","ascii"],"f":[["case",12],[" ",17],["ascii",7]],"s":[["case",12],[" ",17],["ascii",7]],"d":"All ascii characters U+00...U+7F"},{"p":["AST","Atom","CharacterProperty","Kind","block(_:)"],"f":[["case",12],[" ",17],["block",7],["(",17],["Unicode",18,1327],[".",17],["Block",18,566],[")",17]],"s":[["case",12],[" ",17],["block",7],["(",17],["Unicode",18],[".",17],["Block",18],[")",17]],"d":"A block property."},{"p":["AST","Atom","CharacterProperty","Kind","named(_:)"],"f":[["case",12],[" ",17],["named",7],["(",17],["String",18,1220],[")",17]],"s":[["case",12],[" ",17],["named",7],["(",17],["String",18],[")",17]],"d":"Character name in the form `\\p{name=...}`"},{"p":["AST","Atom","CharacterProperty","Kind","posix(_:)"],"f":[["case",12],[" ",17],["posix",7],["(",17],["Unicode",18,1327],[".",17],["POSIXProperty",18,563],[")",17]],"s":[["case",12],[" ",17],["posix",7],["(",17],["Unicode",18],[".",17],["POSIXProperty",18],[")",17]]},{"p":["AST","Atom","CharacterProperty","Kind","binary(_:value:)"],"f":[["case",12],[" ",17],["binary",7],["(",17],["Unicode",18,1327],[".",17],["BinaryProperty",18,564],[", ",17],["value",1],[": ",17],["Bool",18,1262],[" = true)",17]],"s":[["case",12],[" ",17],["binary",7],["(",17],["Unicode",18],[".",17],["BinaryProperty",18],[", ",17],["value",1],[": ",17],["Bool",18],[")",17]],"d":"Binary character properties. Note that only the following are required\nby UTS#18 Level 1:\n- Alphabetic\n- Uppercase\n- Lowercase\n- White_Space\n- Noncharacter_Code_Point\n- Default_Ignorable_Code_Point"},{"p":["AST","Atom","CharacterProperty","Kind","script(_:)"],"f":[["case",12],[" ",17],["script",7],["(",17],["Unicode",18,1327],[".",17],["Script",18,567],[")",17]],"s":[["case",12],[" ",17],["script",7],["(",17],["Unicode",18],[".",17],["Script",18],[")",17]],"d":"Character script and script extensions."},{"p":["AST","Atom","CharacterProperty","Kind","mapping(_:_:)"],"f":[["case",12],[" ",17],["mapping",7],["(",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["CharacterProperty",18,57],[".",17],["Kind",18,21],[".",17],["MapKind",18,22],[", ",17],["String",18,1220],[")",17]],"s":[["case",12],[" ",17],["mapping",7],["(",17],["AST",18],[".",17],["Atom",18],[".",17],["CharacterProperty",18],[".",17],["Kind",18],[".",17],["MapKind",18],[", ",17],["String",18],[")",17]],"d":"Case mapping."},{"p":["AST","Atom","CharacterProperty","Kind","assigned"],"f":[["case",12],[" ",17],["assigned",7]],"s":[["case",12],[" ",17],["assigned",7]]},{"p":["AST","Atom","BacktrackingDirective","Kind","fail"],"f":[["case",12],[" ",17],["fail",7]],"s":[["case",12],[" ",17],["fail",7]],"d":"(*FAIL)"},{"p":["AST","Atom","BacktrackingDirective","Kind","mark"],"f":[["case",12],[" ",17],["mark",7]],"s":[["case",12],[" ",17],["mark",7]],"d":"(*MARK:NAME)"},{"p":["AST","Atom","BacktrackingDirective","Kind","skip"],"f":[["case",12],[" ",17],["skip",7]],"s":[["case",12],[" ",17],["skip",7]],"d":"(*SKIP)"},{"p":["AST","Atom","BacktrackingDirective","Kind","then"],"f":[["case",12],[" ",17],["then",7]],"s":[["case",12],[" ",17],["then",7]],"d":"(*THEN)"},{"p":["AST","Atom","BacktrackingDirective","Kind","prune"],"f":[["case",12],[" ",17],["prune",7]],"s":[["case",12],[" ",17],["prune",7]],"d":"(*PRUNE)"},{"p":["AST","Atom","BacktrackingDirective","Kind","accept"],"f":[["case",12],[" ",17],["accept",7]],"s":[["case",12],[" ",17],["accept",7]],"d":"(*ACCEPT)"},{"p":["AST","Atom","BacktrackingDirective","Kind","commit"],"f":[["case",12],[" ",17],["commit",7]],"s":[["case",12],[" ",17],["commit",7]],"d":"(*COMMIT)"},{"p":["AST","Atom","Kind","subpattern(_:)"],"f":[["case",12],[" ",17],["subpattern",7],["(",17],["AST",18,39],[".",17],["Reference",18,70],[")",17]],"s":[["case",12],[" ",17],["subpattern",7],["(",17],["AST",18],[".",17],["Reference",18],[")",17]]},{"p":["AST","Atom","Kind","startOfLine"],"f":[["case",12],[" ",17],["startOfLine",7]],"s":[["case",12],[" ",17],["startOfLine",7]],"d":"^"},{"p":["AST","Atom","Kind","keyboardMeta(_:)"],"f":[["case",12],[" ",17],["keyboardMeta",7],["(",17],["Character",18,1203],[")",17]],"s":[["case",12],[" ",17],["keyboardMeta",7],["(",17],["Character",18],[")",17]]},{"p":["AST","Atom","Kind","backreference(_:)"],"f":[["case",12],[" ",17],["backreference",7],["(",17],["AST",18,39],[".",17],["Reference",18,70],[")",17]],"s":[["case",12],[" ",17],["backreference",7],["(",17],["AST",18],[".",17],["Reference",18],[")",17]]},{"p":["AST","Atom","Kind","namedCharacter(_:)"],"f":[["case",12],[" ",17],["namedCharacter",7],["(",17],["String",18,1220],[")",17]],"s":[["case",12],[" ",17],["namedCharacter",7],["(",17],["String",18],[")",17]],"d":"A named character \\N{...}"},{"p":["AST","Atom","Kind","scalarSequence(_:)"],"f":[["case",12],[" ",17],["scalarSequence",7],["(",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["ScalarSequence",18,56],[")",17]],"s":[["case",12],[" ",17],["scalarSequence",7],["(",17],["AST",18],[".",17],["Atom",18],[".",17],["ScalarSequence",18],[")",17]],"d":"A whitespace-separated sequence of Unicode scalar values which are\nimplicitly splatted out.\n\n`\\u{A B C}` -> `\\u{A}\\u{B}\\u{C}`"},{"p":["AST","Atom","Kind","keyboardControl(_:)"],"f":[["case",12],[" ",17],["keyboardControl",7],["(",17],["Character",18,1203],[")",17]],"s":[["case",12],[" ",17],["keyboardControl",7],["(",17],["Character",18],[")",17]],"d":"A control character\n\n\\cx, \\C-x, \\M-x, \\M-\\C-x, ..."},{"p":["AST","Atom","Kind","keyboardMetaControl(_:)"],"f":[["case",12],[" ",17],["keyboardMetaControl",7],["(",17],["Character",18,1203],[")",17]],"s":[["case",12],[" ",17],["keyboardMetaControl",7],["(",17],["Character",18],[")",17]]},{"p":["AST","Atom","Kind","backtrackingDirective(_:)"],"f":[["case",12],[" ",17],["backtrackingDirective",7],["(",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["BacktrackingDirective",18,58],[")",17]],"s":[["case",12],[" ",17],["backtrackingDirective",7],["(",17],["AST",18],[".",17],["Atom",18],[".",17],["BacktrackingDirective",18],[")",17]]},{"p":["AST","Atom","Kind","changeMatchingOptions(_:)"],"f":[["case",12],[" ",17],["changeMatchingOptions",7],["(",17],["AST",18,39],[".",17],["MatchingOptionSequence",18,53],[")",17]],"s":[["case",12],[" ",17],["changeMatchingOptions",7],["(",17],["AST",18],[".",17],["MatchingOptionSequence",18],[")",17]]},{"p":["AST","Atom","Kind","any"],"f":[["case",12],[" ",17],["any",7]],"s":[["case",12],[" ",17],["any",7]],"d":"."},{"p":["AST","Atom","Kind","char(_:)"],"f":[["case",12],[" ",17],["char",7],["(",17],["Character",18,1203],[")",17]],"s":[["case",12],[" ",17],["char",7],["(",17],["Character",18],[")",17]],"d":"Just a character\n\nA, \\*, \\\\, ..."},{"p":["AST","Atom","Kind","scalar(_:)"],"f":[["case",12],[" ",17],["scalar",7],["(",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["Scalar",18,59],[")",17]],"s":[["case",12],[" ",17],["scalar",7],["(",17],["AST",18],[".",17],["Atom",18],[".",17],["Scalar",18],[")",17]],"d":"A Unicode scalar value written as a literal\n\n\\u{...}, \\0dd, \\x{...}, ..."},{"p":["AST","Atom","Kind","callout(_:)"],"f":[["case",12],[" ",17],["callout",7],["(",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["Callout",18,25],[")",17]],"s":[["case",12],[" ",17],["callout",7],["(",17],["AST",18],[".",17],["Atom",18],[".",17],["Callout",18],[")",17]]},{"p":["AST","Atom","Kind","escaped(_:)"],"f":[["case",12],[" ",17],["escaped",7],["(",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["EscapedBuiltin",18,18],[")",17]],"s":[["case",12],[" ",17],["escaped",7],["(",17],["AST",18],[".",17],["Atom",18],[".",17],["EscapedBuiltin",18],[")",17]],"d":"A built-in escaped character\n\nLiteral escapes: \\n, \\t ...\nCharacter classes: \\s, \\w ...\n\\n, \\s, \\Q, \\b, \\A, \\K, ..."},{"p":["AST","Atom","Kind","property(_:)"],"f":[["case",12],[" ",17],["property",7],["(",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["CharacterProperty",18,57],[")",17]],"s":[["case",12],[" ",17],["property",7],["(",17],["AST",18],[".",17],["Atom",18],[".",17],["CharacterProperty",18],[")",17]],"d":"A Unicode property, category, or script, including those written using\nPOSIX syntax.\n\n\\p{...}, \\p{^...}, \\P, [:...:], [:^...:]"},{"p":["AST","Atom","Kind","endOfLine"],"f":[["case",12],[" ",17],["endOfLine",7]],"s":[["case",12],[" ",17],["endOfLine",7]],"d":"$"},{"p":["AST","Atom","Callout","onigurumaNamed(_:)"],"f":[["case",12],[" ",17],["onigurumaNamed",7],["(",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["Callout",18,25],[".",17],["OnigurumaNamed",18,61],[")",17]],"s":[["case",12],[" ",17],["onigurumaNamed",7],["(",17],["AST",18],[".",17],["Atom",18],[".",17],["Callout",18],[".",17],["OnigurumaNamed",18],[")",17]]},{"p":["AST","Atom","Callout","OnigurumaOfContents","Direction","inProgress"],"f":[["case",12],[" ",17],["inProgress",7]],"s":[["case",12],[" ",17],["inProgress",7]]},{"p":["AST","Atom","Callout","OnigurumaOfContents","Direction","inRetraction"],"f":[["case",12],[" ",17],["inRetraction",7]],"s":[["case",12],[" ",17],["inRetraction",7]]},{"p":["AST","Atom","Callout","OnigurumaOfContents","Direction","both"],"f":[["case",12],[" ",17],["both",7]],"s":[["case",12],[" ",17],["both",7]]},{"p":["AST","Atom","Callout","onigurumaOfContents(_:)"],"f":[["case",12],[" ",17],["onigurumaOfContents",7],["(",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["Callout",18,25],[".",17],["OnigurumaOfContents",18,63],[")",17]],"s":[["case",12],[" ",17],["onigurumaOfContents",7],["(",17],["AST",18],[".",17],["Atom",18],[".",17],["Callout",18],[".",17],["OnigurumaOfContents",18],[")",17]]},{"p":["AST","Atom","Callout","PCRE","Argument","number(_:)"],"f":[["case",12],[" ",17],["number",7],["(",17],["Int",18,1264],[")",17]],"s":[["case",12],[" ",17],["number",7],["(",17],["Int",18],[")",17]]},{"p":["AST","Atom","Callout","PCRE","Argument","string(_:)"],"f":[["case",12],[" ",17],["string",7],["(",17],["String",18,1220],[")",17]],"s":[["case",12],[" ",17],["string",7],["(",17],["String",18],[")",17]]},{"p":["AST","Atom","Callout","pcre(_:)"],"f":[["case",12],[" ",17],["pcre",7],["(",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["Callout",18,25],[".",17],["PCRE",18,64],[")",17]],"s":[["case",12],[" ",17],["pcre",7],["(",17],["AST",18],[".",17],["Atom",18],[".",17],["Callout",18],[".",17],["PCRE",18],[")",17]]},{"p":["AST","Node","alternation(_:)"],"f":[["case",12],[" ",17],["alternation",7],["(",17],["AST",18,39],[".",17],["Alternation",18,40],[")",17]],"s":[["case",12],[" ",17],["alternation",7],["(",17],["AST",18],[".",17],["Alternation",18],[")",17]],"d":"... | ... | ..."},{"p":["AST","Node","conditional(_:)"],"f":[["case",12],[" ",17],["conditional",7],["(",17],["AST",18,39],[".",17],["Conditional",18,41],[")",17]],"s":[["case",12],[" ",17],["conditional",7],["(",17],["AST",18],[".",17],["Conditional",18],[")",17]],"d":"(?(cond) true-branch | false-branch)"},{"p":["AST","Node","concatenation(_:)"],"f":[["case",12],[" ",17],["concatenation",7],["(",17],["AST",18,39],[".",17],["Concatenation",18,45],[")",17]],"s":[["case",12],[" ",17],["concatenation",7],["(",17],["AST",18],[".",17],["Concatenation",18],[")",17]],"d":"... ..."},{"p":["AST","Node","interpolation(_:)"],"f":[["case",12],[" ",17],["interpolation",7],["(",17],["AST",18,39],[".",17],["Interpolation",18,46],[")",17]],"s":[["case",12],[" ",17],["interpolation",7],["(",17],["AST",18],[".",17],["Interpolation",18],[")",17]],"d":"Intepolation `<{...}>`, currently reserved for future use."},{"p":["AST","Node","absentFunction(_:)"],"f":[["case",12],[" ",17],["absentFunction",7],["(",17],["AST",18,39],[".",17],["AbsentFunction",18,47],[")",17]],"s":[["case",12],[" ",17],["absentFunction",7],["(",17],["AST",18],[".",17],["AbsentFunction",18],[")",17]]},{"p":["AST","Node","quantification(_:)"],"f":[["case",12],[" ",17],["quantification",7],["(",17],["AST",18,39],[".",17],["Quantification",18,49],[")",17]],"s":[["case",12],[" ",17],["quantification",7],["(",17],["AST",18],[".",17],["Quantification",18],[")",17]]},{"p":["AST","Node","customCharacterClass(_:)"],"f":[["case",12],[" ",17],["customCharacterClass",7],["(",17],["AST",18,39],[".",17],["CustomCharacterClass",18,50],[")",17]],"s":[["case",12],[" ",17],["customCharacterClass",7],["(",17],["AST",18],[".",17],["CustomCharacterClass",18],[")",17]]},{"p":["AST","Node","atom(_:)"],"f":[["case",12],[" ",17],["atom",7],["(",17],["AST",18,39],[".",17],["Atom",18,55],[")",17]],"s":[["case",12],[" ",17],["atom",7],["(",17],["AST",18],[".",17],["Atom",18],[")",17]]},{"p":["AST","Node","empty(_:)"],"f":[["case",12],[" ",17],["empty",7],["(",17],["AST",18,39],[".",17],["Empty",18,65],[")",17]],"s":[["case",12],[" ",17],["empty",7],["(",17],["AST",18],[".",17],["Empty",18],[")",17]]},{"p":["AST","Node","group(_:)"],"f":[["case",12],[" ",17],["group",7],["(",17],["AST",18,39],[".",17],["Group",18,66],[")",17]],"s":[["case",12],[" ",17],["group",7],["(",17],["AST",18],[".",17],["Group",18],[")",17]],"d":"(...)"},{"p":["AST","Node","quote(_:)"],"f":[["case",12],[" ",17],["quote",7],["(",17],["AST",18,39],[".",17],["Quote",18,68],[")",17]],"s":[["case",12],[" ",17],["quote",7],["(",17],["AST",18],[".",17],["Quote",18],[")",17]],"d":"\\Q...\\E"},{"p":["AST","Node","trivia(_:)"],"f":[["case",12],[" ",17],["trivia",7],["(",17],["AST",18,39],[".",17],["Trivia",18,69],[")",17]],"s":[["case",12],[" ",17],["trivia",7],["(",17],["AST",18],[".",17],["Trivia",18],[")",17]],"d":"Comments, non-semantic whitespace, etc"},{"p":["AST","Group","Kind","lookbehind"],"f":[["case",12],[" ",17],["lookbehind",7]],"s":[["case",12],[" ",17],["lookbehind",7]]},{"p":["AST","Group","Kind","nonCapture"],"f":[["case",12],[" ",17],["nonCapture",7]],"s":[["case",12],[" ",17],["nonCapture",7]]},{"p":["AST","Group","Kind","namedCapture(_:)"],"f":[["case",12],[" ",17],["namedCapture",7],["(",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["String",18,1220],[">)",17]],"s":[["case",12],[" ",17],["namedCapture",7],["(",17],["Source",18],[".",17],["Located",18],["<",17],["String",18],[">)",17]]},{"p":["AST","Group","Kind","atomicScriptRun"],"f":[["case",12],[" ",17],["atomicScriptRun",7]],"s":[["case",12],[" ",17],["atomicScriptRun",7]]},{"p":["AST","Group","Kind","balancedCapture(_:)"],"f":[["case",12],[" ",17],["balancedCapture",7],["(",17],["AST",18,39],[".",17],["Group",18,66],[".",17],["BalancedCapture",18,67],[")",17]],"s":[["case",12],[" ",17],["balancedCapture",7],["(",17],["AST",18],[".",17],["Group",18],[".",17],["BalancedCapture",18],[")",17]]},{"p":["AST","Group","Kind","nonCaptureReset"],"f":[["case",12],[" ",17],["nonCaptureReset",7]],"s":[["case",12],[" ",17],["nonCaptureReset",7]]},{"p":["AST","Group","Kind","negativeLookahead"],"f":[["case",12],[" ",17],["negativeLookahead",7]],"s":[["case",12],[" ",17],["negativeLookahead",7]]},{"p":["AST","Group","Kind","atomicNonCapturing"],"f":[["case",12],[" ",17],["atomicNonCapturing",7]],"s":[["case",12],[" ",17],["atomicNonCapturing",7]]},{"p":["AST","Group","Kind","negativeLookbehind"],"f":[["case",12],[" ",17],["negativeLookbehind",7]],"s":[["case",12],[" ",17],["negativeLookbehind",7]]},{"p":["AST","Group","Kind","nonAtomicLookahead"],"f":[["case",12],[" ",17],["nonAtomicLookahead",7]],"s":[["case",12],[" ",17],["nonAtomicLookahead",7]]},{"p":["AST","Group","Kind","nonAtomicLookbehind"],"f":[["case",12],[" ",17],["nonAtomicLookbehind",7]],"s":[["case",12],[" ",17],["nonAtomicLookbehind",7]]},{"p":["AST","Group","Kind","changeMatchingOptions(_:)"],"f":[["case",12],[" ",17],["changeMatchingOptions",7],["(",17],["AST",18,39],[".",17],["MatchingOptionSequence",18,53],[")",17]],"s":[["case",12],[" ",17],["changeMatchingOptions",7],["(",17],["AST",18],[".",17],["MatchingOptionSequence",18],[")",17]]},{"p":["AST","Group","Kind","capture"],"f":[["case",12],[" ",17],["capture",7]],"s":[["case",12],[" ",17],["capture",7]]},{"p":["AST","Group","Kind","lookahead"],"f":[["case",12],[" ",17],["lookahead",7]],"s":[["case",12],[" ",17],["lookahead",7]]},{"p":["AST","Group","Kind","scriptRun"],"f":[["case",12],[" ",17],["scriptRun",7]],"s":[["case",12],[" ",17],["scriptRun",7]]},{"p":["AST","Reference","Kind","named(_:)"],"f":[["case",12],[" ",17],["named",7],["(",17],["String",18,1220],[")",17]],"s":[["case",12],[" ",17],["named",7],["(",17],["String",18],[")",17]]},{"p":["AST","Reference","Kind","absolute(_:)"],"f":[["case",12],[" ",17],["absolute",7],["(",17],["Int",18,1264],[")",17]],"s":[["case",12],[" ",17],["absolute",7],["(",17],["Int",18],[")",17]]},{"p":["AST","Reference","Kind","relative(_:)"],"f":[["case",12],[" ",17],["relative",7],["(",17],["Int",18,1264],[")",17]],"s":[["case",12],[" ",17],["relative",7],["(",17],["Int",18],[")",17]]},{"p":["ASTStage","semantic"],"f":[["case",12],[" ",17],["semantic",7]],"s":[["case",12],[" ",17],["semantic",7]],"d":"The regex is parsed, and a syntactically and semantically valid AST is\nreturned. Otherwise an error is thrown. A semantically valid AST has been\nchecked for e.g unsupported constructs and invalid backreferences."},{"p":["ASTStage","syntactic"],"f":[["case",12],[" ",17],["syntactic",7]],"s":[["case",12],[" ",17],["syntactic",7]],"d":"The regex is parsed, and a syntactically valid AST is returned. Otherwise\nan error is thrown. This is useful for e.g syntax coloring."},{"p":["CaptureList","Capture","init(name:type:optionalDepth:_:)"],"f":[["init",10],["(",17],["name",1],[": ",17],["String",18,1220],["? = nil, ",17],["type",1],[": ",17],["Any",12],[".Type = Substring.self, ",17],["optionalDepth",1],[": ",17],["Int",18,1264],[", ",17],["_",1],[" ",17],["location",2],[": ",17],["SourceLocation",18,557],[")",17]],"s":[["init",10],["(",17],["name",1],[": ",17],["String",18],["?, ",17],["type",1],[": ",17],["Any",12],[".Type, ",17],["optionalDepth",1],[": ",17],["Int",18],[", ",17],["SourceLocation",18],[")",17]]},{"p":["CaptureList","init(arrayLiteral:)"],"f":[["init",10],["(",17],["arrayLiteral",1],[" ",17],["elements",2],[": ",17],["CaptureList",18,32],[".",17],["Capture",18,33],["...)",17]],"s":[["init",10],["(",17],["arrayLiteral",1],[": ",17],["CaptureList",18],[".",17],["Capture",18],["...)",17]],"o":1323},{"p":["CaptureList","init(_:)"],"f":[["init",10],["<",17],["S",0],[">(",17],["_",1],[" ",17],["s",2],[": ",17],["S",18],[") ",17],["where",12],[" ",17],["S",18],[" : ",17],["Sequence",18,1223],[", ",17],["S",18],[".",17],["Element",18],[" == ",17],["CaptureList",18,32],[".",17],["Capture",18,33]],"s":[["init",10],["<",17],["S",0],[">(",17],["S",18],[")",17]],"c":[["S",1,"Sequence",1223],["S.Element",2,"CaptureList.Capture",33]],"g":[["S",0,0]]},{"p":["Unreachable","init(_:file:line:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["s",2],[": ",17],["String",18,1220],[", ",17],["file",1],[": ",17],["StaticString",18,1317],[" = ",17],["#file",12],[", ",17],["line",1],[": ",17],["UInt",18,1299],[" = ",17],["#line",12],[")",17]],"s":[["init",10],["(",17],["String",18],[", ",17],["file",1],[": ",17],["StaticString",18],[", ",17],["line",1],[": ",17],["UInt",18],[")",17]]},{"p":["Unsupported","init(_:file:line:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["s",2],[": ",17],["String",18,1220],[", ",17],["file",1],[": ",17],["StaticString",18,1317],[" = ",17],["#file",12],[", ",17],["line",1],[": ",17],["UInt",18,1299],[" = ",17],["#line",12],[")",17]],"s":[["init",10],["(",17],["String",18],[", ",17],["file",1],[": ",17],["StaticString",18],[", ",17],["line",1],[": ",17],["UInt",18],[")",17]]},{"p":["PrettyPrinter","init(maxTopDownLevels:minBottomUpLevels:)"],"f":[["init",10],["(",17],["maxTopDownLevels",1],[": ",17],["Int",18,1264],["? = nil, ",17],["minBottomUpLevels",1],[": ",17],["Int",18,1264],["? = nil)",17]],"s":[["init",10],["(",17],["maxTopDownLevels",1],[": ",17],["Int",18],["?, ",17],["minBottomUpLevels",1],[": ",17],["Int",18],["?)",17]]},{"p":["SyntaxOptions","init(rawValue:)"],"f":[["init",10],["(",17],["rawValue",1],[": ",17],["UInt",18,1299],[")",17]],"s":[["init",10],["(",17],["rawValue",1],[": ",17],["UInt",18],[")",17]],"o":1333},{"p":["SyntaxOptions","init()"],"f":[["init",10],["()",17]],"s":[["init",10],["()",17]],"o":1314},{"p":["AST","Alternation","init(_:pipes:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["mems",2],[": [",17],["AST",18,39],[".",17],["Node",18,28],["], ",17],["pipes",1],[": [",17],["SourceLocation",18,557],["])",17]],"s":[["init",10],["([",17],["AST",18],[".",17],["Node",18],["], ",17],["pipes",1],[": [",17],["SourceLocation",18],["])",17]]},{"p":["AST","Conditional","Condition","PCREVersionCheck","init(_:_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["kind",2],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["AST",18,39],[".",17],["Conditional",18,41],[".",17],["Condition",18,42],[".",17],["PCREVersionCheck",18,43],[".",17],["Kind",18,4],[">, ",17],["_",1],[" ",17],["num",2],[": ",17],["AST",18,39],[".",17],["Conditional",18,41],[".",17],["Condition",18,42],[".",17],["PCREVersionNumber",18,44],[")",17]],"s":[["init",10],["(",17],["Source",18],[".",17],["Located",18],["<",17],["AST",18],[".",17],["Conditional",18],[".",17],["Condition",18],[".",17],["PCREVersionCheck",18],[".",17],["Kind",18],[">, ",17],["AST",18],[".",17],["Conditional",18],[".",17],["Condition",18],[".",17],["PCREVersionNumber",18],[")",17]]},{"p":["AST","Conditional","Condition","PCREVersionNumber","init(major:minor:_:)"],"f":[["init",10],["(",17],["major",1],[": ",17],["Int",18,1264],[", ",17],["minor",1],[": ",17],["Int",18,1264],[", ",17],["_",1],[" ",17],["location",2],[": ",17],["SourceLocation",18,557],[")",17]],"s":[["init",10],["(",17],["major",1],[": ",17],["Int",18],[", ",17],["minor",1],[": ",17],["Int",18],[", ",17],["SourceLocation",18],[")",17]]},{"p":["AST","Conditional","Condition","init(_:_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["kind",2],[": ",17],["AST",18,39],[".",17],["Conditional",18,41],[".",17],["Condition",18,42],[".",17],["Kind",18,5],[", ",17],["_",1],[" ",17],["location",2],[": ",17],["SourceLocation",18,557],[")",17]],"s":[["init",10],["(",17],["AST",18],[".",17],["Conditional",18],[".",17],["Condition",18],[".",17],["Kind",18],[", ",17],["SourceLocation",18],[")",17]]},{"p":["AST","Conditional","init(_:trueBranch:pipe:falseBranch:_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["condition",2],[": ",17],["AST",18,39],[".",17],["Conditional",18,41],[".",17],["Condition",18,42],[", ",17],["trueBranch",1],[": ",17],["AST",18,39],[".",17],["Node",18,28],[", ",17],["pipe",1],[": ",17],["SourceLocation",18,557],["?, ",17],["falseBranch",1],[": ",17],["AST",18,39],[".",17],["Node",18,28],[", ",17],["_",1],[" ",17],["location",2],[": ",17],["SourceLocation",18,557],[")",17]],"s":[["init",10],["(",17],["AST",18],[".",17],["Conditional",18],[".",17],["Condition",18],[", ",17],["trueBranch",1],[": ",17],["AST",18],[".",17],["Node",18],[", ",17],["pipe",1],[": ",17],["SourceLocation",18],["?, ",17],["falseBranch",1],[": ",17],["AST",18],[".",17],["Node",18],[", ",17],["SourceLocation",18],[")",17]]},{"p":["AST","Concatenation","init(_:_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["mems",2],[": [",17],["AST",18,39],[".",17],["Node",18,28],["], ",17],["_",1],[" ",17],["location",2],[": ",17],["SourceLocation",18,557],[")",17]],"s":[["init",10],["([",17],["AST",18],[".",17],["Node",18],["], ",17],["SourceLocation",18],[")",17]]},{"p":["AST","Interpolation","init(_:_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["contents",2],[": ",17],["String",18,1220],[", ",17],["_",1],[" ",17],["location",2],[": ",17],["SourceLocation",18,557],[")",17]],"s":[["init",10],["(",17],["String",18],[", ",17],["SourceLocation",18],[")",17]]},{"p":["AST","AbsentFunction","init(_:start:location:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["kind",2],[": ",17],["AST",18,39],[".",17],["AbsentFunction",18,47],[".",17],["Kind",18,6],[", ",17],["start",1],[": ",17],["SourceLocation",18,557],[", ",17],["location",1],[": ",17],["SourceLocation",18,557],[")",17]],"s":[["init",10],["(",17],["AST",18],[".",17],["AbsentFunction",18],[".",17],["Kind",18],[", ",17],["start",1],[": ",17],["SourceLocation",18],[", ",17],["location",1],[": ",17],["SourceLocation",18],[")",17]]},{"p":["AST","MatchingOption","init(_:location:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["kind",2],[": ",17],["AST",18,39],[".",17],["MatchingOption",18,48],[".",17],["Kind",18,8],[", ",17],["location",1],[": ",17],["SourceLocation",18,557],[")",17]],"s":[["init",10],["(",17],["AST",18],[".",17],["MatchingOption",18],[".",17],["Kind",18],[", ",17],["location",1],[": ",17],["SourceLocation",18],[")",17]]},{"p":["AST","Quantification","Kind","init(rawValue:)"],"f":[["init",10],["?(",17],["rawValue",1],[": ",17],["String",18,1220],[")",17]],"s":[["init",10],["?(",17],["rawValue",1],[": ",17],["String",18],[")",17]],"o":1259},{"p":["AST","Quantification","init(_:_:_:_:trivia:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["amount",2],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["AST",18,39],[".",17],["Quantification",18,49],[".",17],["Amount",18,10],[">, ",17],["_",1],[" ",17],["kind",2],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["AST",18,39],[".",17],["Quantification",18,49],[".",17],["Kind",18,9],[">, ",17],["_",1],[" ",17],["child",2],[": ",17],["AST",18,39],[".",17],["Node",18,28],[", ",17],["_",1],[" ",17],["r",2],[": ",17],["SourceLocation",18,557],[", ",17],["trivia",1],[": [",17],["AST",18,39],[".",17],["Trivia",18,69],["])",17]],"s":[["init",10],["(",17],["Source",18],[".",17],["Located",18],["<",17],["AST",18],[".",17],["Quantification",18],[".",17],["Amount",18],[">, ",17],["Source",18],[".",17],["Located",18],["<",17],["AST",18],[".",17],["Quantification",18],[".",17],["Kind",18],[">, ",17],["AST",18],[".",17],["Node",18],[", ",17],["SourceLocation",18],[", ",17],["trivia",1],[": [",17],["AST",18],[".",17],["Trivia",18],["])",17]]},{"p":["AST","CustomCharacterClass","Range","init(_:_:_:trivia:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["lhs",2],[": ",17],["AST",18,39],[".",17],["Atom",18,55],[", ",17],["_",1],[" ",17],["dashLoc",2],[": ",17],["SourceLocation",18,557],[", ",17],["_",1],[" ",17],["rhs",2],[": ",17],["AST",18,39],[".",17],["Atom",18,55],[", ",17],["trivia",1],[": [",17],["AST",18,39],[".",17],["Trivia",18,69],["])",17]],"s":[["init",10],["(",17],["AST",18],[".",17],["Atom",18],[", ",17],["SourceLocation",18],[", ",17],["AST",18],[".",17],["Atom",18],[", ",17],["trivia",1],[": [",17],["AST",18],[".",17],["Trivia",18],["])",17]]},{"p":["AST","CustomCharacterClass","SetOp","init(rawValue:)"],"f":[["init",10],["?(",17],["rawValue",1],[": ",17],["String",18,1220],[")",17]],"s":[["init",10],["?(",17],["rawValue",1],[": ",17],["String",18],[")",17]],"o":1259},{"p":["AST","CustomCharacterClass","Start","init(rawValue:)"],"f":[["init",10],["?(",17],["rawValue",1],[": ",17],["String",18,1220],[")",17]],"s":[["init",10],["?(",17],["rawValue",1],[": ",17],["String",18],[")",17]],"o":1259},{"p":["AST","CustomCharacterClass","init(_:_:_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["start",2],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["AST",18,39],[".",17],["CustomCharacterClass",18,50],[".",17],["Start",18,12],[">, ",17],["_",1],[" ",17],["members",2],[": [",17],["AST",18,39],[".",17],["CustomCharacterClass",18,50],[".",17],["Member",18,13],["], ",17],["_",1],[" ",17],["sr",2],[": ",17],["SourceLocation",18,557],[")",17]],"s":[["init",10],["(",17],["Source",18],[".",17],["Located",18],["<",17],["AST",18],[".",17],["CustomCharacterClass",18],[".",17],["Start",18],[">, [",17],["AST",18],[".",17],["CustomCharacterClass",18],[".",17],["Member",18],["], ",17],["SourceLocation",18],[")",17]]},{"p":["AST","GlobalMatchingOption","init(_:_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["kind",2],[": ",17],["AST",18,39],[".",17],["GlobalMatchingOption",18,52],[".",17],["Kind",18,16],[", ",17],["_",1],[" ",17],["location",2],[": ",17],["SourceLocation",18,557],[")",17]],"s":[["init",10],["(",17],["AST",18],[".",17],["GlobalMatchingOption",18],[".",17],["Kind",18],[", ",17],["SourceLocation",18],[")",17]]},{"p":["AST","MatchingOptionSequence","init(adding:)"],"f":[["init",10],["(",17],["adding",1],[": [",17],["AST",18,39],[".",17],["MatchingOption",18,48],["])",17]],"s":[["init",10],["(",17],["adding",1],[": [",17],["AST",18],[".",17],["MatchingOption",18],["])",17]]},{"p":["AST","MatchingOptionSequence","init(caretLoc:adding:minusLoc:removing:)"],"f":[["init",10],["(",17],["caretLoc",1],[": ",17],["SourceLocation",18,557],["?, ",17],["adding",1],[": [",17],["AST",18,39],[".",17],["MatchingOption",18,48],["], ",17],["minusLoc",1],[": ",17],["SourceLocation",18,557],["?, ",17],["removing",1],[": [",17],["AST",18,39],[".",17],["MatchingOption",18,48],["])",17]],"s":[["init",10],["(",17],["caretLoc",1],[": ",17],["SourceLocation",18],["?, ",17],["adding",1],[": [",17],["AST",18],[".",17],["MatchingOption",18],["], ",17],["minusLoc",1],[": ",17],["SourceLocation",18],["?, ",17],["removing",1],[": [",17],["AST",18],[".",17],["MatchingOption",18],["])",17]]},{"p":["AST","MatchingOptionSequence","init(removing:)"],"f":[["init",10],["(",17],["removing",1],[": [",17],["AST",18,39],[".",17],["MatchingOption",18,48],["])",17]],"s":[["init",10],["(",17],["removing",1],[": [",17],["AST",18],[".",17],["MatchingOption",18],["])",17]]},{"p":["AST","GlobalMatchingOptionSequence","init(_:)"],"f":[["init",10],["?(",17],["_",1],[" ",17],["options",2],[": [",17],["AST",18,39],[".",17],["GlobalMatchingOption",18,52],["])",17]],"s":[["init",10],["?([",17],["AST",18],[".",17],["GlobalMatchingOption",18],["])",17]]},{"p":["AST","Atom","AssertionKind","init(rawValue:)"],"f":[["init",10],["?(",17],["rawValue",1],[": ",17],["String",18,1220],[")",17]],"s":[["init",10],["?(",17],["rawValue",1],[": ",17],["String",18],[")",17]],"o":1259},{"p":["AST","Atom","EscapedBuiltin","init(_:inCustomCharacterClass:)"],"f":[["init",10],["?(",17],["_",1],[" ",17],["c",2],[": ",17],["Character",18,1203],[", ",17],["inCustomCharacterClass",1],[" ",17],["customCC",2],[": ",17],["Bool",18,1262],[")",17]],"s":[["init",10],["?(",17],["Character",18],[", ",17],["inCustomCharacterClass",1],[": ",17],["Bool",18],[")",17]]},{"p":["AST","Atom","ScalarSequence","init(_:trivia:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["scalars",2],[": [",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["Scalar",18,59],["], ",17],["trivia",1],[": [",17],["AST",18,39],[".",17],["Trivia",18,69],["])",17]],"s":[["init",10],["([",17],["AST",18],[".",17],["Atom",18],[".",17],["Scalar",18],["], ",17],["trivia",1],[": [",17],["AST",18],[".",17],["Trivia",18],["])",17]]},{"p":["AST","Atom","CharacterProperty","JavaSpecial","init(rawValue:)"],"f":[["init",10],["?(",17],["rawValue",1],[": ",17],["String",18,1220],[")",17]],"s":[["init",10],["?(",17],["rawValue",1],[": ",17],["String",18],[")",17]],"o":1259},{"p":["AST","Atom","CharacterProperty","PCRESpecialCategory","init(rawValue:)"],"f":[["init",10],["?(",17],["rawValue",1],[": ",17],["String",18,1220],[")",17]],"s":[["init",10],["?(",17],["rawValue",1],[": ",17],["String",18],[")",17]],"o":1259},{"p":["AST","Atom","CharacterProperty","init(_:isInverted:isPOSIX:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["kind",2],[": ",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["CharacterProperty",18,57],[".",17],["Kind",18,21],[", ",17],["isInverted",1],[": ",17],["Bool",18,1262],[", ",17],["isPOSIX",1],[": ",17],["Bool",18,1262],[")",17]],"s":[["init",10],["(",17],["AST",18],[".",17],["Atom",18],[".",17],["CharacterProperty",18],[".",17],["Kind",18],[", ",17],["isInverted",1],[": ",17],["Bool",18],[", ",17],["isPOSIX",1],[": ",17],["Bool",18],[")",17]]},{"p":["AST","Atom","BacktrackingDirective","init(_:name:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["kind",2],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["BacktrackingDirective",18,58],[".",17],["Kind",18,23],[">, ",17],["name",1],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["String",18,1220],[">?)",17]],"s":[["init",10],["(",17],["Source",18],[".",17],["Located",18],["<",17],["AST",18],[".",17],["Atom",18],[".",17],["BacktrackingDirective",18],[".",17],["Kind",18],[">, ",17],["name",1],[": ",17],["Source",18],[".",17],["Located",18],["<",17],["String",18],[">?)",17]]},{"p":["AST","Atom","Scalar","init(_:_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["value",2],[": ",17],["UnicodeScalar",18,1318],[", ",17],["_",1],[" ",17],["location",2],[": ",17],["SourceLocation",18,557],[")",17]],"s":[["init",10],["(",17],["UnicodeScalar",18],[", ",17],["SourceLocation",18],[")",17]]},{"p":["AST","Atom","Callout","OnigurumaTag","init(_:_:_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["leftBracket",2],[": ",17],["SourceLocation",18,557],[", ",17],["_",1],[" ",17],["name",2],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["String",18,1220],[">, ",17],["_",1],[" ",17],["rightBracket",2],[": ",17],["SourceLocation",18,557],[")",17]],"s":[["init",10],["(",17],["SourceLocation",18],[", ",17],["Source",18],[".",17],["Located",18],["<",17],["String",18],[">, ",17],["SourceLocation",18],[")",17]]},{"p":["AST","Atom","Callout","OnigurumaNamed","ArgList","init(_:_:_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["leftBrace",2],[": ",17],["SourceLocation",18,557],[", ",17],["_",1],[" ",17],["args",2],[": [",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["String",18,1220],[">], ",17],["_",1],[" ",17],["rightBrace",2],[": ",17],["SourceLocation",18,557],[")",17]],"s":[["init",10],["(",17],["SourceLocation",18],[", [",17],["Source",18],[".",17],["Located",18],["<",17],["String",18],[">], ",17],["SourceLocation",18],[")",17]]},{"p":["AST","Atom","Callout","OnigurumaNamed","init(_:tag:args:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["name",2],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["String",18,1220],[">, ",17],["tag",1],[": ",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["Callout",18,25],[".",17],["OnigurumaTag",18,60],["?, ",17],["args",1],[": ",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["Callout",18,25],[".",17],["OnigurumaNamed",18,61],[".",17],["ArgList",18,62],["?)",17]],"s":[["init",10],["(",17],["Source",18],[".",17],["Located",18],["<",17],["String",18],[">, ",17],["tag",1],[": ",17],["AST",18],[".",17],["Atom",18],[".",17],["Callout",18],[".",17],["OnigurumaTag",18],["?, ",17],["args",1],[": ",17],["AST",18],[".",17],["Atom",18],[".",17],["Callout",18],[".",17],["OnigurumaNamed",18],[".",17],["ArgList",18],["?)",17]]},{"p":["AST","Atom","Callout","OnigurumaOfContents","init(_:_:_:tag:direction:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["openBraces",2],[": ",17],["SourceLocation",18,557],[", ",17],["_",1],[" ",17],["contents",2],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["String",18,1220],[">, ",17],["_",1],[" ",17],["closeBraces",2],[": ",17],["SourceLocation",18,557],[", ",17],["tag",1],[": ",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["Callout",18,25],[".",17],["OnigurumaTag",18,60],["?, ",17],["direction",1],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["Callout",18,25],[".",17],["OnigurumaOfContents",18,63],[".",17],["Direction",18,26],[">)",17]],"s":[["init",10],["(",17],["SourceLocation",18],[", ",17],["Source",18],[".",17],["Located",18],["<",17],["String",18],[">, ",17],["SourceLocation",18],[", ",17],["tag",1],[": ",17],["AST",18],[".",17],["Atom",18],[".",17],["Callout",18],[".",17],["OnigurumaTag",18],["?, ",17],["direction",1],[": ",17],["Source",18],[".",17],["Located",18],["<",17],["AST",18],[".",17],["Atom",18],[".",17],["Callout",18],[".",17],["OnigurumaOfContents",18],[".",17],["Direction",18],[">)",17]]},{"p":["AST","Atom","Callout","PCRE","init(_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["arg",2],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["Callout",18,25],[".",17],["PCRE",18,64],[".",17],["Argument",18,27],[">)",17]],"s":[["init",10],["(",17],["Source",18],[".",17],["Located",18],["<",17],["AST",18],[".",17],["Atom",18],[".",17],["Callout",18],[".",17],["PCRE",18],[".",17],["Argument",18],[">)",17]]},{"p":["AST","Atom","init(_:_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["k",2],[": ",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["Kind",18,24],[", ",17],["_",1],[" ",17],["loc",2],[": ",17],["SourceLocation",18,557],[")",17]],"s":[["init",10],["(",17],["AST",18],[".",17],["Atom",18],[".",17],["Kind",18],[", ",17],["SourceLocation",18],[")",17]]},{"p":["AST","Empty","init(_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["location",2],[": ",17],["SourceLocation",18,557],[")",17]],"s":[["init",10],["(",17],["SourceLocation",18],[")",17]]},{"p":["AST","Group","BalancedCapture","init(name:dash:priorName:)"],"f":[["init",10],["(",17],["name",1],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["String",18,1220],[">?, ",17],["dash",1],[": ",17],["SourceLocation",18,557],[", ",17],["priorName",1],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["String",18,1220],[">)",17]],"s":[["init",10],["(",17],["name",1],[": ",17],["Source",18],[".",17],["Located",18],["<",17],["String",18],[">?, ",17],["dash",1],[": ",17],["SourceLocation",18],[", ",17],["priorName",1],[": ",17],["Source",18],[".",17],["Located",18],["<",17],["String",18],[">)",17]]},{"p":["AST","Group","init(_:_:_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["kind",2],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["AST",18,39],[".",17],["Group",18,66],[".",17],["Kind",18,29],[">, ",17],["_",1],[" ",17],["child",2],[": ",17],["AST",18,39],[".",17],["Node",18,28],[", ",17],["_",1],[" ",17],["r",2],[": ",17],["SourceLocation",18,557],[")",17]],"s":[["init",10],["(",17],["Source",18],[".",17],["Located",18],["<",17],["AST",18],[".",17],["Group",18],[".",17],["Kind",18],[">, ",17],["AST",18],[".",17],["Node",18],[", ",17],["SourceLocation",18],[")",17]]},{"p":["AST","Quote","init(_:_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["s",2],[": ",17],["String",18,1220],[", ",17],["_",1],[" ",17],["location",2],[": ",17],["SourceLocation",18,557],[")",17]],"s":[["init",10],["(",17],["String",18],[", ",17],["SourceLocation",18],[")",17]]},{"p":["AST","Trivia","init(_:_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["s",2],[": ",17],["String",18,1220],[", ",17],["_",1],[" ",17],["location",2],[": ",17],["SourceLocation",18,557],[")",17]],"s":[["init",10],["(",17],["String",18],[", ",17],["SourceLocation",18],[")",17]]},{"p":["AST","Reference","init(_:recursionLevel:innerLoc:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["kind",2],[": ",17],["AST",18,39],[".",17],["Reference",18,70],[".",17],["Kind",18,30],[", ",17],["recursionLevel",1],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["Int",18,1264],[">? = nil, ",17],["innerLoc",1],[": ",17],["SourceLocation",18,557],[")",17]],"s":[["init",10],["(",17],["AST",18],[".",17],["Reference",18],[".",17],["Kind",18],[", ",17],["recursionLevel",1],[": ",17],["Source",18],[".",17],["Located",18],["<",17],["Int",18],[">?, ",17],["innerLoc",1],[": ",17],["SourceLocation",18],[")",17]]},{"p":["AST","init(_:globalOptions:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["root",2],[": ",17],["AST",18,39],[".",17],["Node",18,28],[", ",17],["globalOptions",1],[": ",17],["AST",18,39],[".",17],["GlobalMatchingOptionSequence",18,54],["?)",17]],"s":[["init",10],["(",17],["AST",18],[".",17],["Node",18],[", ",17],["globalOptions",1],[": ",17],["AST",18],[".",17],["GlobalMatchingOptionSequence",18],["?)",17]]},{"p":["Source","LocatedError","init(_:_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["v",2],[": ",17],["E",18],[", ",17],["_",1],[" ",17],["r",2],[": ",17],["Range",18,1297],["<",17],["Source",18,71],[".",17],["Position",18,561],[">)",17]],"s":[["init",10],["(",17],["E",18],[", ",17],["Range",18],["<",17],["Source",18],[".",17],["Position",18],[">)",17]],"c":[["E",1,"Error",1325]],"g":[["E",0,0]]},{"p":["Source","Located","init(faking:)"],"f":[["init",10],["(",17],["faking",1],[" ",17],["v",2],[": ",17],["T",18],[")",17]],"s":[["init",10],["(",17],["faking",1],[": ",17],["T",18],[")",17]],"g":[["T",0,0]],"d":"NOTE: This is a temporary measure to unblock DSL efforts and\nincremental source location tracking. This shouldn't be called from\nwithin the parser's module..."},{"p":["Source","Located","init(_:_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["v",2],[": ",17],["T",18],[", ",17],["_",1],[" ",17],["r",2],[": ",17],["SourceLocation",18,557],[")",17]],"s":[["init",10],["(",17],["T",18],[", ",17],["SourceLocation",18],[")",17]],"g":[["T",0,0]]},{"p":["Source","Located","init(_:_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["v",2],[": ",17],["T",18],[", ",17],["_",1],[" ",17],["r",2],[": ",17],["Range",18,1297],["<",17],["Source",18,71],[".",17],["Position",18,561],[">)",17]],"s":[["init",10],["(",17],["T",18],[", ",17],["Range",18],["<",17],["Source",18],[".",17],["Position",18],[">)",17]],"g":[["T",0,0]]},{"p":["Source","Location","init(from:)"],"f":[["init",10],["(",17],["from",1],[" ",17],["sub",2],[": ",17],["Source",18,71],[".",17],["Input",18,560],[".",17],["SubSequence",18,1221],[")",17]],"s":[["init",10],["(",17],["from",1],[": ",17],["Source",18],[".",17],["Input",18],[".",17],["SubSequence",18],[")",17]]},{"p":["Source","Location","init(_:in:)"],"f":[["init",10],["<",17],["R",0],[">(",17],["_",1],[" ",17],["r",2],[": ",17],["R",18],[", ",17],["in",1],[" ",17],["input",2],[": ",17],["Source",18,71],[") ",17],["where",12],[" ",17],["R",18],[" : ",17],["RangeExpression",18,1256],[", ",17],["R",18],[".",17],["Bound",18],[" == ",17],["String",18,1220],[".",17],["Index",18,1222]],"s":[["init",10],["<",17],["R",0],[">(",17],["R",18],[", ",17],["in",1],[": ",17],["Source",18],[")",17]],"c":[["R",1,"RangeExpression",1256],["R.Bound",2,"String.Index",1222]],"g":[["R",0,0]]},{"p":["Source","Location","init(_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["r",2],[": ",17],["Range",18,1297],["<",17],["Source",18,71],[".",17],["Position",18,561],[">)",17]],"s":[["init",10],["(",17],["Range",18],["<",17],["Source",18],[".",17],["Position",18],[">)",17]]},{"p":["AnyType","init(_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["type",2],[": ",17],["Any",12],[".Type)",17]],"s":[["init",10],["(",17],["Any",12],[".Type)",17]]},{"p":["SyntaxOptions","multilineExtendedSyntax"],"f":[["static",12],[" ",17],["var",12],[" ",17],["multilineExtendedSyntax",7],[": ",17],["SyntaxOptions",18,37],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["multilineExtendedSyntax",7],[": ",17],["SyntaxOptions",18]],"d":"The default syntax for a multi-line regex literal."},{"p":["SyntaxOptions","extendedSyntax"],"f":[["static",12],[" ",17],["var",12],[" ",17],["extendedSyntax",7],[": ",17],["SyntaxOptions",18,37],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["extendedSyntax",7],[": ",17],["SyntaxOptions",18]],"d":"`(?x)` `(?xx)`"},{"p":["SyntaxOptions","traditional"],"f":[["static",12],[" ",17],["var",12],[" ",17],["traditional",7],[": ",17],["SyntaxOptions",18,37],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["traditional",7],[": ",17],["SyntaxOptions",18]]},{"p":["SyntaxOptions","experimental"],"f":[["static",12],[" ",17],["var",12],[" ",17],["experimental",7],[": ",17],["SyntaxOptions",18,37],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["experimental",7],[": ",17],["SyntaxOptions",18]]},{"p":["SyntaxOptions","endOfLineComments"],"f":[["static",12],[" ",17],["var",12],[" ",17],["endOfLineComments",7],[": ",17],["SyntaxOptions",18,37],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["endOfLineComments",7],[": ",17],["SyntaxOptions",18]],"d":"`abc # comment`"},{"p":["SyntaxOptions","namedCapturesOnly"],"f":[["static",12],[" ",17],["var",12],[" ",17],["namedCapturesOnly",7],[": ",17],["SyntaxOptions",18,37],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["namedCapturesOnly",7],[": ",17],["SyntaxOptions",18]],"d":"`(?n)`"},{"p":["SyntaxOptions","experimentalQuotes"],"f":[["static",12],[" ",17],["var",12],[" ",17],["experimentalQuotes",7],[": ",17],["SyntaxOptions",18,37],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["experimentalQuotes",7],[": ",17],["SyntaxOptions",18]],"d":"`'a \".\" b' == '/a\\Q.\\Eb/'`"},{"p":["SyntaxOptions","experimentalRanges"],"f":[["static",12],[" ",17],["var",12],[" ",17],["experimentalRanges",7],[": ",17],["SyntaxOptions",18,37],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["experimentalRanges",7],[": ",17],["SyntaxOptions",18]],"d":"```\n'a{n...m}' == '/a{n,m}/'\n'a{n..<m}' == '/a{n,m-1}/'\n'a{n...}'  == '/a{n,}/'\n'a{...m}'  == '/a{,m}/'\n'a{..<m}'  == '/a{,m-1}/'\n```"},{"p":["SyntaxOptions","experimentalCaptures"],"f":[["static",12],[" ",17],["var",12],[" ",17],["experimentalCaptures",7],[": ",17],["SyntaxOptions",18,37],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["experimentalCaptures",7],[": ",17],["SyntaxOptions",18]],"d":"`(name: .*)` == `(?<name>.*)`\n`(_: .*)` == `(?:.*)`"},{"p":["SyntaxOptions","experimentalComments"],"f":[["static",12],[" ",17],["var",12],[" ",17],["experimentalComments",7],[": ",17],["SyntaxOptions",18,37],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["experimentalComments",7],[": ",17],["SyntaxOptions",18]],"d":"`'a /* comment */ b' == '/a(?#. comment )b/'`"},{"p":["SyntaxOptions","nonSemanticWhitespace"],"f":[["static",12],[" ",17],["var",12],[" ",17],["nonSemanticWhitespace",7],[": ",17],["SyntaxOptions",18,37],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["nonSemanticWhitespace",7],[": ",17],["SyntaxOptions",18]],"d":"`'a \\. b' == '/a\\.b/'`"},{"p":["Source","Location","fake"],"f":[["static",12],[" ",17],["var",12],[" ",17],["fake",7],[": ",17],["Source",18,71],[".",17],["Location",18,74],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["fake",7],[": ",17],["Source",18],[".",17],["Location",18]],"d":"NOTE: This is a temporary measure to unblock DSL efforts and\nincremental source location tracking. This shouldn't be called from\nwithin the parser's module..."},{"p":["CaptureList","Capture","description"],"f":[["var",12],[" ",17],["description",7],[": ",17],["String",18,1220],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["description",7],[": ",17],["String",18]],"o":1321},{"p":["CaptureList","Capture","optionalDepth"],"f":[["var",12],[" ",17],["optionalDepth",7],[": ",17],["Int",18,1264]],"s":[["var",12],[" ",17],["optionalDepth",7],[": ",17],["Int",18]]},{"p":["CaptureList","Capture","name"],"f":[["var",12],[" ",17],["name",7],[": ",17],["String",18,1220],["?",17]],"s":[["var",12],[" ",17],["name",7],[": ",17],["String",18],["?",17]]},{"p":["CaptureList","Capture","type"],"f":[["var",12],[" ",17],["type",7],[": ",17],["Any",12],[".Type",17]],"s":[["var",12],[" ",17],["type",7],[": ",17],["Any",12],[".Type",17]]},{"p":["CaptureList","Capture","location"],"f":[["var",12],[" ",17],["location",7],[": ",17],["SourceLocation",18,557]],"s":[["var",12],[" ",17],["location",7],[": ",17],["SourceLocation",18]]},{"p":["CaptureList","description"],"f":[["var",12],[" ",17],["description",7],[": ",17],["String",18,1220],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["description",7],[": ",17],["String",18]],"o":1321},{"p":["CaptureList","captures"],"f":[["var",12],[" ",17],["captures",7],[": [",17],["CaptureList",18,32],[".",17],["Capture",18,33],["]",17]],"s":[["var",12],[" ",17],["captures",7],[": [",17],["CaptureList",18],[".",17],["Capture",18],["]",17]]},{"p":["Unreachable","description"],"f":[["var",12],[" ",17],["description",7],[": ",17],["String",18,1220],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["description",7],[": ",17],["String",18]],"o":1321},{"p":["Unsupported","description"],"f":[["var",12],[" ",17],["description",7],[": ",17],["String",18,1220],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["description",7],[": ",17],["String",18]],"o":1321},{"p":["PrettyPrinter","indentWidth"],"f":[["var",12],[" ",17],["indentWidth",7],[": ",17],["Int",18,1264]],"s":[["var",12],[" ",17],["indentWidth",7],[": ",17],["Int",18]],"d":"The number of spaces used for indentation."},{"p":["PrettyPrinter","maxTopDownLevels"],"f":[["var",12],[" ",17],["maxTopDownLevels",7],[": ",17],["Int",18,1264],["?",17]],"s":[["var",12],[" ",17],["maxTopDownLevels",7],[": ",17],["Int",18],["?",17]],"d":"The maximum number number of levels, from the root of the tree,\nat which to perform pattern conversion.\n\nA `nil` value indicates that there is no maximum,\nand pattern conversion always takes place."},{"p":["PrettyPrinter","minBottomUpLevels"],"f":[["var",12],[" ",17],["minBottomUpLevels",7],[": ",17],["Int",18,1264],["?",17]],"s":[["var",12],[" ",17],["minBottomUpLevels",7],[": ",17],["Int",18],["?",17]],"d":"The maximum number number of levels, from the leaf nodes of the tree,\nat which to perform pattern conversion.\n\nA `nil` value indicates that there is no maximum,\nand pattern conversion always takes place."},{"p":["PrettyPrinter","quantificationBehavior"],"f":[["var",12],[" ",17],["quantificationBehavior",7],[": ",17],["AST",18,39],[".",17],["Quantification",18,49],[".",17],["Kind",18,9]],"s":[["var",12],[" ",17],["quantificationBehavior",7],[": ",17],["AST",18],[".",17],["Quantification",18],[".",17],["Kind",18]]},{"p":["PrettyPrinter","depth"],"f":[["var",12],[" ",17],["depth",7],[": ",17],["Int",18,1264],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["depth",7],[": ",17],["Int",18]]},{"p":["SyntaxOptions","rawValue"],"f":[["var",12],[" ",17],["rawValue",7],[": ",17],["UInt",18,1299]],"s":[["var",12],[" ",17],["rawValue",7],[": ",17],["UInt",18]],"o":1258},{"p":["DelimiterLexError","description"],"f":[["var",12],[" ",17],["description",7],[": ",17],["String",18,1220],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["description",7],[": ",17],["String",18]],"o":1321},{"p":["DelimiterLexError","kind"],"f":[["var",12],[" ",17],["kind",7],[": ",17],["DelimiterLexError",18,38],[".",17],["Kind",18,3]],"s":[["var",12],[" ",17],["kind",7],[": ",17],["DelimiterLexError",18],[".",17],["Kind",18]]},{"p":["DelimiterLexError","resumePtr"],"f":[["var",12],[" ",17],["resumePtr",7],[": ",17],["UnsafeRawPointer",18,1255]],"s":[["var",12],[" ",17],["resumePtr",7],[": ",17],["UnsafeRawPointer",18]],"d":"The pointer at which to resume lexing."},{"p":["LocatedErrorProtocol","location"],"f":[["var",12],[" ",17],["location",7],[": ",17],["SourceLocation",18,557],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["location",7],[": ",17],["SourceLocation",18]]},{"p":["AST","hasCapture"],"f":[["var",12],[" ",17],["hasCapture",7],[": ",17],["Bool",18,1262],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["hasCapture",7],[": ",17],["Bool",18]],"d":"Whether this AST tree contains at least one capture nested inside of it."},{"p":["AST","Alternation","pipes"],"f":[["let",12],[" ",17],["pipes",7],[": [",17],["SourceLocation",18,557],["]",17]],"s":[["let",12],[" ",17],["pipes",7],[": [",17],["SourceLocation",18],["]",17]]},{"p":["AST","Alternation","children"],"f":[["let",12],[" ",17],["children",7],[": [",17],["AST",18,39],[".",17],["Node",18,28],["]",17]],"s":[["let",12],[" ",17],["children",7],[": [",17],["AST",18],[".",17],["Node",18],["]",17]],"o":1198},{"p":["AST","Alternation","location"],"f":[["var",12],[" ",17],["location",7],[": ",17],["SourceLocation",18,557],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["location",7],[": ",17],["SourceLocation",18]],"o":1199},{"p":["AST","Conditional","trueBranch"],"f":[["var",12],[" ",17],["trueBranch",7],[": ",17],["AST",18,39],[".",17],["Node",18,28]],"s":[["var",12],[" ",17],["trueBranch",7],[": ",17],["AST",18],[".",17],["Node",18]]},{"p":["AST","Conditional","falseBranch"],"f":[["var",12],[" ",17],["falseBranch",7],[": ",17],["AST",18,39],[".",17],["Node",18,28]],"s":[["var",12],[" ",17],["falseBranch",7],[": ",17],["AST",18],[".",17],["Node",18]]},{"p":["AST","Conditional","pipe"],"f":[["var",12],[" ",17],["pipe",7],[": ",17],["SourceLocation",18,557],["?",17]],"s":[["var",12],[" ",17],["pipe",7],[": ",17],["SourceLocation",18],["?",17]]},{"p":["AST","Conditional","location"],"f":[["var",12],[" ",17],["location",7],[": ",17],["SourceLocation",18,557]],"s":[["var",12],[" ",17],["location",7],[": ",17],["SourceLocation",18]],"o":1199},{"p":["AST","Conditional","Condition","PCREVersionCheck","num"],"f":[["var",12],[" ",17],["num",7],[": ",17],["AST",18,39],[".",17],["Conditional",18,41],[".",17],["Condition",18,42],[".",17],["PCREVersionNumber",18,44]],"s":[["var",12],[" ",17],["num",7],[": ",17],["AST",18],[".",17],["Conditional",18],[".",17],["Condition",18],[".",17],["PCREVersionNumber",18]]},{"p":["AST","Conditional","Condition","PCREVersionCheck","kind"],"f":[["var",12],[" ",17],["kind",7],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["AST",18,39],[".",17],["Conditional",18,41],[".",17],["Condition",18,42],[".",17],["PCREVersionCheck",18,43],[".",17],["Kind",18,4],[">",17]],"s":[["var",12],[" ",17],["kind",7],[": ",17],["Source",18],[".",17],["Located",18],["<",17],["AST",18],[".",17],["Conditional",18],[".",17],["Condition",18],[".",17],["PCREVersionCheck",18],[".",17],["Kind",18],[">",17]]},{"p":["AST","Conditional","Condition","PCREVersionNumber","major"],"f":[["var",12],[" ",17],["major",7],[": ",17],["Int",18,1264]],"s":[["var",12],[" ",17],["major",7],[": ",17],["Int",18]]},{"p":["AST","Conditional","Condition","PCREVersionNumber","minor"],"f":[["var",12],[" ",17],["minor",7],[": ",17],["Int",18,1264]],"s":[["var",12],[" ",17],["minor",7],[": ",17],["Int",18]]},{"p":["AST","Conditional","Condition","PCREVersionNumber","location"],"f":[["var",12],[" ",17],["location",7],[": ",17],["SourceLocation",18,557]],"s":[["var",12],[" ",17],["location",7],[": ",17],["SourceLocation",18]]},{"p":["AST","Conditional","Condition","kind"],"f":[["var",12],[" ",17],["kind",7],[": ",17],["AST",18,39],[".",17],["Conditional",18,41],[".",17],["Condition",18,42],[".",17],["Kind",18,5]],"s":[["var",12],[" ",17],["kind",7],[": ",17],["AST",18],[".",17],["Conditional",18],[".",17],["Condition",18],[".",17],["Kind",18]]},{"p":["AST","Conditional","Condition","location"],"f":[["var",12],[" ",17],["location",7],[": ",17],["SourceLocation",18,557]],"s":[["var",12],[" ",17],["location",7],[": ",17],["SourceLocation",18]]},{"p":["AST","Conditional","condition"],"f":[["var",12],[" ",17],["condition",7],[": ",17],["AST",18,39],[".",17],["Conditional",18,41],[".",17],["Condition",18,42]],"s":[["var",12],[" ",17],["condition",7],[": ",17],["AST",18],[".",17],["Conditional",18],[".",17],["Condition",18]]},{"p":["AST","captureList"],"f":[["var",12],[" ",17],["captureList",7],[": ",17],["CaptureList",18,32],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["captureList",7],[": ",17],["CaptureList",18]],"d":"The capture list (including the whole match) of this AST."},{"p":["AST","Concatenation","children"],"f":[["let",12],[" ",17],["children",7],[": [",17],["AST",18,39],[".",17],["Node",18,28],["]",17]],"s":[["let",12],[" ",17],["children",7],[": [",17],["AST",18],[".",17],["Node",18],["]",17]],"o":1198},{"p":["AST","Concatenation","location"],"f":[["let",12],[" ",17],["location",7],[": ",17],["SourceLocation",18,557]],"s":[["let",12],[" ",17],["location",7],[": ",17],["SourceLocation",18]],"o":1199},{"p":["AST","Interpolation","contents"],"f":[["let",12],[" ",17],["contents",7],[": ",17],["String",18,1220]],"s":[["let",12],[" ",17],["contents",7],[": ",17],["String",18]]},{"p":["AST","Interpolation","location"],"f":[["let",12],[" ",17],["location",7],[": ",17],["SourceLocation",18,557]],"s":[["let",12],[" ",17],["location",7],[": ",17],["SourceLocation",18]],"o":1199},{"p":["AST","globalOptions"],"f":[["var",12],[" ",17],["globalOptions",7],[": ",17],["AST",18,39],[".",17],["GlobalMatchingOptionSequence",18,54],["?",17]],"s":[["var",12],[" ",17],["globalOptions",7],[": ",17],["AST",18],[".",17],["GlobalMatchingOptionSequence",18],["?",17]]},{"p":["AST","AbsentFunction","kind"],"f":[["var",12],[" ",17],["kind",7],[": ",17],["AST",18,39],[".",17],["AbsentFunction",18,47],[".",17],["Kind",18,6]],"s":[["var",12],[" ",17],["kind",7],[": ",17],["AST",18],[".",17],["AbsentFunction",18],[".",17],["Kind",18]]},{"p":["AST","AbsentFunction","start"],"f":[["var",12],[" ",17],["start",7],[": ",17],["SourceLocation",18,557]],"s":[["var",12],[" ",17],["start",7],[": ",17],["SourceLocation",18]],"d":"The location of `(?~` or `(?~|`"},{"p":["AST","AbsentFunction","children"],"f":[["var",12],[" ",17],["children",7],[": [",17],["AST",18,39],[".",17],["Node",18,28],["] { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["children",7],[": [",17],["AST",18],[".",17],["Node",18],["]",17]],"o":1198},{"p":["AST","AbsentFunction","location"],"f":[["var",12],[" ",17],["location",7],[": ",17],["SourceLocation",18,557]],"s":[["var",12],[" ",17],["location",7],[": ",17],["SourceLocation",18]],"o":1199},{"p":["AST","MatchingOption","isSemanticMatchingLevel"],"f":[["var",12],[" ",17],["isSemanticMatchingLevel",7],[": ",17],["Bool",18,1262],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isSemanticMatchingLevel",7],[": ",17],["Bool",18]]},{"p":["AST","MatchingOption","isAnyExtended"],"f":[["var",12],[" ",17],["isAnyExtended",7],[": ",17],["Bool",18,1262],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isAnyExtended",7],[": ",17],["Bool",18]],"d":"If this is either the regular or extra extended syntax option."},{"p":["AST","MatchingOption","isTextSegmentMode"],"f":[["var",12],[" ",17],["isTextSegmentMode",7],[": ",17],["Bool",18,1262],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isTextSegmentMode",7],[": ",17],["Bool",18]]},{"p":["AST","MatchingOption","kind"],"f":[["var",12],[" ",17],["kind",7],[": ",17],["AST",18,39],[".",17],["MatchingOption",18,48],[".",17],["Kind",18,8]],"s":[["var",12],[" ",17],["kind",7],[": ",17],["AST",18],[".",17],["MatchingOption",18],[".",17],["Kind",18]]},{"p":["AST","MatchingOption","location"],"f":[["var",12],[" ",17],["location",7],[": ",17],["SourceLocation",18,557]],"s":[["var",12],[" ",17],["location",7],[": ",17],["SourceLocation",18]]},{"p":["AST","Quantification","kind"],"f":[["let",12],[" ",17],["kind",7],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["AST",18,39],[".",17],["Quantification",18,49],[".",17],["Kind",18,9],[">",17]],"s":[["let",12],[" ",17],["kind",7],[": ",17],["Source",18],[".",17],["Located",18],["<",17],["AST",18],[".",17],["Quantification",18],[".",17],["Kind",18],[">",17]]},{"p":["AST","Quantification","child"],"f":[["let",12],[" ",17],["child",7],[": ",17],["AST",18,39],[".",17],["Node",18,28]],"s":[["let",12],[" ",17],["child",7],[": ",17],["AST",18],[".",17],["Node",18]]},{"p":["AST","Quantification","Amount","bounds"],"f":[["var",12],[" ",17],["bounds",7],[": (atLeast",17],[": ",17],["Int",18,1264],[", atMost",17],[": ",17],["Int",18,1264],["?) { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["bounds",7],[": (atLeast",17],[": ",17],["Int",18],[", atMost",17],[": ",17],["Int",18],["?)",17]],"d":"The bounds."},{"p":["AST","Quantification","amount"],"f":[["let",12],[" ",17],["amount",7],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["AST",18,39],[".",17],["Quantification",18,49],[".",17],["Amount",18,10],[">",17]],"s":[["let",12],[" ",17],["amount",7],[": ",17],["Source",18],[".",17],["Located",18],["<",17],["AST",18],[".",17],["Quantification",18],[".",17],["Amount",18],[">",17]]},{"p":["AST","Quantification","trivia"],"f":[["let",12],[" ",17],["trivia",7],[": [",17],["AST",18,39],[".",17],["Trivia",18,69],["]",17]],"s":[["let",12],[" ",17],["trivia",7],[": [",17],["AST",18],[".",17],["Trivia",18],["]",17]],"d":"Any trivia intermixed between the operand and the quantifier, as well\nas between the quantifier characters themselves. This can occur in\nextended syntax mode where PCRE permits e.g `x * +`."},{"p":["AST","Quantification","location"],"f":[["let",12],[" ",17],["location",7],[": ",17],["SourceLocation",18,557]],"s":[["let",12],[" ",17],["location",7],[": ",17],["SourceLocation",18]],"o":1199},{"p":["AST","CustomCharacterClass","isInverted"],"f":[["var",12],[" ",17],["isInverted",7],[": ",17],["Bool",18,1262],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isInverted",7],[": ",17],["Bool",18]]},{"p":["AST","CustomCharacterClass","strippingTriviaShallow"],"f":[["var",12],[" ",17],["strippingTriviaShallow",7],[": ",17],["AST",18,39],[".",17],["CustomCharacterClass",18,50],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["strippingTriviaShallow",7],[": ",17],["AST",18],[".",17],["CustomCharacterClass",18]],"d":"Strips trivia from the character class members.\n\nThis method doesn't recurse into nested custom character classes."},{"p":["AST","CustomCharacterClass","Range","lhs"],"f":[["var",12],[" ",17],["lhs",7],[": ",17],["AST",18,39],[".",17],["Atom",18,55]],"s":[["var",12],[" ",17],["lhs",7],[": ",17],["AST",18],[".",17],["Atom",18]]},{"p":["AST","CustomCharacterClass","Range","rhs"],"f":[["var",12],[" ",17],["rhs",7],[": ",17],["AST",18,39],[".",17],["Atom",18,55]],"s":[["var",12],[" ",17],["rhs",7],[": ",17],["AST",18],[".",17],["Atom",18]]},{"p":["AST","CustomCharacterClass","Range","trivia"],"f":[["var",12],[" ",17],["trivia",7],[": [",17],["AST",18,39],[".",17],["Trivia",18,69],["]",17]],"s":[["var",12],[" ",17],["trivia",7],[": [",17],["AST",18],[".",17],["Trivia",18],["]",17]]},{"p":["AST","CustomCharacterClass","Range","dashLoc"],"f":[["var",12],[" ",17],["dashLoc",7],[": ",17],["SourceLocation",18,557]],"s":[["var",12],[" ",17],["dashLoc",7],[": ",17],["SourceLocation",18]]},{"p":["AST","CustomCharacterClass","start"],"f":[["var",12],[" ",17],["start",7],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["AST",18,39],[".",17],["CustomCharacterClass",18,50],[".",17],["Start",18,12],[">",17]],"s":[["var",12],[" ",17],["start",7],[": ",17],["Source",18],[".",17],["Located",18],["<",17],["AST",18],[".",17],["CustomCharacterClass",18],[".",17],["Start",18],[">",17]]},{"p":["AST","CustomCharacterClass","Member","isSemantic"],"f":[["var",12],[" ",17],["isSemantic",7],[": ",17],["Bool",18,1262],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isSemantic",7],[": ",17],["Bool",18]]},{"p":["AST","CustomCharacterClass","Member","asTrivia"],"f":[["var",12],[" ",17],["asTrivia",7],[": ",17],["AST",18,39],[".",17],["Trivia",18,69],["? { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["asTrivia",7],[": ",17],["AST",18],[".",17],["Trivia",18],["?",17]]},{"p":["AST","CustomCharacterClass","Member","isTrivia"],"f":[["var",12],[" ",17],["isTrivia",7],[": ",17],["Bool",18,1262],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isTrivia",7],[": ",17],["Bool",18]]},{"p":["AST","CustomCharacterClass","members"],"f":[["var",12],[" ",17],["members",7],[": [",17],["AST",18,39],[".",17],["CustomCharacterClass",18,50],[".",17],["Member",18,13],["]",17]],"s":[["var",12],[" ",17],["members",7],[": [",17],["AST",18],[".",17],["CustomCharacterClass",18],[".",17],["Member",18],["]",17]]},{"p":["AST","CustomCharacterClass","location"],"f":[["let",12],[" ",17],["location",7],[": ",17],["SourceLocation",18,557]],"s":[["let",12],[" ",17],["location",7],[": ",17],["SourceLocation",18]],"o":1199},{"p":["AST","GlobalMatchingOption","kind"],"f":[["var",12],[" ",17],["kind",7],[": ",17],["AST",18,39],[".",17],["GlobalMatchingOption",18,52],[".",17],["Kind",18,16]],"s":[["var",12],[" ",17],["kind",7],[": ",17],["AST",18],[".",17],["GlobalMatchingOption",18],[".",17],["Kind",18]]},{"p":["AST","GlobalMatchingOption","location"],"f":[["var",12],[" ",17],["location",7],[": ",17],["SourceLocation",18,557]],"s":[["var",12],[" ",17],["location",7],[": ",17],["SourceLocation",18]],"o":1199},{"p":["AST","MatchingOptionSequence","resetsCurrentOptions"],"f":[["var",12],[" ",17],["resetsCurrentOptions",7],[": ",17],["Bool",18,1262],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["resetsCurrentOptions",7],[": ",17],["Bool",18]],"d":"Whether this set of matching options first resets the options before\nadding onto them."},{"p":["AST","MatchingOptionSequence","adding"],"f":[["var",12],[" ",17],["adding",7],[": [",17],["AST",18,39],[".",17],["MatchingOption",18,48],["]",17]],"s":[["var",12],[" ",17],["adding",7],[": [",17],["AST",18],[".",17],["MatchingOption",18],["]",17]],"d":"The options to add."},{"p":["AST","MatchingOptionSequence","caretLoc"],"f":[["var",12],[" ",17],["caretLoc",7],[": ",17],["SourceLocation",18,557],["?",17]],"s":[["var",12],[" ",17],["caretLoc",7],[": ",17],["SourceLocation",18],["?",17]],"d":"If the sequence starts with a caret '^', its source location, or nil\notherwise. If this is set, it indicates that all the matching options\nare unset, except the ones in `adding`."},{"p":["AST","MatchingOptionSequence","minusLoc"],"f":[["var",12],[" ",17],["minusLoc",7],[": ",17],["SourceLocation",18,557],["?",17]],"s":[["var",12],[" ",17],["minusLoc",7],[": ",17],["SourceLocation",18],["?",17]],"d":"The location of the '-' between the options to add and options to\nremove."},{"p":["AST","MatchingOptionSequence","removing"],"f":[["var",12],[" ",17],["removing",7],[": [",17],["AST",18,39],[".",17],["MatchingOption",18,48],["]",17]],"s":[["var",12],[" ",17],["removing",7],[": [",17],["AST",18],[".",17],["MatchingOption",18],["]",17]],"d":"The options to remove."},{"p":["AST","GlobalMatchingOptionSequence","options"],"f":[["var",12],[" ",17],["options",7],[": [",17],["AST",18,39],[".",17],["GlobalMatchingOption",18,52],["]",17]],"s":[["var",12],[" ",17],["options",7],[": [",17],["AST",18],[".",17],["GlobalMatchingOption",18],["]",17]]},{"p":["AST","GlobalMatchingOptionSequence","location"],"f":[["var",12],[" ",17],["location",7],[": ",17],["SourceLocation",18,557],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["location",7],[": ",17],["SourceLocation",18]]},{"p":["AST","Atom","assertionKind"],"f":[["var",12],[" ",17],["assertionKind",7],[": ",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["AssertionKind",18,17],["? { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["assertionKind",7],[": ",17],["AST",18],[".",17],["Atom",18],[".",17],["AssertionKind",18],["?",17]]},{"p":["AST","Atom","EscapedBuiltin","scalarValue"],"f":[["var",12],[" ",17],["scalarValue",7],[": ",17],["UnicodeScalar",18,1318],["? { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["scalarValue",7],[": ",17],["UnicodeScalar",18],["?",17]],"d":"If the escape sequence represents a unicode scalar value, returns the\nvalue, otherwise `nil`."},{"p":["AST","Atom","EscapedBuiltin","isQuantifiable"],"f":[["var",12],[" ",17],["isQuantifiable",7],[": ",17],["Bool",18,1262],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isQuantifiable",7],[": ",17],["Bool",18]]},{"p":["AST","Atom","EscapedBuiltin","character"],"f":[["var",12],[" ",17],["character",7],[": ",17],["Character",18,1203],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["character",7],[": ",17],["Character",18]]},{"p":["AST","Atom","ScalarSequence","scalarValues"],"f":[["var",12],[" ",17],["scalarValues",7],[": [",17],["Unicode",18,1327],[".",17],["Scalar",18,1330],["] { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["scalarValues",7],[": [",17],["Unicode",18],[".",17],["Scalar",18],["]",17]]},{"p":["AST","Atom","ScalarSequence","trivia"],"f":[["var",12],[" ",17],["trivia",7],[": [",17],["AST",18,39],[".",17],["Trivia",18,69],["]",17]],"s":[["var",12],[" ",17],["trivia",7],[": [",17],["AST",18],[".",17],["Trivia",18],["]",17]]},{"p":["AST","Atom","ScalarSequence","scalars"],"f":[["var",12],[" ",17],["scalars",7],[": [",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["Scalar",18,59],["]",17]],"s":[["var",12],[" ",17],["scalars",7],[": [",17],["AST",18],[".",17],["Atom",18],[".",17],["Scalar",18],["]",17]]},{"p":["AST","Atom","isQuantifiable"],"f":[["var",12],[" ",17],["isQuantifiable",7],[": ",17],["Bool",18,1262],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isQuantifiable",7],[": ",17],["Bool",18]]},{"p":["AST","Atom","CharacterProperty","isInverted"],"f":[["var",12],[" ",17],["isInverted",7],[": ",17],["Bool",18,1262]],"s":[["var",12],[" ",17],["isInverted",7],[": ",17],["Bool",18]],"d":"Whether this is an inverted property e.g '\\P{Ll}', '[:^ascii:]'."},{"p":["AST","Atom","CharacterProperty","kind"],"f":[["var",12],[" ",17],["kind",7],[": ",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["CharacterProperty",18,57],[".",17],["Kind",18,21]],"s":[["var",12],[" ",17],["kind",7],[": ",17],["AST",18],[".",17],["Atom",18],[".",17],["CharacterProperty",18],[".",17],["Kind",18]]},{"p":["AST","Atom","CharacterProperty","isPOSIX"],"f":[["var",12],[" ",17],["isPOSIX",7],[": ",17],["Bool",18,1262]],"s":[["var",12],[" ",17],["isPOSIX",7],[": ",17],["Bool",18]],"d":"Whether this property was written using POSIX syntax e.g '[:ascii:]'."},{"p":["AST","Atom","literalStringValue"],"f":[["var",12],[" ",17],["literalStringValue",7],[": ",17],["String",18,1220],["? { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["literalStringValue",7],[": ",17],["String",18],["?",17]],"d":"A string literal representation of the atom, if possible.\n\nIndividual characters are returned as-is, and Unicode scalars are\npresented using \"\\u{nn nn ...}\" syntax."},{"p":["AST","Atom","BacktrackingDirective","isQuantifiable"],"f":[["var",12],[" ",17],["isQuantifiable",7],[": ",17],["Bool",18,1262],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isQuantifiable",7],[": ",17],["Bool",18]]},{"p":["AST","Atom","BacktrackingDirective","kind"],"f":[["var",12],[" ",17],["kind",7],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["BacktrackingDirective",18,58],[".",17],["Kind",18,23],[">",17]],"s":[["var",12],[" ",17],["kind",7],[": ",17],["Source",18],[".",17],["Located",18],["<",17],["AST",18],[".",17],["Atom",18],[".",17],["BacktrackingDirective",18],[".",17],["Kind",18],[">",17]]},{"p":["AST","Atom","BacktrackingDirective","name"],"f":[["var",12],[" ",17],["name",7],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["String",18,1220],[">?",17]],"s":[["var",12],[" ",17],["name",7],[": ",17],["Source",18],[".",17],["Located",18],["<",17],["String",18],[">?",17]]},{"p":["AST","Atom","literalCharacterValue"],"f":[["var",12],[" ",17],["literalCharacterValue",7],[": ",17],["Character",18,1203],["? { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["literalCharacterValue",7],[": ",17],["Character",18],["?",17]],"d":"Retrieves the character value of the atom.\n\nIf the atom doesn't represent a literal character or a Unicode scalar,\nthis value is `nil`."},{"p":["AST","Atom","isValidCharacterClassRangeBound"],"f":[["var",12],[" ",17],["isValidCharacterClassRangeBound",7],[": ",17],["Bool",18,1262],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isValidCharacterClassRangeBound",7],[": ",17],["Bool",18]],"d":"Whether this atom is valid as the operand of a custom character class\nrange."},{"p":["AST","Atom","kind"],"f":[["let",12],[" ",17],["kind",7],[": ",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["Kind",18,24]],"s":[["let",12],[" ",17],["kind",7],[": ",17],["AST",18],[".",17],["Atom",18],[".",17],["Kind",18]]},{"p":["AST","Atom","Scalar","value"],"f":[["var",12],[" ",17],["value",7],[": ",17],["UnicodeScalar",18,1318]],"s":[["var",12],[" ",17],["value",7],[": ",17],["UnicodeScalar",18]]},{"p":["AST","Atom","Scalar","location"],"f":[["var",12],[" ",17],["location",7],[": ",17],["SourceLocation",18,557]],"s":[["var",12],[" ",17],["location",7],[": ",17],["SourceLocation",18]]},{"p":["AST","Atom","Callout","OnigurumaTag","leftBracket"],"f":[["var",12],[" ",17],["leftBracket",7],[": ",17],["SourceLocation",18,557]],"s":[["var",12],[" ",17],["leftBracket",7],[": ",17],["SourceLocation",18]]},{"p":["AST","Atom","Callout","OnigurumaTag","rightBracket"],"f":[["var",12],[" ",17],["rightBracket",7],[": ",17],["SourceLocation",18,557]],"s":[["var",12],[" ",17],["rightBracket",7],[": ",17],["SourceLocation",18]]},{"p":["AST","Atom","Callout","OnigurumaTag","name"],"f":[["var",12],[" ",17],["name",7],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["String",18,1220],[">",17]],"s":[["var",12],[" ",17],["name",7],[": ",17],["Source",18],[".",17],["Located",18],["<",17],["String",18],[">",17]]},{"p":["AST","Atom","Callout","OnigurumaNamed","tag"],"f":[["var",12],[" ",17],["tag",7],[": ",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["Callout",18,25],[".",17],["OnigurumaTag",18,60],["?",17]],"s":[["var",12],[" ",17],["tag",7],[": ",17],["AST",18],[".",17],["Atom",18],[".",17],["Callout",18],[".",17],["OnigurumaTag",18],["?",17]]},{"p":["AST","Atom","Callout","OnigurumaNamed","args"],"f":[["var",12],[" ",17],["args",7],[": ",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["Callout",18,25],[".",17],["OnigurumaNamed",18,61],[".",17],["ArgList",18,62],["?",17]],"s":[["var",12],[" ",17],["args",7],[": ",17],["AST",18],[".",17],["Atom",18],[".",17],["Callout",18],[".",17],["OnigurumaNamed",18],[".",17],["ArgList",18],["?",17]]},{"p":["AST","Atom","Callout","OnigurumaNamed","name"],"f":[["var",12],[" ",17],["name",7],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["String",18,1220],[">",17]],"s":[["var",12],[" ",17],["name",7],[": ",17],["Source",18],[".",17],["Located",18],["<",17],["String",18],[">",17]]},{"p":["AST","Atom","Callout","OnigurumaNamed","ArgList","rightBrace"],"f":[["var",12],[" ",17],["rightBrace",7],[": ",17],["SourceLocation",18,557]],"s":[["var",12],[" ",17],["rightBrace",7],[": ",17],["SourceLocation",18]]},{"p":["AST","Atom","Callout","OnigurumaNamed","ArgList","args"],"f":[["var",12],[" ",17],["args",7],[": [",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["String",18,1220],[">]",17]],"s":[["var",12],[" ",17],["args",7],[": [",17],["Source",18],[".",17],["Located",18],["<",17],["String",18],[">]",17]]},{"p":["AST","Atom","Callout","OnigurumaNamed","ArgList","leftBrace"],"f":[["var",12],[" ",17],["leftBrace",7],[": ",17],["SourceLocation",18,557]],"s":[["var",12],[" ",17],["leftBrace",7],[": ",17],["SourceLocation",18]]},{"p":["AST","Atom","Callout","OnigurumaOfContents","openBraces"],"f":[["var",12],[" ",17],["openBraces",7],[": ",17],["SourceLocation",18,557]],"s":[["var",12],[" ",17],["openBraces",7],[": ",17],["SourceLocation",18]]},{"p":["AST","Atom","Callout","OnigurumaOfContents","closeBraces"],"f":[["var",12],[" ",17],["closeBraces",7],[": ",17],["SourceLocation",18,557]],"s":[["var",12],[" ",17],["closeBraces",7],[": ",17],["SourceLocation",18]]},{"p":["AST","Atom","Callout","OnigurumaOfContents","isDirectionImplicit"],"f":[["var",12],[" ",17],["isDirectionImplicit",7],[": ",17],["Bool",18,1262],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isDirectionImplicit",7],[": ",17],["Bool",18]],"d":"Whether the direction flag isn't written explicitly in the\nsource, e.g `(?{x})` which is implicitly `(?{x}>)`."},{"p":["AST","Atom","Callout","OnigurumaOfContents","tag"],"f":[["var",12],[" ",17],["tag",7],[": ",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["Callout",18,25],[".",17],["OnigurumaTag",18,60],["?",17]],"s":[["var",12],[" ",17],["tag",7],[": ",17],["AST",18],[".",17],["Atom",18],[".",17],["Callout",18],[".",17],["OnigurumaTag",18],["?",17]]},{"p":["AST","Atom","Callout","OnigurumaOfContents","contents"],"f":[["var",12],[" ",17],["contents",7],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["String",18,1220],[">",17]],"s":[["var",12],[" ",17],["contents",7],[": ",17],["Source",18],[".",17],["Located",18],["<",17],["String",18],[">",17]]},{"p":["AST","Atom","Callout","OnigurumaOfContents","direction"],"f":[["var",12],[" ",17],["direction",7],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["Callout",18,25],[".",17],["OnigurumaOfContents",18,63],[".",17],["Direction",18,26],[">",17]],"s":[["var",12],[" ",17],["direction",7],[": ",17],["Source",18],[".",17],["Located",18],["<",17],["AST",18],[".",17],["Atom",18],[".",17],["Callout",18],[".",17],["OnigurumaOfContents",18],[".",17],["Direction",18],[">",17]]},{"p":["AST","Atom","Callout","PCRE","isImplicit"],"f":[["var",12],[" ",17],["isImplicit",7],[": ",17],["Bool",18,1262],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isImplicit",7],[": ",17],["Bool",18]],"d":"Whether the argument isn't written explicitly in the source, e.g\n`(?C)` which is implicitly `(?C0)`."},{"p":["AST","Atom","Callout","PCRE","arg"],"f":[["var",12],[" ",17],["arg",7],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["AST",18,39],[".",17],["Atom",18,55],[".",17],["Callout",18,25],[".",17],["PCRE",18,64],[".",17],["Argument",18,27],[">",17]],"s":[["var",12],[" ",17],["arg",7],[": ",17],["Source",18],[".",17],["Located",18],["<",17],["AST",18],[".",17],["Atom",18],[".",17],["Callout",18],[".",17],["PCRE",18],[".",17],["Argument",18],[">",17]]},{"p":["AST","Atom","location"],"f":[["let",12],[" ",17],["location",7],[": ",17],["SourceLocation",18,557]],"s":[["let",12],[" ",17],["location",7],[": ",17],["SourceLocation",18]],"o":1199},{"p":["AST","Node","hasCapture"],"f":[["var",12],[" ",17],["hasCapture",7],[": ",17],["Bool",18,1262],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["hasCapture",7],[": ",17],["Bool",18]],"d":"Whether this node contains at least one capture nested inside of it."},{"p":["AST","Node","isQuantifiable"],"f":[["var",12],[" ",17],["isQuantifiable",7],[": ",17],["Bool",18,1262],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isQuantifiable",7],[": ",17],["Bool",18]],"d":"Whether this node may be used as the operand of a quantifier such as\n`?`, `+` or `*`."},{"p":["AST","Node","literalStringValue"],"f":[["var",12],[" ",17],["literalStringValue",7],[": ",17],["String",18,1220],["? { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["literalStringValue",7],[": ",17],["String",18],["?",17]]},{"p":["AST","Node","children"],"f":[["var",12],[" ",17],["children",7],[": [",17],["AST",18,39],[".",17],["Node",18,28],["]? { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["children",7],[": [",17],["AST",18],[".",17],["Node",18],["]?",17]],"d":"The child nodes of this node.\n\nIf the node isn't a parent node, this value is `nil`.","o":1200},{"p":["AST","Node","isTrivia"],"f":[["var",12],[" ",17],["isTrivia",7],[": ",17],["Bool",18,1262],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isTrivia",7],[": ",17],["Bool",18]],"d":"Whether this node is trivia or non-semantic, like comments."},{"p":["AST","Node","location"],"f":[["var",12],[" ",17],["location",7],[": ",17],["SourceLocation",18,557],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["location",7],[": ",17],["SourceLocation",18]]},{"p":["AST","root"],"f":[["var",12],[" ",17],["root",7],[": ",17],["AST",18,39],[".",17],["Node",18,28]],"s":[["var",12],[" ",17],["root",7],[": ",17],["AST",18],[".",17],["Node",18]]},{"p":["AST","Empty","location"],"f":[["let",12],[" ",17],["location",7],[": ",17],["SourceLocation",18,557]],"s":[["let",12],[" ",17],["location",7],[": ",17],["SourceLocation",18]],"o":1199},{"p":["AST","Group","BalancedCapture","dash"],"f":[["var",12],[" ",17],["dash",7],[": ",17],["SourceLocation",18,557]],"s":[["var",12],[" ",17],["dash",7],[": ",17],["SourceLocation",18]],"d":"The location of the `-` in the group."},{"p":["AST","Group","BalancedCapture","name"],"f":[["var",12],[" ",17],["name",7],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["String",18,1220],[">?",17]],"s":[["var",12],[" ",17],["name",7],[": ",17],["Source",18],[".",17],["Located",18],["<",17],["String",18],[">?",17]],"d":"The name of the group, or nil if the group has no name."},{"p":["AST","Group","BalancedCapture","priorName"],"f":[["var",12],[" ",17],["priorName",7],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["String",18,1220],[">",17]],"s":[["var",12],[" ",17],["priorName",7],[": ",17],["Source",18],[".",17],["Located",18],["<",17],["String",18],[">",17]],"d":"The name of the prior group that the balancing group references."},{"p":["AST","Group","Kind","lookaroundKind"],"f":[["var",12],[" ",17],["lookaroundKind",7],[": (forwards",17],[": ",17],["Bool",18,1262],[", positive",17],[": ",17],["Bool",18,1262],[")? { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["lookaroundKind",7],[": (forwards",17],[": ",17],["Bool",18],[", positive",17],[": ",17],["Bool",18],[")?",17]],"d":"The direction of a lookaround assertion\nand an indication of whether the assertion is positive or negative.\n\nIf the group isn't a lookaheand or lookbehind assertion,\nthis value is `nil`."},{"p":["AST","Group","Kind","isCapturing"],"f":[["var",12],[" ",17],["isCapturing",7],[": ",17],["Bool",18,1262],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isCapturing",7],[": ",17],["Bool",18]],"d":"Whether the group is a capturing group."},{"p":["AST","Group","Kind","name"],"f":[["var",12],[" ",17],["name",7],[": ",17],["String",18,1220],["? { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["name",7],[": ",17],["String",18],["?",17]],"d":"The name of the group.\n\nIf the group doesn't have a name, this value is `nil`."},{"p":["AST","Group","kind"],"f":[["let",12],[" ",17],["kind",7],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["AST",18,39],[".",17],["Group",18,66],[".",17],["Kind",18,29],[">",17]],"s":[["let",12],[" ",17],["kind",7],[": ",17],["Source",18],[".",17],["Located",18],["<",17],["AST",18],[".",17],["Group",18],[".",17],["Kind",18],[">",17]]},{"p":["AST","Group","child"],"f":[["let",12],[" ",17],["child",7],[": ",17],["AST",18,39],[".",17],["Node",18,28]],"s":[["let",12],[" ",17],["child",7],[": ",17],["AST",18],[".",17],["Node",18]]},{"p":["AST","Group","location"],"f":[["let",12],[" ",17],["location",7],[": ",17],["SourceLocation",18,557]],"s":[["let",12],[" ",17],["location",7],[": ",17],["SourceLocation",18]],"o":1199},{"p":["AST","Quote","literal"],"f":[["let",12],[" ",17],["literal",7],[": ",17],["String",18,1220]],"s":[["let",12],[" ",17],["literal",7],[": ",17],["String",18]]},{"p":["AST","Quote","location"],"f":[["let",12],[" ",17],["location",7],[": ",17],["SourceLocation",18,557]],"s":[["let",12],[" ",17],["location",7],[": ",17],["SourceLocation",18]],"o":1199},{"p":["AST","Trivia","contents"],"f":[["let",12],[" ",17],["contents",7],[": ",17],["String",18,1220]],"s":[["let",12],[" ",17],["contents",7],[": ",17],["String",18]]},{"p":["AST","Trivia","location"],"f":[["let",12],[" ",17],["location",7],[": ",17],["SourceLocation",18,557]],"s":[["let",12],[" ",17],["location",7],[": ",17],["SourceLocation",18]],"o":1199},{"p":["AST","Reference","recursionLevel"],"f":[["var",12],[" ",17],["recursionLevel",7],[": ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["Int",18,1264],[">?",17]],"s":[["var",12],[" ",17],["recursionLevel",7],[": ",17],["Source",18],[".",17],["Located",18],["<",17],["Int",18],[">?",17]],"d":"An additional specifier supported by Oniguruma that specifies what\nrecursion level the group being referenced belongs to."},{"p":["AST","Reference","recursesWholePattern"],"f":[["var",12],[" ",17],["recursesWholePattern",7],[": ",17],["Bool",18,1262],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["recursesWholePattern",7],[": ",17],["Bool",18]],"d":"Whether this is a reference that recurses the whole pattern, rather than\na group."},{"p":["AST","Reference","kind"],"f":[["var",12],[" ",17],["kind",7],[": ",17],["AST",18,39],[".",17],["Reference",18,70],[".",17],["Kind",18,30]],"s":[["var",12],[" ",17],["kind",7],[": ",17],["AST",18],[".",17],["Reference",18],[".",17],["Kind",18]]},{"p":["AST","Reference","innerLoc"],"f":[["var",12],[" ",17],["innerLoc",7],[": ",17],["SourceLocation",18,557]],"s":[["var",12],[" ",17],["innerLoc",7],[": ",17],["SourceLocation",18]],"d":"The location of the inner numeric or textual reference, e.g the location\nof '-2' in '\\g{-2}'. Note this includes the recursion level for e.g\n'\\k<a+2>'."},{"p":["Source","LocatedError","description"],"f":[["var",12],[" ",17],["description",7],[": ",17],["String",18,1220],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["description",7],[": ",17],["String",18]],"e":[["E",1,"Error",1325]],"o":1321},{"p":["Source","LocatedError","error"],"f":[["let",12],[" ",17],["error",7],[": ",17],["E",18]],"s":[["let",12],[" ",17],["error",7],[": ",17],["E",18]]},{"p":["Source","LocatedError","location"],"f":[["let",12],[" ",17],["location",7],[": ",17],["SourceLocation",18,557]],"s":[["let",12],[" ",17],["location",7],[": ",17],["SourceLocation",18]],"o":393},{"p":["Source","Located","value"],"f":[["var",12],[" ",17],["value",7],[": ",17],["T",18]],"s":[["var",12],[" ",17],["value",7],[": ",17],["T",18]]},{"p":["Source","Located","location"],"f":[["var",12],[" ",17],["location",7],[": ",17],["SourceLocation",18,557]],"s":[["var",12],[" ",17],["location",7],[": ",17],["SourceLocation",18]]},{"p":["Source","Location","end"],"f":[["var",12],[" ",17],["end",7],[": ",17],["Source",18,71],[".",17],["Position",18,561],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["end",7],[": ",17],["Source",18],[".",17],["Position",18]],"d":"The open end"},{"p":["Source","Location","range"],"f":[["var",12],[" ",17],["range",7],[": ",17],["Range",18,1297],["<",17],["Source",18,71],[".",17],["Position",18,561],[">",17]],"s":[["var",12],[" ",17],["range",7],[": ",17],["Range",18],["<",17],["Source",18],[".",17],["Position",18],[">",17]]},{"p":["Source","Location","start"],"f":[["var",12],[" ",17],["start",7],[": ",17],["Source",18,71],[".",17],["Position",18,561],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["start",7],[": ",17],["Source",18],[".",17],["Position",18]]},{"p":["Source","Location","isFake"],"f":[["var",12],[" ",17],["isFake",7],[": ",17],["Bool",18,1262],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isFake",7],[": ",17],["Bool",18]]},{"p":["Source","Location","isReal"],"f":[["var",12],[" ",17],["isReal",7],[": ",17],["Bool",18,1262],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isReal",7],[": ",17],["Bool",18]]},{"p":["Source","Location","isEmpty"],"f":[["var",12],[" ",17],["isEmpty",7],[": ",17],["Bool",18,1262],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isEmpty",7],[": ",17],["Bool",18]],"d":"Whether this location covers an empty range. This includes `isFake`."},{"p":["AnyType","base"],"f":[["var",12],[" ",17],["base",7],[": ",17],["Any",12],[".Type",17]],"s":[["var",12],[" ",17],["base",7],[": ",17],["Any",12],[".Type",17]]},{"p":["TypeConstruction","arrayType(of:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["arrayType",7],["(",17],["of",1],[" ",17],["childType",2],[": ",17],["Any",12],[".Type) -> ",17],["Any",12],[".Type",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["arrayType",7],["(",17],["of",1],[": ",17],["Any",12],[".Type) -> ",17],["Any",12],[".Type",17]]},{"p":["TypeConstruction","tupleType(of:labels:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["tupleType",7],["<",17],["ElementTypes",0],[">(",17],["of",1],[" ",17],["elementTypes",2],[": ",17],["ElementTypes",18],[", ",17],["labels",1],[": ",17],["String",18,1220],["? = nil) -> ",17],["Any",12],[".Type ",17],["where",12],[" ",17],["ElementTypes",18],[" : ",17],["BidirectionalCollection",18,1204],[", ",17],["ElementTypes",18],[".",17],["Element",18],[" == ",17],["Any",12],[".Type",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["tupleType",7],["<",17],["ElementTypes",0],[">(",17],["of",1],[": ",17],["ElementTypes",18],[", ",17],["labels",1],[": ",17],["String",18],["?) -> ",17],["Any",12],[".Type",17]],"c":[["ElementTypes",1,"BidirectionalCollection",1204],["ElementTypes.Element",2,"Any.Type"]],"g":[["ElementTypes",0,0]],"d":"Returns a tuple metatype of the given element types."},{"p":["TypeConstruction","optionalType(of:depth:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["optionalType",7],["<",17],["Base",0],[">(",17],["of",1],[" ",17],["base",2],[": ",17],["Base",18],[".Type, ",17],["depth",1],[": ",17],["Int",18,1264],[" = 1) -> ",17],["Any",12],[".Type",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["optionalType",7],["<",17],["Base",0],[">(",17],["of",1],[": ",17],["Base",18],[".Type, ",17],["depth",1],[": ",17],["Int",18],[") -> ",17],["Any",12],[".Type",17]],"g":[["Base",0,0]]},{"p":["TypeConstruction","optionalType(of:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["optionalType",7],["(",17],["of",1],[" ",17],["childType",2],[": ",17],["Any",12],[".Type) -> ",17],["Any",12],[".Type",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["optionalType",7],["(",17],["of",1],[": ",17],["Any",12],[".Type) -> ",17],["Any",12],[".Type",17]]},{"p":["TypeConstruction","tuple(of:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["tuple",7],["<",17],["Elements",0],[">(",17],["of",1],[" ",17],["elements",2],[": ",17],["Elements",18],[") -> ",17],["Any",12],[" ",17],["where",12],[" ",17],["Elements",18],[" : ",17],["BidirectionalCollection",18,1204],[", ",17],["Elements",18],[".",17],["Element",18],[" == ",17],["Any",12]],"s":[["static",12],[" ",17],["func",12],[" ",17],["tuple",7],["<",17],["Elements",0],[">(",17],["of",1],[": ",17],["Elements",18],[") -> ",17],["Any",12]],"c":[["Elements",1,"BidirectionalCollection",1204],["Elements.Element",2,"Any"]],"g":[["Elements",0,0]],"d":"Creates a type-erased tuple with the given elements."},{"p":["CaptureList","hasCapture(named:)"],"f":[["func",12],[" ",17],["hasCapture",7],["(",17],["named",1],[" ",17],["name",2],[": ",17],["String",18,1220],[") -> ",17],["Bool",18,1262]],"s":[["func",12],[" ",17],["hasCapture",7],["(",17],["named",1],[": ",17],["String",18],[") -> ",17],["Bool",18]],"d":"Whether the capture list has a given named capture."},{"p":["CaptureList","indexOfCapture(named:)"],"f":[["func",12],[" ",17],["indexOfCapture",7],["(",17],["named",1],[" ",17],["name",2],[": ",17],["String",18,1220],[") -> ",17],["Int",18,1264],["?",17]],"s":[["func",12],[" ",17],["indexOfCapture",7],["(",17],["named",1],[": ",17],["String",18],[") -> ",17],["Int",18],["?",17]],"d":"Retrieve the capture index of a given named capture, or `nil` if there is\nno such capture."},{"p":["CaptureList","append(_:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["append",7],["(",17],["_",1],[" ",17],["c",2],[": ",17],["CaptureList",18,32],[".",17],["Capture",18,33],[")",17]],"s":[["func",12],[" ",17],["append",7],["(",17],["CaptureList",18],[".",17],["Capture",18],[")",17]]},{"p":["PrettyPrinter","printBlock(_:startDelimiter:endDelimiter:_:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["printBlock",7],["(",17],["_",1],[" ",17],["header",2],[": ",17],["String",18,1220],[", ",17],["startDelimiter",1],[": ",17],["String",18,1220],[" = \"{\", ",17],["endDelimiter",1],[": ",17],["String",18,1220],[" = \"}\", ",17],["_",1],[" ",17],["f",2],[": (",17],["inout",12],[" ",17],["PrettyPrinter",18,36],[") -> ())",17]],"s":[["func",12],[" ",17],["printBlock",7],["(",17],["String",18],[", ",17],["startDelimiter",1],[": ",17],["String",18],[", ",17],["endDelimiter",1],[": ",17],["String",18],[", (",17],["inout",12],[" ",17],["PrettyPrinter",18],[") -> ())",17]],"d":"Executes `f` inside an indented block, which has a header\nand delimiters."},{"p":["PrettyPrinter","printIndented(_:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["printIndented",7],["(",17],["_",1],[" ",17],["f",2],[": (",17],["inout",12],[" ",17],["PrettyPrinter",18,36],[") -> ())",17]],"s":[["func",12],[" ",17],["printIndented",7],["((",17],["inout",12],[" ",17],["PrettyPrinter",18],[") -> ())",17]],"d":"Executes `f` at one increased level of indentation."},{"p":["PrettyPrinter","terminateLine()"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["terminateLine",7],["()",17]],"s":[["func",12],[" ",17],["terminateLine",7],["()",17]],"d":"Terminates a line, updating any relevant state."},{"p":["PrettyPrinter","printAsCanonical(_:delimiters:terminateLine:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["printAsCanonical",7],["(",17],["_",1],[" ",17],["ast",2],[": ",17],["AST",18,39],[", ",17],["delimiters",1],[": ",17],["Bool",18,1262],[" = false, ",17],["terminateLine",1],[" ",17],["terminate",2],[": ",17],["Bool",18,1262],[" = true)",17]],"s":[["func",12],[" ",17],["printAsCanonical",7],["(",17],["AST",18],[", ",17],["delimiters",1],[": ",17],["Bool",18],[", ",17],["terminateLine",1],[": ",17],["Bool",18],[")",17]],"d":"Outputs a regular expression abstract syntax tree in canonical form,\nindenting and terminating the line, and updating its internal state.\n\n- Parameter ast: The abstract syntax tree of the regular expression being output.\n- Parameter delimiters: Whether to include commas between items.\n- Parameter terminateLine: Whether to include terminate the line."},{"p":["PrettyPrinter","print(_:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["print",7],["(",17],["_",1],[" ",17],["s",2],[": ",17],["String",18,1220],[")",17]],"s":[["func",12],[" ",17],["print",7],["(",17],["String",18],[")",17]],"d":"Print out a new entry.\n\nThis method indents `s`, updates any internal state,\nand terminates the current line."},{"p":["PrettyPrinter","finish()"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["finish",7],["() -> ",17],["String",18,1220]],"s":[["func",12],[" ",17],["finish",7],["() -> ",17],["String",18]]},{"p":["PrettyPrinter","indent()"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["indent",7],["()",17]],"s":[["func",12],[" ",17],["indent",7],["()",17]],"d":"Indents a new line, if at the start of a line, otherwise\ndoes nothing.\n\nThis function updates internal state."},{"p":["PrettyPrinter","output(_:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["output",7],["(",17],["_",1],[" ",17],["s",2],[": ",17],["String",18,1220],[")",17]],"s":[["func",12],[" ",17],["output",7],["(",17],["String",18],[")",17]],"d":"Outputs a string directly, without termination or\nindentation, and without updating any internal state.\n\nThis is the low-level interface to the pretty printer.\n\n- Note: If `s` includes a newline, even at the end,\n  this method does not update any tracking state."},{"p":["PrettyPrinter","printLine(_:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["printLine",7],["(",17],["_",1],[" ",17],["f",2],[": () -> ",17],["String",18,1220],["?)",17]],"s":[["func",12],[" ",17],["printLine",7],["(() -> ",17],["String",18],["?)",17]],"d":"Prints out a new entry by invoking `f` until it returns `nil`.\n\nThis method indents `s`, updates any internal state,\nand terminates the current line."},{"p":["AST","renderAsCanonical(showDelimiters:terminateLine:)"],"f":[["func",12],[" ",17],["renderAsCanonical",7],["(",17],["showDelimiters",1],[" ",17],["delimiters",2],[": ",17],["Bool",18,1262],[" = false, ",17],["terminateLine",1],[": ",17],["Bool",18,1262],[" = false) -> ",17],["String",18,1220]],"s":[["func",12],[" ",17],["renderAsCanonical",7],["(",17],["showDelimiters",1],[": ",17],["Bool",18],[", ",17],["terminateLine",1],[": ",17],["Bool",18],[") -> ",17],["String",18]],"d":"Renders using Swift's preferred regex literal syntax."},{"p":["AST","Node","renderAsCanonical(showDelimiters:terminateLine:)"],"f":[["func",12],[" ",17],["renderAsCanonical",7],["(",17],["showDelimiters",1],[" ",17],["delimiters",2],[": ",17],["Bool",18,1262],[" = false, ",17],["terminateLine",1],[": ",17],["Bool",18,1262],[" = false) -> ",17],["String",18,1220]],"s":[["func",12],[" ",17],["renderAsCanonical",7],["(",17],["showDelimiters",1],[": ",17],["Bool",18],[", ",17],["terminateLine",1],[": ",17],["Bool",18],[") -> ",17],["String",18]],"d":"Renders using Swift's preferred regex literal syntax."},{"p":["AST","Node","as(_:)"],"f":[["func",12],[" ",17],["`as`",7],["<",17],["T",0],[">(",17],["_",1],[" ",17],["t",2],[": ",17],["T",18],[".Type = T.self) -> ",17],["T",18],["? ",17],["where",12],[" ",17],["T",18],[" : ",17],["_ASTNode",18]],"s":[["func",12],[" ",17],["`as`",7],["<",17],["T",0],[">(",17],["T",18],[".Type) -> ",17],["T",18],["?",17]],"c":[["T",1,"_ASTNode",1]],"g":[["T",0,0]]},{"p":["Source","Located","map(_:)"],"f":[["func",12],[" ",17],["map",7],["<",17],["U",0],[">(",17],["_",1],[" ",17],["fn",2],[": (",17],["T",18],[") ",17],["throws",12],[" -> ",17],["U",18],[") ",17],["rethrows",12],[" -> ",17],["Source",18,71],[".",17],["Located",18,73],["<",17],["U",18],[">",17]],"s":[["func",12],[" ",17],["map",7],["<",17],["U",0],[">((",17],["T",18],[") ",17],["throws",12],[" -> ",17],["U",18],[") ",17],["rethrows",12],[" -> ",17],["Source",18],[".",17],["Located",18],["<",17],["U",18],[">",17]],"g":[["T",0,0],["U",0,1]]},{"p":["Source","Location","union(with:)"],"f":[["func",12],[" ",17],["union",7],["(",17],["with",1],[" ",17],["other",2],[": ",17],["Source",18,71],[".",17],["Location",18,74],[") -> ",17],["SourceLocation",18,557]],"s":[["func",12],[" ",17],["union",7],["(",17],["with",1],[": ",17],["Source",18],[".",17],["Location",18],[") -> ",17],["SourceLocation",18]],"d":"Returns the smallest location that contains both this location and\nanother."},{"p":["AnyType","hash(into:)"],"f":[["func",12],[" ",17],["hash",7],["(",17],["into",1],[" ",17],["hasher",2],[": ",17],["inout",12],[" ",17],["Hasher",18,1326],[")",17]],"s":[["func",12],[" ",17],["hash",7],["(",17],["into",1],[": ",17],["inout",12],[" ",17],["Hasher",18],[")",17]],"o":1202},{"p":["CaptureList","Capture","==(_:_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["==",7],[" ",17],["(",17],["lhs",2],[": ",17],["CaptureList",18,32],[".",17],["Capture",18,33],[", ",17],["rhs",2],[": ",17],["CaptureList",18,32],[".",17],["Capture",18,33],[") -> ",17],["Bool",18,1262]],"s":[["static",12],[" ",17],["func",12],[" ",17],["==",7],[" ",17],["(",17],["CaptureList",18],[".",17],["Capture",18],[", ",17],["CaptureList",18],[".",17],["Capture",18],[") -> ",17],["Bool",18]],"o":1218},{"p":["AnyType","==(_:_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["==",7],[" ",17],["(",17],["lhs",2],[": ",17],["AnyType",18,75],[", ",17],["rhs",2],[": ",17],["AnyType",18,75],[") -> ",17],["Bool",18,1262]],"s":[["static",12],[" ",17],["func",12],[" ",17],["==",7],[" ",17],["(",17],["AnyType",18],[", ",17],["AnyType",18],[") -> ",17],["Bool",18]],"o":1218},{"p":["lexRegex(start:end:)"],"f":[["func",12],[" ",17],["lexRegex",7],["(",17],["start",1],[": ",17],["UnsafeRawPointer",18,1255],[", ",17],["end",1],[": ",17],["UnsafeRawPointer",18,1255],[") ",17],["throws",12],[" -> (contents",17],[": ",17],["String",18,1220],[", ",17],["Delimiter",18,76],[", end",17],[": ",17],["UnsafeRawPointer",18,1255],[")",17]],"s":[["func",12],[" ",17],["lexRegex",7],["(",17],["start",1],[": ",17],["UnsafeRawPointer",18],[", ",17],["end",1],[": ",17],["UnsafeRawPointer",18],[") ",17],["throws",12],[" -> (contents",17],[": ",17],["String",18],[", ",17],["Delimiter",18],[", end",17],[": ",17],["UnsafeRawPointer",18],[")",17]]},{"p":["parseWithDelimiters(_:_:)"],"f":[["func",12],[" ",17],["parseWithDelimiters",7],["<",17],["S",0],[">(",17],["_",1],[" ",17],["regex",2],[": ",17],["S",18],[", ",17],["_",1],[" ",17],["stage",2],[": ",17],["ASTStage",18,31],[") ",17],["throws",12],[" -> ",17],["AST",18,39],[" ",17],["where",12],[" ",17],["S",18],[" : ",17],["StringProtocol",18,1301],[", ",17],["S",18],[".",17],["SubSequence",18],[" == ",17],["Substring",18,1298]],"s":[["func",12],[" ",17],["parseWithDelimiters",7],["<",17],["S",0],[">(",17],["S",18],[", ",17],["ASTStage",18],[") ",17],["throws",12],[" -> ",17],["AST",18]],"c":[["S",1,"StringProtocol",1301],["S.SubSequence",2,"Substring",1298]],"g":[["S",0,0]],"d":"Parses a given regex string with delimiters, inferring the syntax options\nfrom the delimiters used."},{"p":["parse(_:_:_:)"],"f":[["func",12],[" ",17],["parse",7],["<",17],["S",0],[">(",17],["_",1],[" ",17],["regex",2],[": ",17],["S",18],[", ",17],["_",1],[" ",17],["stage",2],[": ",17],["ASTStage",18,31],[", ",17],["_",1],[" ",17],["syntax",2],[": ",17],["SyntaxOptions",18,37],[") ",17],["throws",12],[" -> ",17],["AST",18,39],[" ",17],["where",12],[" ",17],["S",18],[" : ",17],["StringProtocol",18,1301],[", ",17],["S",18],[".",17],["SubSequence",18],[" == ",17],["Substring",18,1298]],"s":[["func",12],[" ",17],["parse",7],["<",17],["S",0],[">(",17],["S",18],[", ",17],["ASTStage",18],[", ",17],["SyntaxOptions",18],[") ",17],["throws",12],[" -> ",17],["AST",18]],"c":[["S",1,"StringProtocol",1301],["S.SubSequence",2,"Substring",1298]],"g":[["S",0,0]]},{"p":["validate(_:)"],"f":[["func",12],[" ",17],["validate",7],["(",17],["_",1],[" ",17],["ast",2],[": ",17],["AST",18,39],[") ",17],["throws",12]],"s":[["func",12],[" ",17],["validate",7],["(",17],["AST",18],[") ",17],["throws",12]],"d":"Check a regex AST for semantic validity."},{"p":["currentRegexLiteralFormatVersion"],"f":[["let",12],[" ",17],["currentRegexLiteralFormatVersion",7],[": ",17],["Int",18,1264]],"s":[["let",12],[" ",17],["currentRegexLiteralFormatVersion",7],[": ",17],["Int",18]]},{"p":["SourceLocation"],"f":[["typealias",12],[" ",17],["SourceLocation",7],[" = ",17],["Source",18,71],[".",17],["Location",18,74]],"s":[["typealias",12],[" ",17],["SourceLocation",7]]},{"p":["AST","Located"],"f":[["typealias",12],[" ",17],["Located",7],[" = ",17],["Source",18,71],[".",17],["Located",18,73]],"s":[["typealias",12],[" ",17],["Located",7]]},{"p":["Source","Char"],"f":[["typealias",12],[" ",17],["Char",7],[" = ",17],["Character",18,1203]],"s":[["typealias",12],[" ",17],["Char",7]]},{"p":["Source","Input"],"f":[["typealias",12],[" ",17],["Input",7],[" = ",17],["String",18,1220]],"s":[["typealias",12],[" ",17],["Input",7]]},{"p":["Source","Position"],"f":[["typealias",12],[" ",17],["Position",7],[" = ",17],["String",18,1220],[".",17],["Index",18,1222]],"s":[["typealias",12],[" ",17],["Position",7]],"d":"A precise point in the input, commonly used for bounded ranges."},{"p":["Offsets"],"f":[["typealias",12],[" ",17],["Offsets",7],[" = (lower",17],[": ",17],["Int",18,1264],[", upper",17],[": ",17],["Int",18,1264],[")",17]],"s":[["typealias",12],[" ",17],["Offsets",7]]},{"p":["Unicode","POSIXProperty"],"f":[["enum",12],[" ",17],["POSIXProperty",7]],"s":[["enum",12],[" ",17],["POSIXProperty",7]],"d":"POSIX character properties not already covered by general categories or\nbinary properties."},{"p":["Unicode","BinaryProperty"],"f":[["enum",12],[" ",17],["BinaryProperty",7]],"s":[["enum",12],[" ",17],["BinaryProperty",7]],"d":"A list of Unicode properties that can either be true or false.\n\nhttps://www.unicode.org/Public/UCD/latest/ucd/PropertyAliases.txt"},{"p":["Unicode","ExtendedGeneralCategory"],"f":[["enum",12],[" ",17],["ExtendedGeneralCategory",7]],"s":[["enum",12],[" ",17],["ExtendedGeneralCategory",7]],"d":"Unicode.GeneralCategory + cases for \"meta categories\" such as \"L\", which\nencompasses Lu | Ll | Lt | Lm | Lo."},{"p":["Unicode","Block"],"f":[["enum",12],[" ",17],["Block",7]],"s":[["enum",12],[" ",17],["Block",7]],"d":"A list of unicode character blocks, including `No_Block`.\nhttps://www.unicode.org/Public/UCD/latest/ucd/Blocks.txt"},{"p":["Unicode","Script"],"f":[["enum",12],[" ",17],["Script",7]],"s":[["enum",12],[" ",17],["Script",7]],"d":"Character script types."},{"p":["Unicode","Scalar","AllScalars"],"f":[["struct",12],[" ",17],["AllScalars",7]],"s":[["struct",12],[" ",17],["AllScalars",7]]},{"p":["Unicode","POSIXProperty","word"],"f":[["case",12],[" ",17],["word",7]],"s":[["case",12],[" ",17],["word",7]]},{"p":["Unicode","POSIXProperty","alnum"],"f":[["case",12],[" ",17],["alnum",7]],"s":[["case",12],[" ",17],["alnum",7]]},{"p":["Unicode","POSIXProperty","blank"],"f":[["case",12],[" ",17],["blank",7]],"s":[["case",12],[" ",17],["blank",7]]},{"p":["Unicode","POSIXProperty","graph"],"f":[["case",12],[" ",17],["graph",7]],"s":[["case",12],[" ",17],["graph",7]]},{"p":["Unicode","POSIXProperty","print"],"f":[["case",12],[" ",17],["print",7]],"s":[["case",12],[" ",17],["print",7]]},{"p":["Unicode","POSIXProperty","xdigit"],"f":[["case",12],[" ",17],["xdigit",7]],"s":[["case",12],[" ",17],["xdigit",7]]},{"p":["Unicode","BinaryProperty","idsBinaryOperator"],"f":[["case",12],[" ",17],["idsBinaryOperator",7]],"s":[["case",12],[" ",17],["idsBinaryOperator",7]]},{"p":["Unicode","BinaryProperty","alphabetic"],"f":[["case",12],[" ",17],["alphabetic",7]],"s":[["case",12],[" ",17],["alphabetic",7]]},{"p":["Unicode","BinaryProperty","deprecated"],"f":[["case",12],[" ",17],["deprecated",7]],"s":[["case",12],[" ",17],["deprecated",7]]},{"p":["Unicode","BinaryProperty","idContinue"],"f":[["case",12],[" ",17],["idContinue",7]],"s":[["case",12],[" ",17],["idContinue",7]]},{"p":["Unicode","BinaryProperty","softDotted"],"f":[["case",12],[" ",17],["softDotted",7]],"s":[["case",12],[" ",17],["softDotted",7]]},{"p":["Unicode","BinaryProperty","whitespace"],"f":[["case",12],[" ",17],["whitespace",7]],"s":[["case",12],[" ",17],["whitespace",7]]},{"p":["Unicode","BinaryProperty","bidiControl"],"f":[["case",12],[" ",17],["bidiControl",7]],"s":[["case",12],[" ",17],["bidiControl",7]]},{"p":["Unicode","BinaryProperty","ideographic"],"f":[["case",12],[" ",17],["ideographic",7]],"s":[["case",12],[" ",17],["ideographic",7]]},{"p":["Unicode","BinaryProperty","joinControl"],"f":[["case",12],[" ",17],["joinControl",7]],"s":[["case",12],[" ",17],["joinControl",7]]},{"p":["Unicode","BinaryProperty","xidContinue"],"f":[["case",12],[" ",17],["xidContinue",7]],"s":[["case",12],[" ",17],["xidContinue",7]]},{"p":["Unicode","BinaryProperty","bidiMirrored"],"f":[["case",12],[" ",17],["bidiMirrored",7]],"s":[["case",12],[" ",17],["bidiMirrored",7]]},{"p":["Unicode","BinaryProperty","expandsOnNFC"],"f":[["case",12],[" ",17],["expandsOnNFC",7]],"s":[["case",12],[" ",17],["expandsOnNFC",7]]},{"p":["Unicode","BinaryProperty","expandsOnNFD"],"f":[["case",12],[" ",17],["expandsOnNFD",7]],"s":[["case",12],[" ",17],["expandsOnNFD",7]]},{"p":["Unicode","BinaryProperty","graphemeBase"],"f":[["case",12],[" ",17],["graphemeBase",7]],"s":[["case",12],[" ",17],["graphemeBase",7]]},{"p":["Unicode","BinaryProperty","graphemeLink"],"f":[["case",12],[" ",17],["graphemeLink",7]],"s":[["case",12],[" ",17],["graphemeLink",7]]},{"p":["Unicode","BinaryProperty","otherIDStart"],"f":[["case",12],[" ",17],["otherIDStart",7]],"s":[["case",12],[" ",17],["otherIDStart",7]]},{"p":["Unicode","BinaryProperty","asciiHexDigit"],"f":[["case",12],[" ",17],["asciiHexDigit",7]],"s":[["case",12],[" ",17],["asciiHexDigit",7]]},{"p":["Unicode","BinaryProperty","caseIgnorable"],"f":[["case",12],[" ",17],["caseIgnorable",7]],"s":[["case",12],[" ",17],["caseIgnorable",7]]},{"p":["Unicode","BinaryProperty","emojiModifier"],"f":[["case",12],[" ",17],["emojiModifier",7]],"s":[["case",12],[" ",17],["emojiModifier",7]]},{"p":["Unicode","BinaryProperty","expandsOnNFKC"],"f":[["case",12],[" ",17],["expandsOnNFKC",7]],"s":[["case",12],[" ",17],["expandsOnNFKC",7]]},{"p":["Unicode","BinaryProperty","expandsOnNFKD"],"f":[["case",12],[" ",17],["expandsOnNFKD",7]],"s":[["case",12],[" ",17],["expandsOnNFKD",7]]},{"p":["Unicode","BinaryProperty","patternSyntax"],"f":[["case",12],[" ",17],["patternSyntax",7]],"s":[["case",12],[" ",17],["patternSyntax",7]]},{"p":["Unicode","BinaryProperty","quotationMark"],"f":[["case",12],[" ",17],["quotationMark",7]],"s":[["case",12],[" ",17],["quotationMark",7]]},{"p":["Unicode","BinaryProperty","emojiComponent"],"f":[["case",12],[" ",17],["emojiComponent",7]],"s":[["case",12],[" ",17],["emojiComponent",7]]},{"p":["Unicode","BinaryProperty","otherLowercase"],"f":[["case",12],[" ",17],["otherLowercase",7]],"s":[["case",12],[" ",17],["otherLowercase",7]]},{"p":["Unicode","BinaryProperty","otherUppercase"],"f":[["case",12],[" ",17],["otherUppercase",7]],"s":[["case",12],[" ",17],["otherUppercase",7]]},{"p":["Unicode","BinaryProperty","otherAlphabetic"],"f":[["case",12],[" ",17],["otherAlphabetic",7]],"s":[["case",12],[" ",17],["otherAlphabetic",7]]},{"p":["Unicode","BinaryProperty","otherIDContinue"],"f":[["case",12],[" ",17],["otherIDContinue",7]],"s":[["case",12],[" ",17],["otherIDContinue",7]]},{"p":["Unicode","BinaryProperty","graphemeExtended"],"f":[["case",12],[" ",17],["graphemeExtended",7]],"s":[["case",12],[" ",17],["graphemeExtended",7]]},{"p":["Unicode","BinaryProperty","sentenceTerminal"],"f":[["case",12],[" ",17],["sentenceTerminal",7]],"s":[["case",12],[" ",17],["sentenceTerminal",7]]},{"p":["Unicode","BinaryProperty","unifiedIdiograph"],"f":[["case",12],[" ",17],["unifiedIdiograph",7]],"s":[["case",12],[" ",17],["unifiedIdiograph",7]]},{"p":["Unicode","BinaryProperty","emojiModifierBase"],"f":[["case",12],[" ",17],["emojiModifierBase",7]],"s":[["case",12],[" ",17],["emojiModifierBase",7]]},{"p":["Unicode","BinaryProperty","emojiPresentation"],"f":[["case",12],[" ",17],["emojiPresentation",7]],"s":[["case",12],[" ",17],["emojiPresentation",7]]},{"p":["Unicode","BinaryProperty","patternWhitespace"],"f":[["case",12],[" ",17],["patternWhitespace",7]],"s":[["case",12],[" ",17],["patternWhitespace",7]]},{"p":["Unicode","BinaryProperty","regionalIndicator"],"f":[["case",12],[" ",17],["regionalIndicator",7]],"s":[["case",12],[" ",17],["regionalIndicator",7]]},{"p":["Unicode","BinaryProperty","variationSelector"],"f":[["case",12],[" ",17],["variationSelector",7]],"s":[["case",12],[" ",17],["variationSelector",7]]},{"p":["Unicode","BinaryProperty","idsTrinaryOperator"],"f":[["case",12],[" ",17],["idsTrinaryOperator",7]],"s":[["case",12],[" ",17],["idsTrinaryOperator",7]]},{"p":["Unicode","BinaryProperty","terminalPunctuation"],"f":[["case",12],[" ",17],["terminalPunctuation",7]],"s":[["case",12],[" ",17],["terminalPunctuation",7]]},{"p":["Unicode","BinaryProperty","compositionExclusion"],"f":[["case",12],[" ",17],["compositionExclusion",7]],"s":[["case",12],[" ",17],["compositionExclusion",7]]},{"p":["Unicode","BinaryProperty","extendedPictographic"],"f":[["case",12],[" ",17],["extendedPictographic",7]],"s":[["case",12],[" ",17],["extendedPictographic",7]]},{"p":["Unicode","BinaryProperty","changesWhenCasefolded"],"f":[["case",12],[" ",17],["changesWhenCasefolded",7]],"s":[["case",12],[" ",17],["changesWhenCasefolded",7]]},{"p":["Unicode","BinaryProperty","changesWhenCasemapped"],"f":[["case",12],[" ",17],["changesWhenCasemapped",7]],"s":[["case",12],[" ",17],["changesWhenCasemapped",7]]},{"p":["Unicode","BinaryProperty","changesWhenLowercased"],"f":[["case",12],[" ",17],["changesWhenLowercased",7]],"s":[["case",12],[" ",17],["changesWhenLowercased",7]]},{"p":["Unicode","BinaryProperty","changesWhenTitlecased"],"f":[["case",12],[" ",17],["changesWhenTitlecased",7]],"s":[["case",12],[" ",17],["changesWhenTitlecased",7]]},{"p":["Unicode","BinaryProperty","changesWhenUppercased"],"f":[["case",12],[" ",17],["changesWhenUppercased",7]],"s":[["case",12],[" ",17],["changesWhenUppercased",7]]},{"p":["Unicode","BinaryProperty","logicalOrderException"],"f":[["case",12],[" ",17],["logicalOrderException",7]],"s":[["case",12],[" ",17],["logicalOrderException",7]]},{"p":["Unicode","BinaryProperty","noncharacterCodePoint"],"f":[["case",12],[" ",17],["noncharacterCodePoint",7]],"s":[["case",12],[" ",17],["noncharacterCodePoint",7]]},{"p":["Unicode","BinaryProperty","otherGraphemeExtended"],"f":[["case",12],[" ",17],["otherGraphemeExtended",7]],"s":[["case",12],[" ",17],["otherGraphemeExtended",7]]},{"p":["Unicode","BinaryProperty","fullCompositionExclusion"],"f":[["case",12],[" ",17],["fullCompositionExclusion",7]],"s":[["case",12],[" ",17],["fullCompositionExclusion",7]]},{"p":["Unicode","BinaryProperty","changesWhenNFKCCasefolded"],"f":[["case",12],[" ",17],["changesWhenNFKCCasefolded",7]],"s":[["case",12],[" ",17],["changesWhenNFKCCasefolded",7]]},{"p":["Unicode","BinaryProperty","defaultIgnorableCodePoint"],"f":[["case",12],[" ",17],["defaultIgnorableCodePoint",7]],"s":[["case",12],[" ",17],["defaultIgnorableCodePoint",7]]},{"p":["Unicode","BinaryProperty","prependedConcatenationMark"],"f":[["case",12],[" ",17],["prependedConcatenationMark",7]],"s":[["case",12],[" ",17],["prependedConcatenationMark",7]]},{"p":["Unicode","BinaryProperty","otherDefaultIgnorableCodePoint"],"f":[["case",12],[" ",17],["otherDefaultIgnorableCodePoint",7]],"s":[["case",12],[" ",17],["otherDefaultIgnorableCodePoint",7]]},{"p":["Unicode","BinaryProperty","dash"],"f":[["case",12],[" ",17],["dash",7]],"s":[["case",12],[" ",17],["dash",7]]},{"p":["Unicode","BinaryProperty","math"],"f":[["case",12],[" ",17],["math",7]],"s":[["case",12],[" ",17],["math",7]]},{"p":["Unicode","BinaryProperty","cased"],"f":[["case",12],[" ",17],["cased",7]],"s":[["case",12],[" ",17],["cased",7]]},{"p":["Unicode","BinaryProperty","emoji"],"f":[["case",12],[" ",17],["emoji",7]],"s":[["case",12],[" ",17],["emoji",7]]},{"p":["Unicode","BinaryProperty","hyphen"],"f":[["case",12],[" ",17],["hyphen",7]],"s":[["case",12],[" ",17],["hyphen",7]]},{"p":["Unicode","BinaryProperty","idStart"],"f":[["case",12],[" ",17],["idStart",7]],"s":[["case",12],[" ",17],["idStart",7]]},{"p":["Unicode","BinaryProperty","radical"],"f":[["case",12],[" ",17],["radical",7]],"s":[["case",12],[" ",17],["radical",7]]},{"p":["Unicode","BinaryProperty","extender"],"f":[["case",12],[" ",17],["extender",7]],"s":[["case",12],[" ",17],["extender",7]]},{"p":["Unicode","BinaryProperty","hexDigit"],"f":[["case",12],[" ",17],["hexDigit",7]],"s":[["case",12],[" ",17],["hexDigit",7]]},{"p":["Unicode","BinaryProperty","xidStart"],"f":[["case",12],[" ",17],["xidStart",7]],"s":[["case",12],[" ",17],["xidStart",7]]},{"p":["Unicode","BinaryProperty","diacratic"],"f":[["case",12],[" ",17],["diacratic",7]],"s":[["case",12],[" ",17],["diacratic",7]]},{"p":["Unicode","BinaryProperty","lowercase"],"f":[["case",12],[" ",17],["lowercase",7]],"s":[["case",12],[" ",17],["lowercase",7]]},{"p":["Unicode","BinaryProperty","otherMath"],"f":[["case",12],[" ",17],["otherMath",7]],"s":[["case",12],[" ",17],["otherMath",7]]},{"p":["Unicode","BinaryProperty","uppercase"],"f":[["case",12],[" ",17],["uppercase",7]],"s":[["case",12],[" ",17],["uppercase",7]]},{"p":["Unicode","ExtendedGeneralCategory","mathSymbol"],"f":[["case",12],[" ",17],["mathSymbol",7]],"s":[["case",12],[" ",17],["mathSymbol",7]]},{"p":["Unicode","ExtendedGeneralCategory","privateUse"],"f":[["case",12],[" ",17],["privateUse",7]],"s":[["case",12],[" ",17],["privateUse",7]]},{"p":["Unicode","ExtendedGeneralCategory","unassigned"],"f":[["case",12],[" ",17],["unassigned",7]],"s":[["case",12],[" ",17],["unassigned",7]]},{"p":["Unicode","ExtendedGeneralCategory","casedLetter"],"f":[["case",12],[" ",17],["casedLetter",7]],"s":[["case",12],[" ",17],["casedLetter",7]]},{"p":["Unicode","ExtendedGeneralCategory","otherLetter"],"f":[["case",12],[" ",17],["otherLetter",7]],"s":[["case",12],[" ",17],["otherLetter",7]]},{"p":["Unicode","ExtendedGeneralCategory","otherNumber"],"f":[["case",12],[" ",17],["otherNumber",7]],"s":[["case",12],[" ",17],["otherNumber",7]]},{"p":["Unicode","ExtendedGeneralCategory","otherSymbol"],"f":[["case",12],[" ",17],["otherSymbol",7]],"s":[["case",12],[" ",17],["otherSymbol",7]]},{"p":["Unicode","ExtendedGeneralCategory","punctuation"],"f":[["case",12],[" ",17],["punctuation",7]],"s":[["case",12],[" ",17],["punctuation",7]]},{"p":["Unicode","ExtendedGeneralCategory","spacingMark"],"f":[["case",12],[" ",17],["spacingMark",7]],"s":[["case",12],[" ",17],["spacingMark",7]]},{"p":["Unicode","ExtendedGeneralCategory","letterNumber"],"f":[["case",12],[" ",17],["letterNumber",7]],"s":[["case",12],[" ",17],["letterNumber",7]]},{"p":["Unicode","ExtendedGeneralCategory","decimalNumber"],"f":[["case",12],[" ",17],["decimalNumber",7]],"s":[["case",12],[" ",17],["decimalNumber",7]]},{"p":["Unicode","ExtendedGeneralCategory","enclosingMark"],"f":[["case",12],[" ",17],["enclosingMark",7]],"s":[["case",12],[" ",17],["enclosingMark",7]]},{"p":["Unicode","ExtendedGeneralCategory","lineSeparator"],"f":[["case",12],[" ",17],["lineSeparator",7]],"s":[["case",12],[" ",17],["lineSeparator",7]]},{"p":["Unicode","ExtendedGeneralCategory","currencySymbol"],"f":[["case",12],[" ",17],["currencySymbol",7]],"s":[["case",12],[" ",17],["currencySymbol",7]]},{"p":["Unicode","ExtendedGeneralCategory","modifierLetter"],"f":[["case",12],[" ",17],["modifierLetter",7]],"s":[["case",12],[" ",17],["modifierLetter",7]]},{"p":["Unicode","ExtendedGeneralCategory","modifierSymbol"],"f":[["case",12],[" ",17],["modifierSymbol",7]],"s":[["case",12],[" ",17],["modifierSymbol",7]]},{"p":["Unicode","ExtendedGeneralCategory","nonspacingMark"],"f":[["case",12],[" ",17],["nonspacingMark",7]],"s":[["case",12],[" ",17],["nonspacingMark",7]]},{"p":["Unicode","ExtendedGeneralCategory","spaceSeparator"],"f":[["case",12],[" ",17],["spaceSeparator",7]],"s":[["case",12],[" ",17],["spaceSeparator",7]]},{"p":["Unicode","ExtendedGeneralCategory","dashPunctuation"],"f":[["case",12],[" ",17],["dashPunctuation",7]],"s":[["case",12],[" ",17],["dashPunctuation",7]]},{"p":["Unicode","ExtendedGeneralCategory","lowercaseLetter"],"f":[["case",12],[" ",17],["lowercaseLetter",7]],"s":[["case",12],[" ",17],["lowercaseLetter",7]]},{"p":["Unicode","ExtendedGeneralCategory","openPunctuation"],"f":[["case",12],[" ",17],["openPunctuation",7]],"s":[["case",12],[" ",17],["openPunctuation",7]]},{"p":["Unicode","ExtendedGeneralCategory","titlecaseLetter"],"f":[["case",12],[" ",17],["titlecaseLetter",7]],"s":[["case",12],[" ",17],["titlecaseLetter",7]]},{"p":["Unicode","ExtendedGeneralCategory","uppercaseLetter"],"f":[["case",12],[" ",17],["uppercaseLetter",7]],"s":[["case",12],[" ",17],["uppercaseLetter",7]]},{"p":["Unicode","ExtendedGeneralCategory","closePunctuation"],"f":[["case",12],[" ",17],["closePunctuation",7]],"s":[["case",12],[" ",17],["closePunctuation",7]]},{"p":["Unicode","ExtendedGeneralCategory","finalPunctuation"],"f":[["case",12],[" ",17],["finalPunctuation",7]],"s":[["case",12],[" ",17],["finalPunctuation",7]]},{"p":["Unicode","ExtendedGeneralCategory","otherPunctuation"],"f":[["case",12],[" ",17],["otherPunctuation",7]],"s":[["case",12],[" ",17],["otherPunctuation",7]]},{"p":["Unicode","ExtendedGeneralCategory","initialPunctuation"],"f":[["case",12],[" ",17],["initialPunctuation",7]],"s":[["case",12],[" ",17],["initialPunctuation",7]]},{"p":["Unicode","ExtendedGeneralCategory","paragraphSeparator"],"f":[["case",12],[" ",17],["paragraphSeparator",7]],"s":[["case",12],[" ",17],["paragraphSeparator",7]]},{"p":["Unicode","ExtendedGeneralCategory","connectorPunctuation"],"f":[["case",12],[" ",17],["connectorPunctuation",7]],"s":[["case",12],[" ",17],["connectorPunctuation",7]]},{"p":["Unicode","ExtendedGeneralCategory","mark"],"f":[["case",12],[" ",17],["mark",7]],"s":[["case",12],[" ",17],["mark",7]]},{"p":["Unicode","ExtendedGeneralCategory","other"],"f":[["case",12],[" ",17],["other",7]],"s":[["case",12],[" ",17],["other",7]]},{"p":["Unicode","ExtendedGeneralCategory","format"],"f":[["case",12],[" ",17],["format",7]],"s":[["case",12],[" ",17],["format",7]]},{"p":["Unicode","ExtendedGeneralCategory","letter"],"f":[["case",12],[" ",17],["letter",7]],"s":[["case",12],[" ",17],["letter",7]]},{"p":["Unicode","ExtendedGeneralCategory","number"],"f":[["case",12],[" ",17],["number",7]],"s":[["case",12],[" ",17],["number",7]]},{"p":["Unicode","ExtendedGeneralCategory","symbol"],"f":[["case",12],[" ",17],["symbol",7]],"s":[["case",12],[" ",17],["symbol",7]]},{"p":["Unicode","ExtendedGeneralCategory","control"],"f":[["case",12],[" ",17],["control",7]],"s":[["case",12],[" ",17],["control",7]]},{"p":["Unicode","ExtendedGeneralCategory","separator"],"f":[["case",12],[" ",17],["separator",7]],"s":[["case",12],[" ",17],["separator",7]]},{"p":["Unicode","ExtendedGeneralCategory","surrogate"],"f":[["case",12],[" ",17],["surrogate",7]],"s":[["case",12],[" ",17],["surrogate",7]]},{"p":["Unicode","Block","noBlock"],"f":[["case",12],[" ",17],["noBlock",7]],"s":[["case",12],[" ",17],["noBlock",7]],"d":"@missing: 0000..10FFFF; No_Block"},{"p":["Unicode","Block","basicLatin"],"f":[["case",12],[" ",17],["basicLatin",7]],"s":[["case",12],[" ",17],["basicLatin",7]],"d":"0000..007F; Basic Latin"},{"p":["Unicode","Block","boxDrawing"],"f":[["case",12],[" ",17],["boxDrawing",7]],"s":[["case",12],[" ",17],["boxDrawing",7]],"d":"2500..257F; Box Drawing"},{"p":["Unicode","Block","chorasmian"],"f":[["case",12],[" ",17],["chorasmian",7]],"s":[["case",12],[" ",17],["chorasmian",7]],"d":"10FB0..10FDF; Chorasmian"},{"p":["Unicode","Block","cjkStrokes"],"f":[["case",12],[" ",17],["cjkStrokes",7]],"s":[["case",12],[" ",17],["cjkStrokes",7]],"d":"31C0..31EF; CJK Strokes"},{"p":["Unicode","Block","devanagari"],"f":[["case",12],[" ",17],["devanagari",7]],"s":[["case",12],[" ",17],["devanagari",7]],"d":"0900..097F; Devanagari"},{"p":["Unicode","Block","divesAkuru"],"f":[["case",12],[" ",17],["divesAkuru",7]],"s":[["case",12],[" ",17],["divesAkuru",7]],"d":"11900..1195F; Dives Akuru"},{"p":["Unicode","Block","glagolitic"],"f":[["case",12],[" ",17],["glagolitic",7]],"s":[["case",12],[" ",17],["glagolitic",7]],"d":"2C00..2C5F; Glagolitic"},{"p":["Unicode","Block","hangulJamo"],"f":[["case",12],[" ",17],["hangulJamo",7]],"s":[["case",12],[" ",17],["hangulJamo",7]],"d":"1100..11FF; Hangul Jamo"},{"p":["Unicode","Block","kharoshthi"],"f":[["case",12],[" ",17],["kharoshthi",7]],"s":[["case",12],[" ",17],["kharoshthi",7]],"d":"10A00..10A5F; Kharoshthi"},{"p":["Unicode","Block","manichaean"],"f":[["case",12],[" ",17],["manichaean",7]],"s":[["case",12],[" ",17],["manichaean",7]],"d":"10AC0..10AFF; Manichaean"},{"p":["Unicode","Block","oldPersian"],"f":[["case",12],[" ",17],["oldPersian",7]],"s":[["case",12],[" ",17],["oldPersian",7]],"d":"103A0..103DF; Old Persian"},{"p":["Unicode","Block","oldSogdian"],"f":[["case",12],[" ",17],["oldSogdian",7]],"s":[["case",12],[" ",17],["oldSogdian",7]],"d":"10F00..10F2F; Old Sogdian"},{"p":["Unicode","Block","phoenician"],"f":[["case",12],[" ",17],["phoenician",7]],"s":[["case",12],[" ",17],["phoenician",7]],"d":"10900..1091F; Phoenician"},{"p":["Unicode","Block","saurashtra"],"f":[["case",12],[" ",17],["saurashtra",7]],"s":[["case",12],[" ",17],["saurashtra",7]],"d":"A880..A8DF; Saurashtra"},{"p":["Unicode","Block","warangCiti"],"f":[["case",12],[" ",17],["warangCiti",7]],"s":[["case",12],[" ",17],["warangCiti",7]],"d":"118A0..118FF; Warang Citi"},{"p":["Unicode","Block","yiRadicals"],"f":[["case",12],[" ",17],["yiRadicals",7]],"s":[["case",12],[" ",17],["yiRadicals",7]],"d":"A490..A4CF; Yi Radicals"},{"p":["Unicode","Block","cyproMinoan"],"f":[["case",12],[" ",17],["cyproMinoan",7]],"s":[["case",12],[" ",17],["cyproMinoan",7]],"d":"12F90..12FFF; Cypro-Minoan"},{"p":["Unicode","Block","dominoTiles"],"f":[["case",12],[" ",17],["dominoTiles",7]],"s":[["case",12],[" ",17],["dominoTiles",7]],"d":"1F030..1F09F; Domino Tiles"},{"p":["Unicode","Block","medefaidrin"],"f":[["case",12],[" ",17],["medefaidrin",7]],"s":[["case",12],[" ",17],["medefaidrin",7]],"d":"16E40..16E9F; Medefaidrin"},{"p":["Unicode","Block","meeteiMayek"],"f":[["case",12],[" ",17],["meeteiMayek",7]],"s":[["case",12],[" ",17],["meeteiMayek",7]],"d":"ABC0..ABFF; Meetei Mayek"},{"p":["Unicode","Block","nandinagari"],"f":[["case",12],[" ",17],["nandinagari",7]],"s":[["case",12],[" ",17],["nandinagari",7]],"d":"119A0..119FF; Nandinagari"},{"p":["Unicode","Block","numberForms"],"f":[["case",12],[" ",17],["numberForms",7]],"s":[["case",12],[" ",17],["numberForms",7]],"d":"2150..218F; Number Forms"},{"p":["Unicode","Block","pahawhHmong"],"f":[["case",12],[" ",17],["pahawhHmong",7]],"s":[["case",12],[" ",17],["pahawhHmong",7]],"d":"16B00..16B8F; Pahawh Hmong"},{"p":["Unicode","Block","soraSompeng"],"f":[["case",12],[" ",17],["soraSompeng",7]],"s":[["case",12],[" ",17],["soraSompeng",7]],"d":"110D0..110FF; Sora Sompeng"},{"p":["Unicode","Block","sylotiNagri"],"f":[["case",12],[" ",17],["sylotiNagri",7]],"s":[["case",12],[" ",17],["sylotiNagri",7]],"d":"A800..A82F; Syloti Nagri"},{"p":["Unicode","Block","yiSyllables"],"f":[["case",12],[" ",17],["yiSyllables",7]],"s":[["case",12],[" ",17],["yiSyllables",7]],"d":"A000..A48F; Yi Syllables"},{"p":["Unicode","Block","chessSymbols"],"f":[["case",12],[" ",17],["chessSymbols",7]],"s":[["case",12],[" ",17],["chessSymbols",7]],"d":"1FA00..1FA6F; Chess Symbols"},{"p":["Unicode","Block","gunjalaGondi"],"f":[["case",12],[" ",17],["gunjalaGondi",7]],"s":[["case",12],[" ",17],["gunjalaGondi",7]],"d":"11D60..11DAF; Gunjala Gondi"},{"p":["Unicode","Block","khmerSymbols"],"f":[["case",12],[" ",17],["khmerSymbols",7]],"s":[["case",12],[" ",17],["khmerSymbols",7]],"d":"19E0..19FF; Khmer Symbols"},{"p":["Unicode","Block","mahjongTiles"],"f":[["case",12],[" ",17],["mahjongTiles",7]],"s":[["case",12],[" ",17],["mahjongTiles",7]],"d":"1F000..1F02F; Mahjong Tiles"},{"p":["Unicode","Block","masaramGondi"],"f":[["case",12],[" ",17],["masaramGondi",7]],"s":[["case",12],[" ",17],["masaramGondi",7]],"d":"11D00..11D5F; Masaram Gondi"},{"p":["Unicode","Block","mendeKikakui"],"f":[["case",12],[" ",17],["mendeKikakui",7]],"s":[["case",12],[" ",17],["mendeKikakui",7]],"d":"1E800..1E8DF; Mende Kikakui"},{"p":["Unicode","Block","oldHungarian"],"f":[["case",12],[" ",17],["oldHungarian",7]],"s":[["case",12],[" ",17],["oldHungarian",7]],"d":"10C80..10CFF; Old Hungarian"},{"p":["Unicode","Block","phaistosDisc"],"f":[["case",12],[" ",17],["phaistosDisc",7]],"s":[["case",12],[" ",17],["phaistosDisc",7]],"d":"101D0..101FF; Phaistos Disc"},{"p":["Unicode","Block","playingCards"],"f":[["case",12],[" ",17],["playingCards",7]],"s":[["case",12],[" ",17],["playingCards",7]],"d":"1F0A0..1F0FF; Playing Cards"},{"p":["Unicode","Block","aegeanNumbers"],"f":[["case",12],[" ",17],["aegeanNumbers",7]],"s":[["case",12],[" ",17],["aegeanNumbers",7]],"d":"10100..1013F; Aegean Numbers"},{"p":["Unicode","Block","blockElements"],"f":[["case",12],[" ",17],["blockElements",7]],"s":[["case",12],[" ",17],["blockElements",7]],"d":"2580..259F; Block Elements"},{"p":["Unicode","Block","greekExtended"],"f":[["case",12],[" ",17],["greekExtended",7]],"s":[["case",12],[" ",17],["greekExtended",7]],"d":"1F00..1FFF; Greek Extended"},{"p":["Unicode","Block","ipaExtensions"],"f":[["case",12],[" ",17],["ipaExtensions",7]],"s":[["case",12],[" ",17],["ipaExtensions",7]],"d":"0250..02AF; IPA Extensions"},{"p":["Unicode","Block","kanaExtendedA"],"f":[["case",12],[" ",17],["kanaExtendedA",7]],"s":[["case",12],[" ",17],["kanaExtendedA",7]],"d":"1B100..1B12F; Kana Extended-A"},{"p":["Unicode","Block","kanaExtendedB"],"f":[["case",12],[" ",17],["kanaExtendedB",7]],"s":[["case",12],[" ",17],["kanaExtendedB",7]],"d":"1AFF0..1AFFF; Kana Extended-B"},{"p":["Unicode","Block","lowSurrogates"],"f":[["case",12],[" ",17],["lowSurrogates",7]],"s":[["case",12],[" ",17],["lowSurrogates",7]],"d":"DC00..DFFF; Low Surrogates"},{"p":["Unicode","Block","mayanNumerals"],"f":[["case",12],[" ",17],["mayanNumerals",7]],"s":[["case",12],[" ",17],["mayanNumerals",7]],"d":"1D2E0..1D2FF; Mayan Numerals"},{"p":["Unicode","Block","verticalForms"],"f":[["case",12],[" ",17],["verticalForms",7]],"s":[["case",12],[" ",17],["verticalForms",7]],"d":"FE10..FE1F; Vertical Forms"},{"p":["Unicode","Block","ancientSymbols"],"f":[["case",12],[" ",17],["ancientSymbols",7]],"s":[["case",12],[" ",17],["ancientSymbols",7]],"d":"10190..101CF; Ancient Symbols"},{"p":["Unicode","Block","greekAndCoptic"],"f":[["case",12],[" ",17],["greekAndCoptic",7]],"s":[["case",12],[" ",17],["greekAndCoptic",7]],"d":"0370..03FF; Greek and Coptic"},{"p":["Unicode","Block","hanifiRohingya"],"f":[["case",12],[" ",17],["hanifiRohingya",7]],"s":[["case",12],[" ",17],["hanifiRohingya",7]],"d":"10D00..10D3F; Hanifi Rohingya"},{"p":["Unicode","Block","highSurrogates"],"f":[["case",12],[" ",17],["highSurrogates",7]],"s":[["case",12],[" ",17],["highSurrogates",7]],"d":"D800..DB7F; High Surrogates"},{"p":["Unicode","Block","kanaSupplement"],"f":[["case",12],[" ",17],["kanaSupplement",7]],"s":[["case",12],[" ",17],["kanaSupplement",7]],"d":"1B000..1B0FF; Kana Supplement"},{"p":["Unicode","Block","kangxiRadicals"],"f":[["case",12],[" ",17],["kangxiRadicals",7]],"s":[["case",12],[" ",17],["kangxiRadicals",7]],"d":"2F00..2FDF; Kangxi Radicals"},{"p":["Unicode","Block","latinExtendedA"],"f":[["case",12],[" ",17],["latinExtendedA",7]],"s":[["case",12],[" ",17],["latinExtendedA",7]],"d":"0100..017F; Latin Extended-A"},{"p":["Unicode","Block","latinExtendedB"],"f":[["case",12],[" ",17],["latinExtendedB",7]],"s":[["case",12],[" ",17],["latinExtendedB",7]],"d":"0180..024F; Latin Extended-B"},{"p":["Unicode","Block","latinExtendedC"],"f":[["case",12],[" ",17],["latinExtendedC",7]],"s":[["case",12],[" ",17],["latinExtendedC",7]],"d":"2C60..2C7F; Latin Extended-C"},{"p":["Unicode","Block","latinExtendedD"],"f":[["case",12],[" ",17],["latinExtendedD",7]],"s":[["case",12],[" ",17],["latinExtendedD",7]],"d":"A720..A7FF; Latin Extended-D"},{"p":["Unicode","Block","latinExtendedE"],"f":[["case",12],[" ",17],["latinExtendedE",7]],"s":[["case",12],[" ",17],["latinExtendedE",7]],"d":"AB30..AB6F; Latin Extended-E"},{"p":["Unicode","Block","latinExtendedF"],"f":[["case",12],[" ",17],["latinExtendedF",7]],"s":[["case",12],[" ",17],["latinExtendedF",7]],"d":"10780..107BF; Latin Extended-F"},{"p":["Unicode","Block","latinExtendedG"],"f":[["case",12],[" ",17],["latinExtendedG",7]],"s":[["case",12],[" ",17],["latinExtendedG",7]],"d":"1DF00..1DFFF; Latin Extended-G"},{"p":["Unicode","Block","lisuSupplement"],"f":[["case",12],[" ",17],["lisuSupplement",7]],"s":[["case",12],[" ",17],["lisuSupplement",7]],"d":"11FB0..11FBF; Lisu Supplement"},{"p":["Unicode","Block","musicalSymbols"],"f":[["case",12],[" ",17],["musicalSymbols",7]],"s":[["case",12],[" ",17],["musicalSymbols",7]],"d":"1D100..1D1FF; Musical Symbols"},{"p":["Unicode","Block","privateUseArea"],"f":[["case",12],[" ",17],["privateUseArea",7]],"s":[["case",12],[" ",17],["privateUseArea",7]],"d":"E000..F8FF; Private Use Area"},{"p":["Unicode","Block","psalterPahlavi"],"f":[["case",12],[" ",17],["psalterPahlavi",7]],"s":[["case",12],[" ",17],["psalterPahlavi",7]],"d":"10B80..10BAF; Psalter Pahlavi"},{"p":["Unicode","Block","arabicExtendedA"],"f":[["case",12],[" ",17],["arabicExtendedA",7]],"s":[["case",12],[" ",17],["arabicExtendedA",7]],"d":"08A0..08FF; Arabic Extended-A"},{"p":["Unicode","Block","arabicExtendedB"],"f":[["case",12],[" ",17],["arabicExtendedB",7]],"s":[["case",12],[" ",17],["arabicExtendedB",7]],"d":"0870..089F; Arabic Extended-B"},{"p":["Unicode","Block","bamumSupplement"],"f":[["case",12],[" ",17],["bamumSupplement",7]],"s":[["case",12],[" ",17],["bamumSupplement",7]],"d":"16800..16A3F; Bamum Supplement"},{"p":["Unicode","Block","braillePatterns"],"f":[["case",12],[" ",17],["braillePatterns",7]],"s":[["case",12],[" ",17],["braillePatterns",7]],"d":"2800..28FF; Braille Patterns"},{"p":["Unicode","Block","controlPictures"],"f":[["case",12],[" ",17],["controlPictures",7]],"s":[["case",12],[" ",17],["controlPictures",7]],"d":"2400..243F; Control Pictures"},{"p":["Unicode","Block","currencySymbols"],"f":[["case",12],[" ",17],["currencySymbols",7]],"s":[["case",12],[" ",17],["currencySymbols",7]],"d":"20A0..20CF; Currency Symbols"},{"p":["Unicode","Block","geometricShapes"],"f":[["case",12],[" ",17],["geometricShapes",7]],"s":[["case",12],[" ",17],["geometricShapes",7]],"d":"25A0..25FF; Geometric Shapes"},{"p":["Unicode","Block","hangulSyllables"],"f":[["case",12],[" ",17],["hangulSyllables",7]],"s":[["case",12],[" ",17],["hangulSyllables",7]],"d":"AC00..D7AF; Hangul Syllables"},{"p":["Unicode","Block","imperialAramaic"],"f":[["case",12],[" ",17],["imperialAramaic",7]],"s":[["case",12],[" ",17],["imperialAramaic",7]],"d":"10840..1085F; Imperial Aramaic"},{"p":["Unicode","Block","meroiticCursive"],"f":[["case",12],[" ",17],["meroiticCursive",7]],"s":[["case",12],[" ",17],["meroiticCursive",7]],"d":"109A0..109FF; Meroitic Cursive"},{"p":["Unicode","Block","oldNorthArabian"],"f":[["case",12],[" ",17],["oldNorthArabian",7]],"s":[["case",12],[" ",17],["oldNorthArabian",7]],"d":"10A80..10A9F; Old North Arabian"},{"p":["Unicode","Block","oldSouthArabian"],"f":[["case",12],[" ",17],["oldSouthArabian",7]],"s":[["case",12],[" ",17],["oldSouthArabian",7]],"d":"10A60..10A7F; Old South Arabian"},{"p":["Unicode","Block","tamilSupplement"],"f":[["case",12],[" ",17],["tamilSupplement",7]],"s":[["case",12],[" ",17],["tamilSupplement",7]],"d":"11FC0..11FFF; Tamil Supplement"},{"p":["Unicode","Block","vedicExtensions"],"f":[["case",12],[" ",17],["vedicExtensions",7]],"s":[["case",12],[" ",17],["vedicExtensions",7]],"d":"1CD0..1CFF; Vedic Extensions"},{"p":["Unicode","Block","zanabazarSquare"],"f":[["case",12],[" ",17],["zanabazarSquare",7]],"s":[["case",12],[" ",17],["zanabazarSquare",7]],"d":"11A00..11A4F; Zanabazar Square"},{"p":["Unicode","Block","arabicSupplement"],"f":[["case",12],[" ",17],["arabicSupplement",7]],"s":[["case",12],[" ",17],["arabicSupplement",7]],"d":"0750..077F; Arabic Supplement"},{"p":["Unicode","Block","bopomofoExtended"],"f":[["case",12],[" ",17],["bopomofoExtended",7]],"s":[["case",12],[" ",17],["bopomofoExtended",7]],"d":"31A0..31BF; Bopomofo Extended"},{"p":["Unicode","Block","cjkCompatibility"],"f":[["case",12],[" ",17],["cjkCompatibility",7]],"s":[["case",12],[" ",17],["cjkCompatibility",7]],"d":"3300..33FF; CJK Compatibility"},{"p":["Unicode","Block","cypriotSyllabary"],"f":[["case",12],[" ",17],["cypriotSyllabary",7]],"s":[["case",12],[" ",17],["cypriotSyllabary",7]],"d":"10800..1083F; Cypriot Syllabary"},{"p":["Unicode","Block","ethiopicExtended"],"f":[["case",12],[" ",17],["ethiopicExtended",7]],"s":[["case",12],[" ",17],["ethiopicExtended",7]],"d":"2D80..2DDF; Ethiopic Extended"},{"p":["Unicode","Block","georgianExtended"],"f":[["case",12],[" ",17],["georgianExtended",7]],"s":[["case",12],[" ",17],["georgianExtended",7]],"d":"1C90..1CBF; Georgian Extended"},{"p":["Unicode","Block","latin1Supplement"],"f":[["case",12],[" ",17],["latin1Supplement",7]],"s":[["case",12],[" ",17],["latin1Supplement",7]],"d":"0080..00FF; Latin-1 Supplement"},{"p":["Unicode","Block","linearBIdeograms"],"f":[["case",12],[" ",17],["linearBIdeograms",7]],"s":[["case",12],[" ",17],["linearBIdeograms",7]],"d":"10080..100FF; Linear B Ideograms"},{"p":["Unicode","Block","linearBSyllabary"],"f":[["case",12],[" ",17],["linearBSyllabary",7]],"s":[["case",12],[" ",17],["linearBSyllabary",7]],"d":"10000..1007F; Linear B Syllabary"},{"p":["Unicode","Block","myanmarExtendedA"],"f":[["case",12],[" ",17],["myanmarExtendedA",7]],"s":[["case",12],[" ",17],["myanmarExtendedA",7]],"d":"AA60..AA7F; Myanmar Extended-A"},{"p":["Unicode","Block","myanmarExtendedB"],"f":[["case",12],[" ",17],["myanmarExtendedB",7]],"s":[["case",12],[" ",17],["myanmarExtendedB",7]],"d":"A9E0..A9FF; Myanmar Extended-B"},{"p":["Unicode","Block","syriacSupplement"],"f":[["case",12],[" ",17],["syriacSupplement",7]],"s":[["case",12],[" ",17],["syriacSupplement",7]],"d":"0860..086F; Syriac Supplement"},{"p":["Unicode","Block","tangutComponents"],"f":[["case",12],[" ",17],["tangutComponents",7]],"s":[["case",12],[" ",17],["tangutComponents",7]],"d":"18800..18AFF; Tangut Components"},{"p":["Unicode","Block","tangutSupplement"],"f":[["case",12],[" ",17],["tangutSupplement",7]],"s":[["case",12],[" ",17],["tangutSupplement",7]],"d":"18D00..18D7F; Tangut Supplement"},{"p":["Unicode","Block","alchemicalSymbols"],"f":[["case",12],[" ",17],["alchemicalSymbols",7]],"s":[["case",12],[" ",17],["alchemicalSymbols",7]],"d":"1F700..1F77F; Alchemical Symbols"},{"p":["Unicode","Block","caucasianAlbanian"],"f":[["case",12],[" ",17],["caucasianAlbanian",7]],"s":[["case",12],[" ",17],["caucasianAlbanian",7]],"d":"10530..1056F; Caucasian Albanian"},{"p":["Unicode","Block","cyrillicExtendedA"],"f":[["case",12],[" ",17],["cyrillicExtendedA",7]],"s":[["case",12],[" ",17],["cyrillicExtendedA",7]],"d":"2DE0..2DFF; Cyrillic Extended-A"},{"p":["Unicode","Block","cyrillicExtendedB"],"f":[["case",12],[" ",17],["cyrillicExtendedB",7]],"s":[["case",12],[" ",17],["cyrillicExtendedB",7]],"d":"A640..A69F; Cyrillic Extended-B"},{"p":["Unicode","Block","cyrillicExtendedC"],"f":[["case",12],[" ",17],["cyrillicExtendedC",7]],"s":[["case",12],[" ",17],["cyrillicExtendedC",7]],"d":"1C80..1C8F; Cyrillic Extended-C"},{"p":["Unicode","Block","ethiopicExtendedA"],"f":[["case",12],[" ",17],["ethiopicExtendedA",7]],"s":[["case",12],[" ",17],["ethiopicExtendedA",7]],"d":"AB00..AB2F; Ethiopic Extended-A"},{"p":["Unicode","Block","ethiopicExtendedB"],"f":[["case",12],[" ",17],["ethiopicExtendedB",7]],"s":[["case",12],[" ",17],["ethiopicExtendedB",7]],"d":"1E7E0..1E7FF; Ethiopic Extended-B"},{"p":["Unicode","Block","indicSiyaqNumbers"],"f":[["case",12],[" ",17],["indicSiyaqNumbers",7]],"s":[["case",12],[" ",17],["indicSiyaqNumbers",7]],"d":"1EC70..1ECBF; Indic Siyaq Numbers"},{"p":["Unicode","Block","khitanSmallScript"],"f":[["case",12],[" ",17],["khitanSmallScript",7]],"s":[["case",12],[" ",17],["khitanSmallScript",7]],"d":"18B00..18CFF; Khitan Small Script"},{"p":["Unicode","Block","letterLikeSymbols"],"f":[["case",12],[" ",17],["letterLikeSymbols",7]],"s":[["case",12],[" ",17],["letterLikeSymbols",7]],"d":"2100..214F; Letterlike Symbols"},{"p":["Unicode","Block","smallFormVariants"],"f":[["case",12],[" ",17],["smallFormVariants",7]],"s":[["case",12],[" ",17],["smallFormVariants",7]],"d":"FE50..FE6F; Small Form Variants"},{"p":["Unicode","Block","suttonSignwriting"],"f":[["case",12],[" ",17],["suttonSignwriting",7]],"s":[["case",12],[" ",17],["suttonSignwriting",7]],"d":"1D800..1DAAF; Sutton SignWriting"},{"p":["Unicode","Block","cherokeeSupplement"],"f":[["case",12],[" ",17],["cherokeeSupplement",7]],"s":[["case",12],[" ",17],["cherokeeSupplement",7]],"d":"AB70..ABBF; Cherokee Supplement"},{"p":["Unicode","Block","combiningHalfMarks"],"f":[["case",12],[" ",17],["combiningHalfMarks",7]],"s":[["case",12],[" ",17],["combiningHalfMarks",7]],"d":"FE20..FE2F; Combining Half Marks"},{"p":["Unicode","Block","copticEpactNumbers"],"f":[["case",12],[" ",17],["copticEpactNumbers",7]],"s":[["case",12],[" ",17],["copticEpactNumbers",7]],"d":"102E0..102FF; Coptic Epact Numbers"},{"p":["Unicode","Block","cyrillicSupplement"],"f":[["case",12],[" ",17],["cyrillicSupplement",7]],"s":[["case",12],[" ",17],["cyrillicSupplement",7]],"d":"0500..052F; Cyrillic Supplement"},{"p":["Unicode","Block","devanagariExtended"],"f":[["case",12],[" ",17],["devanagariExtended",7]],"s":[["case",12],[" ",17],["devanagariExtended",7]],"d":"A8E0..A8FF; Devanagari Extended"},{"p":["Unicode","Block","ethiopicSupplement"],"f":[["case",12],[" ",17],["ethiopicSupplement",7]],"s":[["case",12],[" ",17],["ethiopicSupplement",7]],"d":"1380..139F; Ethiopic Supplement"},{"p":["Unicode","Block","generalPunctuation"],"f":[["case",12],[" ",17],["generalPunctuation",7]],"s":[["case",12],[" ",17],["generalPunctuation",7]],"d":"2000..206F; General Punctuation"},{"p":["Unicode","Block","georgianSupplement"],"f":[["case",12],[" ",17],["georgianSupplement",7]],"s":[["case",12],[" ",17],["georgianSupplement",7]],"d":"2D00..2D2F; Georgian Supplement"},{"p":["Unicode","Block","ornamentalDingbats"],"f":[["case",12],[" ",17],["ornamentalDingbats",7]],"s":[["case",12],[" ",17],["ornamentalDingbats",7]],"d":"1F650..1F67F; Ornamental Dingbats"},{"p":["Unicode","Block","phoneticExtensions"],"f":[["case",12],[" ",17],["phoneticExtensions",7]],"s":[["case",12],[" ",17],["phoneticExtensions",7]],"d":"1D00..1D7F; Phonetic Extensions"},{"p":["Unicode","Block","rumiNumeralSymbols"],"f":[["case",12],[" ",17],["rumiNumeralSymbols",7]],"s":[["case",12],[" ",17],["rumiNumeralSymbols",7]],"d":"10E60..10E7F; Rumi Numeral Symbols"},{"p":["Unicode","Block","smallKanaExtension"],"f":[["case",12],[" ",17],["smallKanaExtension",7]],"s":[["case",12],[" ",17],["smallKanaExtension",7]],"d":"1B130..1B16F; Small Kana Extension"},{"p":["Unicode","Block","taiXuanJingSymbols"],"f":[["case",12],[" ",17],["taiXuanJingSymbols",7]],"s":[["case",12],[" ",17],["taiXuanJingSymbols",7]],"d":"1D300..1D35F; Tai Xuan Jing Symbols"},{"p":["Unicode","Block","variationSelectors"],"f":[["case",12],[" ",17],["variationSelectors",7]],"s":[["case",12],[" ",17],["variationSelectors",7]],"d":"FE00..FE0F; Variation Selectors"},{"p":["Unicode","Block","ancientGreekNumbers"],"f":[["case",12],[" ",17],["ancientGreekNumbers",7]],"s":[["case",12],[" ",17],["ancientGreekNumbers",7]],"d":"10140..1018F; Ancient Greek Numbers"},{"p":["Unicode","Block","countingRodNumerals"],"f":[["case",12],[" ",17],["countingRodNumerals",7]],"s":[["case",12],[" ",17],["countingRodNumerals",7]],"d":"1D360..1D37F; Counting Rod Numerals"},{"p":["Unicode","Block","egyptianHieroglyphs"],"f":[["case",12],[" ",17],["egyptianHieroglyphs",7]],"s":[["case",12],[" ",17],["egyptianHieroglyphs",7]],"d":"13000..1342F; Egyptian Hieroglyphs"},{"p":["Unicode","Block","hangulJamoExtendedA"],"f":[["case",12],[" ",17],["hangulJamoExtendedA",7]],"s":[["case",12],[" ",17],["hangulJamoExtendedA",7]],"d":"A960..A97F; Hangul Jamo Extended-A"},{"p":["Unicode","Block","hangulJamoExtendedB"],"f":[["case",12],[" ",17],["hangulJamoExtendedB",7]],"s":[["case",12],[" ",17],["hangulJamoExtendedB",7]],"d":"D7B0..D7FF; Hangul Jamo Extended-B"},{"p":["Unicode","Block","meroiticHieroglyphs"],"f":[["case",12],[" ",17],["meroiticHieroglyphs",7]],"s":[["case",12],[" ",17],["meroiticHieroglyphs",7]],"d":"10980..1099F; Meroitic Hieroglyphs"},{"p":["Unicode","Block","modifierToneLetters"],"f":[["case",12],[" ",17],["modifierToneLetters",7]],"s":[["case",12],[" ",17],["modifierToneLetters",7]],"d":"A700..A71F; Modifier Tone Letters"},{"p":["Unicode","Block","mongolianSupplement"],"f":[["case",12],[" ",17],["mongolianSupplement",7]],"s":[["case",12],[" ",17],["mongolianSupplement",7]],"d":"11660..1167F; Mongolian Supplement"},{"p":["Unicode","Block","ottomanSiyaqNumbers"],"f":[["case",12],[" ",17],["ottomanSiyaqNumbers",7]],"s":[["case",12],[" ",17],["ottomanSiyaqNumbers",7]],"d":"1ED00..1ED4F; Ottoman Siyaq Numbers"},{"p":["Unicode","Block","sundaneseSupplement"],"f":[["case",12],[" ",17],["sundaneseSupplement",7]],"s":[["case",12],[" ",17],["sundaneseSupplement",7]],"d":"1CC0..1CCF; Sundanese Supplement"},{"p":["Unicode","Block","supplementalArrowsA"],"f":[["case",12],[" ",17],["supplementalArrowsA",7]],"s":[["case",12],[" ",17],["supplementalArrowsA",7]],"d":"27F0..27FF; Supplemental Arrows-A"},{"p":["Unicode","Block","supplementalArrowsB"],"f":[["case",12],[" ",17],["supplementalArrowsB",7]],"s":[["case",12],[" ",17],["supplementalArrowsB",7]],"d":"2900..297F; Supplemental Arrows-B"},{"p":["Unicode","Block","supplementalArrowsC"],"f":[["case",12],[" ",17],["supplementalArrowsC",7]],"s":[["case",12],[" ",17],["supplementalArrowsC",7]],"d":"1F800..1F8FF; Supplemental Arrows-C"},{"p":["Unicode","Block","anatolianHieroglyphs"],"f":[["case",12],[" ",17],["anatolianHieroglyphs",7]],"s":[["case",12],[" ",17],["anatolianHieroglyphs",7]],"d":"14400..1467F; Anatolian Hieroglyphs"},{"p":["Unicode","Block","cjkUnifiedIdeographs"],"f":[["case",12],[" ",17],["cjkUnifiedIdeographs",7]],"s":[["case",12],[" ",17],["cjkUnifiedIdeographs",7]],"d":"4E00..9FFF; CJK Unified Ideographs"},{"p":["Unicode","Block","glagoliticSupplement"],"f":[["case",12],[" ",17],["glagoliticSupplement",7]],"s":[["case",12],[" ",17],["glagoliticSupplement",7]],"d":"1E000..1E02F; Glagolitic Supplement"},{"p":["Unicode","Block","inscriptionalPahlavi"],"f":[["case",12],[" ",17],["inscriptionalPahlavi",7]],"s":[["case",12],[" ",17],["inscriptionalPahlavi",7]],"d":"10B60..10B7F; Inscriptional Pahlavi"},{"p":["Unicode","Block","miscellaneousSymbols"],"f":[["case",12],[" ",17],["miscellaneousSymbols",7]],"s":[["case",12],[" ",17],["miscellaneousSymbols",7]],"d":"2600..26FF; Miscellaneous Symbols"},{"p":["Unicode","Block","nyiakengPuachueHmong"],"f":[["case",12],[" ",17],["nyiakengPuachueHmong",7]],"s":[["case",12],[" ",17],["nyiakengPuachueHmong",7]],"d":"1E100..1E14F; Nyiakeng Puachue Hmong"},{"p":["Unicode","Block","cjkRadicalsSupplement"],"f":[["case",12],[" ",17],["cjkRadicalsSupplement",7]],"s":[["case",12],[" ",17],["cjkRadicalsSupplement",7]],"d":"2E80..2EFF; CJK Radicals Supplement"},{"p":["Unicode","Block","cjkcompatibilityForms"],"f":[["case",12],[" ",17],["cjkcompatibilityForms",7]],"s":[["case",12],[" ",17],["cjkcompatibilityForms",7]],"d":"FE30..FE4F; CJK Compatibility Forms"},{"p":["Unicode","Block","enclosedAlphanumerics"],"f":[["case",12],[" ",17],["enclosedAlphanumerics",7]],"s":[["case",12],[" ",17],["enclosedAlphanumerics",7]],"d":"2460..24FF; Enclosed Alphanumerics"},{"p":["Unicode","Block","inscriptionalParthian"],"f":[["case",12],[" ",17],["inscriptionalParthian",7]],"s":[["case",12],[" ",17],["inscriptionalParthian",7]],"d":"10B40..10B5F; Inscriptional Parthian"},{"p":["Unicode","Block","mathematicalOperators"],"f":[["case",12],[" ",17],["mathematicalOperators",7]],"s":[["case",12],[" ",17],["mathematicalOperators",7]],"d":"2200..22FF; Mathematical Operators"},{"p":["Unicode","Block","meeteiMayekExtensions"],"f":[["case",12],[" ",17],["meeteiMayekExtensions",7]],"s":[["case",12],[" ",17],["meeteiMayekExtensions",7]],"d":"AAE0..AAFF; Meetei Mayek Extensions"},{"p":["Unicode","Block","sinhalaArchaicNumbers"],"f":[["case",12],[" ",17],["sinhalaArchaicNumbers",7]],"s":[["case",12],[" ",17],["sinhalaArchaicNumbers",7]],"d":"111E0..111FF; Sinhala Archaic Numbers"},{"p":["Unicode","Block","yijingHexagramSymbols"],"f":[["case",12],[" ",17],["yijingHexagramSymbols",7]],"s":[["case",12],[" ",17],["yijingHexagramSymbols",7]],"d":"4DC0..4DFF; Yijing Hexagram Symbols"},{"p":["Unicode","Block","commonIndicNumberForms"],"f":[["case",12],[" ",17],["commonIndicNumberForms",7]],"s":[["case",12],[" ",17],["commonIndicNumberForms",7]],"d":"A830..A83F; Common Indic Number Forms"},{"p":["Unicode","Block","earlyDynasticCuneiform"],"f":[["case",12],[" ",17],["earlyDynasticCuneiform",7]],"s":[["case",12],[" ",17],["earlyDynasticCuneiform",7]],"d":"12480..1254F; Early Dynastic Cuneiform"},{"p":["Unicode","Block","miscellaneousTechnical"],"f":[["case",12],[" ",17],["miscellaneousTechnical",7]],"s":[["case",12],[" ",17],["miscellaneousTechnical",7]],"d":"2300..23FF; Miscellaneous Technical"},{"p":["Unicode","Block","spacingModifierLetters"],"f":[["case",12],[" ",17],["spacingModifierLetters",7]],"s":[["case",12],[" ",17],["spacingModifierLetters",7]],"d":"02B0..02FF; Spacing Modifier Letters"},{"p":["Unicode","Block","transportAndMapSymbols"],"f":[["case",12],[" ",17],["transportAndMapSymbols",7]],"s":[["case",12],[" ",17],["transportAndMapSymbols",7]],"d":"1F680..1F6FF; Transport and Map Symbols"},{"p":["Unicode","Block","byzantineMusicalSymbols"],"f":[["case",12],[" ",17],["byzantineMusicalSymbols",7]],"s":[["case",12],[" ",17],["byzantineMusicalSymbols",7]],"d":"1D000..1D0FF; Byzantine Musical Symbols"},{"p":["Unicode","Block","geometricShapesExtended"],"f":[["case",12],[" ",17],["geometricShapesExtended",7]],"s":[["case",12],[" ",17],["geometricShapesExtended",7]],"d":"1F780..1F7FF; Geometric Shapes Extended"},{"p":["Unicode","Block","hangulCompatibilityJamo"],"f":[["case",12],[" ",17],["hangulCompatibilityJamo",7]],"s":[["case",12],[" ",17],["hangulCompatibilityJamo",7]],"d":"3130..318F; Hangul Compatibility Jamo"},{"p":["Unicode","Block","latinExtendedAdditional"],"f":[["case",12],[" ",17],["latinExtendedAdditional",7]],"s":[["case",12],[" ",17],["latinExtendedAdditional",7]],"d":"1E00..1EFF; Latin Extended Additional"},{"p":["Unicode","Block","shorthandFormatControls"],"f":[["case",12],[" ",17],["shorthandFormatControls",7]],"s":[["case",12],[" ",17],["shorthandFormatControls",7]],"d":"1BCA0..1BCAF; Shorthand Format Controls"},{"p":["Unicode","Block","supplementalPunctuation"],"f":[["case",12],[" ",17],["supplementalPunctuation",7]],"s":[["case",12],[" ",17],["supplementalPunctuation",7]],"d":"2E00..2E7F; Supplemental Punctuation"},{"p":["Unicode","Block","znamennyMusicalNotation"],"f":[["case",12],[" ",17],["znamennyMusicalNotation",7]],"s":[["case",12],[" ",17],["znamennyMusicalNotation",7]],"d":"1CF00..1CFCF; Znamenny Musical Notation"},{"p":["Unicode","Block","arabicPresentationFormsA"],"f":[["case",12],[" ",17],["arabicPresentationFormsA",7]],"s":[["case",12],[" ",17],["arabicPresentationFormsA",7]],"d":"FB50..FDFF; Arabic Presentation Forms-A"},{"p":["Unicode","Block","arabicPresentationFormsB"],"f":[["case",12],[" ",17],["arabicPresentationFormsB",7]],"s":[["case",12],[" ",17],["arabicPresentationFormsB",7]],"d":"FE70..FEFF; Arabic Presentation Forms-B"},{"p":["Unicode","Block","cjkSymbolsAndPunctuation"],"f":[["case",12],[" ",17],["cjkSymbolsAndPunctuation",7]],"s":[["case",12],[" ",17],["cjkSymbolsAndPunctuation",7]],"d":"3000..303F; CJK Symbols and Punctuation"},{"p":["Unicode","Block","highPrivateUseSurrogates"],"f":[["case",12],[" ",17],["highPrivateUseSurrogates",7]],"s":[["case",12],[" ",17],["highPrivateUseSurrogates",7]],"d":"DB80..DBFF; High Private Use Surrogates"},{"p":["Unicode","Block","combiningDiacriticalMarks"],"f":[["case",12],[" ",17],["combiningDiacriticalMarks",7]],"s":[["case",12],[" ",17],["combiningDiacriticalMarks",7]],"d":"0300..036F; Combining Diacritical Marks"},{"p":["Unicode","Block","superscriptsAndSubscripts"],"f":[["case",12],[" ",17],["superscriptsAndSubscripts",7]],"s":[["case",12],[" ",17],["superscriptsAndSubscripts",7]],"d":"2070..209F; Superscripts and Subscripts"},{"p":["Unicode","Block","symbolsForLegacyComputing"],"f":[["case",12],[" ",17],["symbolsForLegacyComputing",7]],"s":[["case",12],[" ",17],["symbolsForLegacyComputing",7]],"d":"1FB00..1FBFF; Symbols for Legacy Computing"},{"p":["Unicode","Block","cjkCompatibilityIdeographs"],"f":[["case",12],[" ",17],["cjkCompatibilityIdeographs",7]],"s":[["case",12],[" ",17],["cjkCompatibilityIdeographs",7]],"d":"F900..FAFF; CJK Compatibility Ideographs"},{"p":["Unicode","Block","halfwidthAndFullwidthForms"],"f":[["case",12],[" ",17],["halfwidthAndFullwidthForms",7]],"s":[["case",12],[" ",17],["halfwidthAndFullwidthForms",7]],"d":"FF00..FFEF; Halfwidth and Fullwidth Forms"},{"p":["Unicode","Block","katakanaPhoneticExtensions"],"f":[["case",12],[" ",17],["katakanaPhoneticExtensions",7]],"s":[["case",12],[" ",17],["katakanaPhoneticExtensions",7]],"d":"31F0..31FF; Katakana Phonetic Extensions"},{"p":["Unicode","Block","alphabeticPresentationForms"],"f":[["case",12],[" ",17],["alphabeticPresentationForms",7]],"s":[["case",12],[" ",17],["alphabeticPresentationForms",7]],"d":"FB00..FB4F; Alphabetic Presentation Forms"},{"p":["Unicode","Block","ancientGreekMusicalNotation"],"f":[["case",12],[" ",17],["ancientGreekMusicalNotation",7]],"s":[["case",12],[" ",17],["ancientGreekMusicalNotation",7]],"d":"1D200..1D24F; Ancient Greek Musical Notation"},{"p":["Unicode","Block","enclosedCJKLettersAndMonths"],"f":[["case",12],[" ",17],["enclosedCJKLettersAndMonths",7]],"s":[["case",12],[" ",17],["enclosedCJKLettersAndMonths",7]],"d":"3200..32FF; Enclosed CJK Letters and Months"},{"p":["Unicode","Block","opticalCharacterRecognition"],"f":[["case",12],[" ",17],["opticalCharacterRecognition",7]],"s":[["case",12],[" ",17],["opticalCharacterRecognition",7]],"d":"2440..245F; Optical Character Recognition"},{"p":["Unicode","Block","phoneticExtensionsSupplement"],"f":[["case",12],[" ",17],["phoneticExtensionsSupplement",7]],"s":[["case",12],[" ",17],["phoneticExtensionsSupplement",7]],"d":"1D80..1DBF; Phonetic Extensions Supplement"},{"p":["Unicode","Block","supplementaryPrivateUseAreaA"],"f":[["case",12],[" ",17],["supplementaryPrivateUseAreaA",7]],"s":[["case",12],[" ",17],["supplementaryPrivateUseAreaA",7]],"d":"F0000..FFFFF; Supplementary Private Use Area-A"},{"p":["Unicode","Block","supplementaryPrivateUseAreaB"],"f":[["case",12],[" ",17],["supplementaryPrivateUseAreaB",7]],"s":[["case",12],[" ",17],["supplementaryPrivateUseAreaB",7]],"d":"100000..10FFFF; Supplementary Private Use Area-B"},{"p":["Unicode","Block","variationSelectorsSupplement"],"f":[["case",12],[" ",17],["variationSelectorsSupplement",7]],"s":[["case",12],[" ",17],["variationSelectorsSupplement",7]],"d":"E0100..E01EF; Variation Selectors Supplement"},{"p":["Unicode","Block","enclosedIdeographicSupplement"],"f":[["case",12],[" ",17],["enclosedIdeographicSupplement",7]],"s":[["case",12],[" ",17],["enclosedIdeographicSupplement",7]],"d":"1F200..1F2FF; Enclosed Ideographic Supplement"},{"p":["Unicode","Block","miscellaneousSymbolsAndArrows"],"f":[["case",12],[" ",17],["miscellaneousSymbolsAndArrows",7]],"s":[["case",12],[" ",17],["miscellaneousSymbolsAndArrows",7]],"d":"2B00..2BFF; Miscellaneous Symbols and Arrows"},{"p":["Unicode","Block","cjkUnifiedIdeographsExtensionA"],"f":[["case",12],[" ",17],["cjkUnifiedIdeographsExtensionA",7]],"s":[["case",12],[" ",17],["cjkUnifiedIdeographsExtensionA",7]],"d":"3400..4DBF; CJK Unified Ideographs Extension A"},{"p":["Unicode","Block","cjkUnifiedIdeographsExtensionB"],"f":[["case",12],[" ",17],["cjkUnifiedIdeographsExtensionB",7]],"s":[["case",12],[" ",17],["cjkUnifiedIdeographsExtensionB",7]],"d":"20000..2A6DF; CJK Unified Ideographs Extension B"},{"p":["Unicode","Block","cjkUnifiedIdeographsExtensionC"],"f":[["case",12],[" ",17],["cjkUnifiedIdeographsExtensionC",7]],"s":[["case",12],[" ",17],["cjkUnifiedIdeographsExtensionC",7]],"d":"2A700..2B73F; CJK Unified Ideographs Extension C"},{"p":["Unicode","Block","cjkUnifiedIdeographsExtensionD"],"f":[["case",12],[" ",17],["cjkUnifiedIdeographsExtensionD",7]],"s":[["case",12],[" ",17],["cjkUnifiedIdeographsExtensionD",7]],"d":"2B740..2B81F; CJK Unified Ideographs Extension D"},{"p":["Unicode","Block","cjkUnifiedIdeographsExtensionE"],"f":[["case",12],[" ",17],["cjkUnifiedIdeographsExtensionE",7]],"s":[["case",12],[" ",17],["cjkUnifiedIdeographsExtensionE",7]],"d":"2B820..2CEAF; CJK Unified Ideographs Extension E"},{"p":["Unicode","Block","cjkUnifiedIdeographsExtensionF"],"f":[["case",12],[" ",17],["cjkUnifiedIdeographsExtensionF",7]],"s":[["case",12],[" ",17],["cjkUnifiedIdeographsExtensionF",7]],"d":"2CEB0..2EBEF; CJK Unified Ideographs Extension F"},{"p":["Unicode","Block","cjkUnifiedIdeographsExtensionG"],"f":[["case",12],[" ",17],["cjkUnifiedIdeographsExtensionG",7]],"s":[["case",12],[" ",17],["cjkUnifiedIdeographsExtensionG",7]],"d":"30000..3134F; CJK Unified Ideographs Extension G"},{"p":["Unicode","Block","cuneiformNumbersAndPunctuation"],"f":[["case",12],[" ",17],["cuneiformNumbersAndPunctuation",7]],"s":[["case",12],[" ",17],["cuneiformNumbersAndPunctuation",7]],"d":"12400..1247F; Cuneiform Numbers and Punctuation"},{"p":["Unicode","Block","enclosedAlphanumericSupplement"],"f":[["case",12],[" ",17],["enclosedAlphanumericSupplement",7]],"s":[["case",12],[" ",17],["enclosedAlphanumericSupplement",7]],"d":"1F100..1F1FF; Enclosed Alphanumeric Supplement"},{"p":["Unicode","Block","symbolsAndPictographsExtendedA"],"f":[["case",12],[" ",17],["symbolsAndPictographsExtendedA",7]],"s":[["case",12],[" ",17],["symbolsAndPictographsExtendedA",7]],"d":"1FA70..1FAFF; Symbols and Pictographs Extended-A"},{"p":["Unicode","Block","mathematicalAlphanumericSymbols"],"f":[["case",12],[" ",17],["mathematicalAlphanumericSymbols",7]],"s":[["case",12],[" ",17],["mathematicalAlphanumericSymbols",7]],"d":"1D400..1D7FF; Mathematical Alphanumeric Symbols"},{"p":["Unicode","Block","egyptianHieroglyphFormatControls"],"f":[["case",12],[" ",17],["egyptianHieroglyphFormatControls",7]],"s":[["case",12],[" ",17],["egyptianHieroglyphFormatControls",7]],"d":"13430..1343F; Egyptian Hieroglyph Format Controls"},{"p":["Unicode","Block","ideographicDescriptionCharacters"],"f":[["case",12],[" ",17],["ideographicDescriptionCharacters",7]],"s":[["case",12],[" ",17],["ideographicDescriptionCharacters",7]],"d":"2FF0..2FFF; Ideographic Description Characters"},{"p":["Unicode","Block","ideographicSymbolsAndPunctuation"],"f":[["case",12],[" ",17],["ideographicSymbolsAndPunctuation",7]],"s":[["case",12],[" ",17],["ideographicSymbolsAndPunctuation",7]],"d":"16FE0..16FFF; Ideographic Symbols and Punctuation"},{"p":["Unicode","Block","combiningDiacriticalMarksExtended"],"f":[["case",12],[" ",17],["combiningDiacriticalMarksExtended",7]],"s":[["case",12],[" ",17],["combiningDiacriticalMarksExtended",7]],"d":"1AB0..1AFF; Combining Diacritical Marks Extended"},{"p":["Unicode","Block","miscellaneousMathematicalSymbolsA"],"f":[["case",12],[" ",17],["miscellaneousMathematicalSymbolsA",7]],"s":[["case",12],[" ",17],["miscellaneousMathematicalSymbolsA",7]],"d":"27C0..27EF; Miscellaneous Mathematical Symbols-A"},{"p":["Unicode","Block","miscellaneousMathematicalSymbolsB"],"f":[["case",12],[" ",17],["miscellaneousMathematicalSymbolsB",7]],"s":[["case",12],[" ",17],["miscellaneousMathematicalSymbolsB",7]],"d":"2980..29FF; Miscellaneous Mathematical Symbols-B"},{"p":["Unicode","Block","supplementalMathematicalOperators"],"f":[["case",12],[" ",17],["supplementalMathematicalOperators",7]],"s":[["case",12],[" ",17],["supplementalMathematicalOperators",7]],"d":"2A00..2AFF; Supplemental Mathematical Operators"},{"p":["Unicode","Block","supplementalSymbolsAndPictographs"],"f":[["case",12],[" ",17],["supplementalSymbolsAndPictographs",7]],"s":[["case",12],[" ",17],["supplementalSymbolsAndPictographs",7]],"d":"1F900..1F9FF; Supplemental Symbols and Pictographs"},{"p":["Unicode","Block","miscellaneousSymbolsandPictographs"],"f":[["case",12],[" ",17],["miscellaneousSymbolsandPictographs",7]],"s":[["case",12],[" ",17],["miscellaneousSymbolsandPictographs",7]],"d":"1F300..1F5FF; Miscellaneous Symbols and Pictographs"},{"p":["Unicode","Block","unifiedCanadianAboriginalSyllabics"],"f":[["case",12],[" ",17],["unifiedCanadianAboriginalSyllabics",7]],"s":[["case",12],[" ",17],["unifiedCanadianAboriginalSyllabics",7]],"d":"1400..167F; Unified Canadian Aboriginal Syllabics"},{"p":["Unicode","Block","arabicMathematicalAlphabeticSymbols"],"f":[["case",12],[" ",17],["arabicMathematicalAlphabeticSymbols",7]],"s":[["case",12],[" ",17],["arabicMathematicalAlphabeticSymbols",7]],"d":"1EE00..1EEFF; Arabic Mathematical Alphabetic Symbols"},{"p":["Unicode","Block","combiningDiacriticalMarksForSymbols"],"f":[["case",12],[" ",17],["combiningDiacriticalMarksForSymbols",7]],"s":[["case",12],[" ",17],["combiningDiacriticalMarksForSymbols",7]],"d":"20D0..20FF; Combining Diacritical Marks for Symbols"},{"p":["Unicode","Block","combiningDiacriticalMarksSupplement"],"f":[["case",12],[" ",17],["combiningDiacriticalMarksSupplement",7]],"s":[["case",12],[" ",17],["combiningDiacriticalMarksSupplement",7]],"d":"1DC0..1DFF; Combining Diacritical Marks Supplement"},{"p":["Unicode","Block","cjkCompatibilityIdeographsSupplement"],"f":[["case",12],[" ",17],["cjkCompatibilityIdeographsSupplement",7]],"s":[["case",12],[" ",17],["cjkCompatibilityIdeographsSupplement",7]],"d":"2F800..2FA1F; CJK Compatibility Ideographs Supplement"},{"p":["Unicode","Block","lao"],"f":[["case",12],[" ",17],["lao",7]],"s":[["case",12],[" ",17],["lao",7]],"d":"0E80..0EFF; Lao"},{"p":["Unicode","Block","mro"],"f":[["case",12],[" ",17],["mro",7]],"s":[["case",12],[" ",17],["mro",7]],"d":"16A40..16A6F; Mro"},{"p":["Unicode","Block","nko"],"f":[["case",12],[" ",17],["nko",7]],"s":[["case",12],[" ",17],["nko",7]],"d":"07C0..07FF; NKo"},{"p":["Unicode","Block","vai"],"f":[["case",12],[" ",17],["vai",7]],"s":[["case",12],[" ",17],["vai",7]],"d":"A500..A63F; Vai"},{"p":["Unicode","Block","unifiedCanadianAboriginalSyllabicsExtended"],"f":[["case",12],[" ",17],["unifiedCanadianAboriginalSyllabicsExtended",7]],"s":[["case",12],[" ",17],["unifiedCanadianAboriginalSyllabicsExtended",7]],"d":"18B0..18FF; Unified Canadian Aboriginal Syllabics Extended"},{"p":["Unicode","Block","unifiedCanadianAboriginalSyllabicsExtendedA"],"f":[["case",12],[" ",17],["unifiedCanadianAboriginalSyllabicsExtendedA",7]],"s":[["case",12],[" ",17],["unifiedCanadianAboriginalSyllabicsExtendedA",7]],"d":"11AB0..11ABF; Unified Canadian Aboriginal Syllabics Extended-A"},{"p":["Unicode","Block","ahom"],"f":[["case",12],[" ",17],["ahom",7]],"s":[["case",12],[" ",17],["ahom",7]],"d":"11700..1174F; Ahom"},{"p":["Unicode","Block","cham"],"f":[["case",12],[" ",17],["cham",7]],"s":[["case",12],[" ",17],["cham",7]],"d":"AA00..AA5F; Cham"},{"p":["Unicode","Block","lisu"],"f":[["case",12],[" ",17],["lisu",7]],"s":[["case",12],[" ",17],["lisu",7]],"d":"A4D0..A4FF; Lisu"},{"p":["Unicode","Block","miao"],"f":[["case",12],[" ",17],["miao",7]],"s":[["case",12],[" ",17],["miao",7]],"d":"16F00..16F9F; Miao"},{"p":["Unicode","Block","modi"],"f":[["case",12],[" ",17],["modi",7]],"s":[["case",12],[" ",17],["modi",7]],"d":"11600..1165F; Modi"},{"p":["Unicode","Block","newa"],"f":[["case",12],[" ",17],["newa",7]],"s":[["case",12],[" ",17],["newa",7]],"d":"11400..1147F; Newa"},{"p":["Unicode","Block","tags"],"f":[["case",12],[" ",17],["tags",7]],"s":[["case",12],[" ",17],["tags",7]],"d":"E0000..E007F; Tags"},{"p":["Unicode","Block","thai"],"f":[["case",12],[" ",17],["thai",7]],"s":[["case",12],[" ",17],["thai",7]],"d":"0E00..0E7F; Thai"},{"p":["Unicode","Block","toto"],"f":[["case",12],[" ",17],["toto",7]],"s":[["case",12],[" ",17],["toto",7]],"d":"1E290..1E2BF; Toto"},{"p":["Unicode","Block","adlam"],"f":[["case",12],[" ",17],["adlam",7]],"s":[["case",12],[" ",17],["adlam",7]],"d":"1E900..1E95F; Adlam"},{"p":["Unicode","Block","bamum"],"f":[["case",12],[" ",17],["bamum",7]],"s":[["case",12],[" ",17],["bamum",7]],"d":"A6A0..A6FF; Bamum"},{"p":["Unicode","Block","batak"],"f":[["case",12],[" ",17],["batak",7]],"s":[["case",12],[" ",17],["batak",7]],"d":"1BC0..1BFF; Batak"},{"p":["Unicode","Block","buhid"],"f":[["case",12],[" ",17],["buhid",7]],"s":[["case",12],[" ",17],["buhid",7]],"d":"1740..175F; Buhid"},{"p":["Unicode","Block","dogra"],"f":[["case",12],[" ",17],["dogra",7]],"s":[["case",12],[" ",17],["dogra",7]],"d":"11800..1184F; Dogra"},{"p":["Unicode","Block","khmer"],"f":[["case",12],[" ",17],["khmer",7]],"s":[["case",12],[" ",17],["khmer",7]],"d":"1780..17FF; Khmer"},{"p":["Unicode","Block","limbu"],"f":[["case",12],[" ",17],["limbu",7]],"s":[["case",12],[" ",17],["limbu",7]],"d":"1900..194F; Limbu"},{"p":["Unicode","Block","nushu"],"f":[["case",12],[" ",17],["nushu",7]],"s":[["case",12],[" ",17],["nushu",7]],"d":"1B170..1B2FF; Nushu"},{"p":["Unicode","Block","ogham"],"f":[["case",12],[" ",17],["ogham",7]],"s":[["case",12],[" ",17],["ogham",7]],"d":"1680..169F; Ogham"},{"p":["Unicode","Block","oriya"],"f":[["case",12],[" ",17],["oriya",7]],"s":[["case",12],[" ",17],["oriya",7]],"d":"0B00..0B7F; Oriya"},{"p":["Unicode","Block","osage"],"f":[["case",12],[" ",17],["osage",7]],"s":[["case",12],[" ",17],["osage",7]],"d":"104B0..104FF; Osage"},{"p":["Unicode","Block","runic"],"f":[["case",12],[" ",17],["runic",7]],"s":[["case",12],[" ",17],["runic",7]],"d":"16A0..16FF; Runic"},{"p":["Unicode","Block","taiLe"],"f":[["case",12],[" ",17],["taiLe",7]],"s":[["case",12],[" ",17],["taiLe",7]],"d":"1950..197F; Tai Le"},{"p":["Unicode","Block","takri"],"f":[["case",12],[" ",17],["takri",7]],"s":[["case",12],[" ",17],["takri",7]],"d":"11680..116CF; Takri"},{"p":["Unicode","Block","tamil"],"f":[["case",12],[" ",17],["tamil",7]],"s":[["case",12],[" ",17],["tamil",7]],"d":"0B80..0BFF; Tamil"},{"p":["Unicode","Block","arabic"],"f":[["case",12],[" ",17],["arabic",7]],"s":[["case",12],[" ",17],["arabic",7]],"d":"0600..06FF; Arabic"},{"p":["Unicode","Block","arrows"],"f":[["case",12],[" ",17],["arrows",7]],"s":[["case",12],[" ",17],["arrows",7]],"d":"2190..21FF; Arrows"},{"p":["Unicode","Block","brahmi"],"f":[["case",12],[" ",17],["brahmi",7]],"s":[["case",12],[" ",17],["brahmi",7]],"d":"11000..1107F; Brahmi"},{"p":["Unicode","Block","carian"],"f":[["case",12],[" ",17],["carian",7]],"s":[["case",12],[" ",17],["carian",7]],"d":"102A0..102DF; Carian"},{"p":["Unicode","Block","chakma"],"f":[["case",12],[" ",17],["chakma",7]],"s":[["case",12],[" ",17],["chakma",7]],"d":"11100..1114F; Chakma"},{"p":["Unicode","Block","coptic"],"f":[["case",12],[" ",17],["coptic",7]],"s":[["case",12],[" ",17],["coptic",7]],"d":"2C80..2CFF; Coptic"},{"p":["Unicode","Block","gothic"],"f":[["case",12],[" ",17],["gothic",7]],"s":[["case",12],[" ",17],["gothic",7]],"d":"10330..1034F; Gothic"},{"p":["Unicode","Block","hatran"],"f":[["case",12],[" ",17],["hatran",7]],"s":[["case",12],[" ",17],["hatran",7]],"d":"108E0..108FF; Hatran"},{"p":["Unicode","Block","hebrew"],"f":[["case",12],[" ",17],["hebrew",7]],"s":[["case",12],[" ",17],["hebrew",7]],"d":"0590..05FF; Hebrew"},{"p":["Unicode","Block","kaithi"],"f":[["case",12],[" ",17],["kaithi",7]],"s":[["case",12],[" ",17],["kaithi",7]],"d":"11080..110CF; Kaithi"},{"p":["Unicode","Block","kanbun"],"f":[["case",12],[" ",17],["kanbun",7]],"s":[["case",12],[" ",17],["kanbun",7]],"d":"3190..319F; Kanbun"},{"p":["Unicode","Block","khojki"],"f":[["case",12],[" ",17],["khojki",7]],"s":[["case",12],[" ",17],["khojki",7]],"d":"11200..1124F; Khojki"},{"p":["Unicode","Block","lepcha"],"f":[["case",12],[" ",17],["lepcha",7]],"s":[["case",12],[" ",17],["lepcha",7]],"d":"1C00..1C4F; Lepcha"},{"p":["Unicode","Block","lycian"],"f":[["case",12],[" ",17],["lycian",7]],"s":[["case",12],[" ",17],["lycian",7]],"d":"10280..1029F; Lycian"},{"p":["Unicode","Block","lydian"],"f":[["case",12],[" ",17],["lydian",7]],"s":[["case",12],[" ",17],["lydian",7]],"d":"10920..1093F; Lydian"},{"p":["Unicode","Block","rejang"],"f":[["case",12],[" ",17],["rejang",7]],"s":[["case",12],[" ",17],["rejang",7]],"d":"A930..A95F; Rejang"},{"p":["Unicode","Block","syriac"],"f":[["case",12],[" ",17],["syriac",7]],"s":[["case",12],[" ",17],["syriac",7]],"d":"0700..074F; Syriac"},{"p":["Unicode","Block","tangsa"],"f":[["case",12],[" ",17],["tangsa",7]],"s":[["case",12],[" ",17],["tangsa",7]],"d":"16A70..16ACF; Tangsa"},{"p":["Unicode","Block","tangut"],"f":[["case",12],[" ",17],["tangut",7]],"s":[["case",12],[" ",17],["tangut",7]],"d":"17000..187FF; Tangut"},{"p":["Unicode","Block","telugu"],"f":[["case",12],[" ",17],["telugu",7]],"s":[["case",12],[" ",17],["telugu",7]],"d":"0C00..0C7F; Telugu"},{"p":["Unicode","Block","thaana"],"f":[["case",12],[" ",17],["thaana",7]],"s":[["case",12],[" ",17],["thaana",7]],"d":"0780..07BF; Thaana"},{"p":["Unicode","Block","wancho"],"f":[["case",12],[" ",17],["wancho",7]],"s":[["case",12],[" ",17],["wancho",7]],"d":"1E2C0..1E2FF; Wancho"},{"p":["Unicode","Block","yezidi"],"f":[["case",12],[" ",17],["yezidi",7]],"s":[["case",12],[" ",17],["yezidi",7]],"d":"10E80..10EBF; Yezidi"},{"p":["Unicode","Block","avestan"],"f":[["case",12],[" ",17],["avestan",7]],"s":[["case",12],[" ",17],["avestan",7]],"d":"10B00..10B3F; Avestan"},{"p":["Unicode","Block","bengali"],"f":[["case",12],[" ",17],["bengali",7]],"s":[["case",12],[" ",17],["bengali",7]],"d":"0980..09FF; Bengali"},{"p":["Unicode","Block","deseret"],"f":[["case",12],[" ",17],["deseret",7]],"s":[["case",12],[" ",17],["deseret",7]],"d":"10400..1044F; Deseret"},{"p":["Unicode","Block","elbasan"],"f":[["case",12],[" ",17],["elbasan",7]],"s":[["case",12],[" ",17],["elbasan",7]],"d":"10500..1052F; Elbasan"},{"p":["Unicode","Block","elymaic"],"f":[["case",12],[" ",17],["elymaic",7]],"s":[["case",12],[" ",17],["elymaic",7]],"d":"10FE0..10FFF; Elymaic"},{"p":["Unicode","Block","grantha"],"f":[["case",12],[" ",17],["grantha",7]],"s":[["case",12],[" ",17],["grantha",7]],"d":"11300..1137F; Grantha"},{"p":["Unicode","Block","hanunoo"],"f":[["case",12],[" ",17],["hanunoo",7]],"s":[["case",12],[" ",17],["hanunoo",7]],"d":"1720..173F; Hanunoo"},{"p":["Unicode","Block","kannada"],"f":[["case",12],[" ",17],["kannada",7]],"s":[["case",12],[" ",17],["kannada",7]],"d":"0C80..0CFF; Kannada"},{"p":["Unicode","Block","kayahLi"],"f":[["case",12],[" ",17],["kayahLi",7]],"s":[["case",12],[" ",17],["kayahLi",7]],"d":"A900..A92F; Kayah Li"},{"p":["Unicode","Block","linearA"],"f":[["case",12],[" ",17],["linearA",7]],"s":[["case",12],[" ",17],["linearA",7]],"d":"10600..1077F; Linear A"},{"p":["Unicode","Block","makasar"],"f":[["case",12],[" ",17],["makasar",7]],"s":[["case",12],[" ",17],["makasar",7]],"d":"11EE0..11EFF; Makasar"},{"p":["Unicode","Block","mandaic"],"f":[["case",12],[" ",17],["mandaic",7]],"s":[["case",12],[" ",17],["mandaic",7]],"d":"0840..085F; Mandaic"},{"p":["Unicode","Block","marchen"],"f":[["case",12],[" ",17],["marchen",7]],"s":[["case",12],[" ",17],["marchen",7]],"d":"11C70..11CBF; Marchen"},{"p":["Unicode","Block","multani"],"f":[["case",12],[" ",17],["multani",7]],"s":[["case",12],[" ",17],["multani",7]],"d":"11280..112AF; Multani"},{"p":["Unicode","Block","myanmar"],"f":[["case",12],[" ",17],["myanmar",7]],"s":[["case",12],[" ",17],["myanmar",7]],"d":"1000..109F; Myanmar"},{"p":["Unicode","Block","olChiki"],"f":[["case",12],[" ",17],["olChiki",7]],"s":[["case",12],[" ",17],["olChiki",7]],"d":"1C50..1C7F; Ol Chiki"},{"p":["Unicode","Block","osmanya"],"f":[["case",12],[" ",17],["osmanya",7]],"s":[["case",12],[" ",17],["osmanya",7]],"d":"10480..104AF; Osmanya"},{"p":["Unicode","Block","phagsPA"],"f":[["case",12],[" ",17],["phagsPA",7]],"s":[["case",12],[" ",17],["phagsPA",7]],"d":"A840..A87F; Phags-pa"},{"p":["Unicode","Block","sharada"],"f":[["case",12],[" ",17],["sharada",7]],"s":[["case",12],[" ",17],["sharada",7]],"d":"11180..111DF; Sharada"},{"p":["Unicode","Block","shavian"],"f":[["case",12],[" ",17],["shavian",7]],"s":[["case",12],[" ",17],["shavian",7]],"d":"10450..1047F; Shavian"},{"p":["Unicode","Block","siddham"],"f":[["case",12],[" ",17],["siddham",7]],"s":[["case",12],[" ",17],["siddham",7]],"d":"11580..115FF; Siddham"},{"p":["Unicode","Block","sinhala"],"f":[["case",12],[" ",17],["sinhala",7]],"s":[["case",12],[" ",17],["sinhala",7]],"d":"0D80..0DFF; Sinhala"},{"p":["Unicode","Block","sogdian"],"f":[["case",12],[" ",17],["sogdian",7]],"s":[["case",12],[" ",17],["sogdian",7]],"d":"10F30..10F6F; Sogdian"},{"p":["Unicode","Block","soyombo"],"f":[["case",12],[" ",17],["soyombo",7]],"s":[["case",12],[" ",17],["soyombo",7]],"d":"11A50..11AAF; Soyombo"},{"p":["Unicode","Block","tagalog"],"f":[["case",12],[" ",17],["tagalog",7]],"s":[["case",12],[" ",17],["tagalog",7]],"d":"1700..171F; Tagalog"},{"p":["Unicode","Block","taiTham"],"f":[["case",12],[" ",17],["taiTham",7]],"s":[["case",12],[" ",17],["taiTham",7]],"d":"1A20..1AAF; Tai Tham"},{"p":["Unicode","Block","taiViet"],"f":[["case",12],[" ",17],["taiViet",7]],"s":[["case",12],[" ",17],["taiViet",7]],"d":"AA80..AADF; Tai Viet"},{"p":["Unicode","Block","tibetan"],"f":[["case",12],[" ",17],["tibetan",7]],"s":[["case",12],[" ",17],["tibetan",7]],"d":"0F00..0FFF; Tibetan"},{"p":["Unicode","Block","tirhuta"],"f":[["case",12],[" ",17],["tirhuta",7]],"s":[["case",12],[" ",17],["tirhuta",7]],"d":"11480..114DF; Tirhuta"},{"p":["Unicode","Block","armenian"],"f":[["case",12],[" ",17],["armenian",7]],"s":[["case",12],[" ",17],["armenian",7]],"d":"0530..058F; Armenian"},{"p":["Unicode","Block","balinese"],"f":[["case",12],[" ",17],["balinese",7]],"s":[["case",12],[" ",17],["balinese",7]],"d":"1B00..1B7F; Balinese"},{"p":["Unicode","Block","bassaVah"],"f":[["case",12],[" ",17],["bassaVah",7]],"s":[["case",12],[" ",17],["bassaVah",7]],"d":"16AD0..16AFF; Bassa Vah"},{"p":["Unicode","Block","bopomofo"],"f":[["case",12],[" ",17],["bopomofo",7]],"s":[["case",12],[" ",17],["bopomofo",7]],"d":"3100..312F; Bopomofo"},{"p":["Unicode","Block","buginese"],"f":[["case",12],[" ",17],["buginese",7]],"s":[["case",12],[" ",17],["buginese",7]],"d":"1A00..1A1F; Buginese"},{"p":["Unicode","Block","cherokee"],"f":[["case",12],[" ",17],["cherokee",7]],"s":[["case",12],[" ",17],["cherokee",7]],"d":"13A0..13FF; Cherokee"},{"p":["Unicode","Block","cyrillic"],"f":[["case",12],[" ",17],["cyrillic",7]],"s":[["case",12],[" ",17],["cyrillic",7]],"d":"0400..04FF; Cyrillic"},{"p":["Unicode","Block","dingbats"],"f":[["case",12],[" ",17],["dingbats",7]],"s":[["case",12],[" ",17],["dingbats",7]],"d":"2700..27BF; Dingbats"},{"p":["Unicode","Block","duployan"],"f":[["case",12],[" ",17],["duployan",7]],"s":[["case",12],[" ",17],["duployan",7]],"d":"1BC00..1BC9F; Duployan"},{"p":["Unicode","Block","ethiopic"],"f":[["case",12],[" ",17],["ethiopic",7]],"s":[["case",12],[" ",17],["ethiopic",7]],"d":"1200..137F; Ethiopic"},{"p":["Unicode","Block","georgian"],"f":[["case",12],[" ",17],["georgian",7]],"s":[["case",12],[" ",17],["georgian",7]],"d":"10A0..10FF; Georgian"},{"p":["Unicode","Block","gujarati"],"f":[["case",12],[" ",17],["gujarati",7]],"s":[["case",12],[" ",17],["gujarati",7]],"d":"0A80..0AFF; Gujarati"},{"p":["Unicode","Block","gurmukhi"],"f":[["case",12],[" ",17],["gurmukhi",7]],"s":[["case",12],[" ",17],["gurmukhi",7]],"d":"0A00..0A7F; Gurmukhi"},{"p":["Unicode","Block","hiragana"],"f":[["case",12],[" ",17],["hiragana",7]],"s":[["case",12],[" ",17],["hiragana",7]],"d":"3040..309F; Hiragana"},{"p":["Unicode","Block","javanese"],"f":[["case",12],[" ",17],["javanese",7]],"s":[["case",12],[" ",17],["javanese",7]],"d":"A980..A9DF; Javanese"},{"p":["Unicode","Block","katakana"],"f":[["case",12],[" ",17],["katakana",7]],"s":[["case",12],[" ",17],["katakana",7]],"d":"30A0..30FF; Katakana"},{"p":["Unicode","Block","mahajani"],"f":[["case",12],[" ",17],["mahajani",7]],"s":[["case",12],[" ",17],["mahajani",7]],"d":"11150..1117F; Mahajani"},{"p":["Unicode","Block","specials"],"f":[["case",12],[" ",17],["specials",7]],"s":[["case",12],[" ",17],["specials",7]],"d":"FFF0..FFFF; Specials"},{"p":["Unicode","Block","tagbanwa"],"f":[["case",12],[" ",17],["tagbanwa",7]],"s":[["case",12],[" ",17],["tagbanwa",7]],"d":"1760..177F; Tagbanwa"},{"p":["Unicode","Block","tifinagh"],"f":[["case",12],[" ",17],["tifinagh",7]],"s":[["case",12],[" ",17],["tifinagh",7]],"d":"2D30..2D7F; Tifinagh"},{"p":["Unicode","Block","ugaritic"],"f":[["case",12],[" ",17],["ugaritic",7]],"s":[["case",12],[" ",17],["ugaritic",7]],"d":"10380..1039F; Ugaritic"},{"p":["Unicode","Block","vithkuqi"],"f":[["case",12],[" ",17],["vithkuqi",7]],"s":[["case",12],[" ",17],["vithkuqi",7]],"d":"10570..105BF; Vithkuqi"},{"p":["Unicode","Block","bhaiksuki"],"f":[["case",12],[" ",17],["bhaiksuki",7]],"s":[["case",12],[" ",17],["bhaiksuki",7]],"d":"11C00..11C6F; Bhaiksuki"},{"p":["Unicode","Block","cuneiform"],"f":[["case",12],[" ",17],["cuneiform",7]],"s":[["case",12],[" ",17],["cuneiform",7]],"d":"12000..123FF; Cuneiform"},{"p":["Unicode","Block","emoticons"],"f":[["case",12],[" ",17],["emoticons",7]],"s":[["case",12],[" ",17],["emoticons",7]],"d":"1F600..1F64F; Emoticons"},{"p":["Unicode","Block","khudawadi"],"f":[["case",12],[" ",17],["khudawadi",7]],"s":[["case",12],[" ",17],["khudawadi",7]],"d":"112B0..112FF; Khudawadi"},{"p":["Unicode","Block","malayalam"],"f":[["case",12],[" ",17],["malayalam",7]],"s":[["case",12],[" ",17],["malayalam",7]],"d":"0D00..0D7F; Malayalam"},{"p":["Unicode","Block","mongolian"],"f":[["case",12],[" ",17],["mongolian",7]],"s":[["case",12],[" ",17],["mongolian",7]],"d":"1800..18AF; Mongolian"},{"p":["Unicode","Block","nabataean"],"f":[["case",12],[" ",17],["nabataean",7]],"s":[["case",12],[" ",17],["nabataean",7]],"d":"10880..108AF; Nabataean"},{"p":["Unicode","Block","newTailue"],"f":[["case",12],[" ",17],["newTailue",7]],"s":[["case",12],[" ",17],["newTailue",7]],"d":"1980..19DF; New Tai Lue"},{"p":["Unicode","Block","oldItalic"],"f":[["case",12],[" ",17],["oldItalic",7]],"s":[["case",12],[" ",17],["oldItalic",7]],"d":"10300..1032F; Old Italic"},{"p":["Unicode","Block","oldPermic"],"f":[["case",12],[" ",17],["oldPermic",7]],"s":[["case",12],[" ",17],["oldPermic",7]],"d":"10350..1037F; Old Permic"},{"p":["Unicode","Block","oldTurkic"],"f":[["case",12],[" ",17],["oldTurkic",7]],"s":[["case",12],[" ",17],["oldTurkic",7]],"d":"10C00..10C4F; Old Turkic"},{"p":["Unicode","Block","oldUyghur"],"f":[["case",12],[" ",17],["oldUyghur",7]],"s":[["case",12],[" ",17],["oldUyghur",7]],"d":"10F70..10FAF; Old Uyghur"},{"p":["Unicode","Block","palmyrene"],"f":[["case",12],[" ",17],["palmyrene",7]],"s":[["case",12],[" ",17],["palmyrene",7]],"d":"10860..1087F; Palmyrene"},{"p":["Unicode","Block","pauCinHau"],"f":[["case",12],[" ",17],["pauCinHau",7]],"s":[["case",12],[" ",17],["pauCinHau",7]],"d":"11AC0..11AFF; Pau Cin Hau"},{"p":["Unicode","Block","samaritan"],"f":[["case",12],[" ",17],["samaritan",7]],"s":[["case",12],[" ",17],["samaritan",7]],"d":"0800..083F; Samaritan"},{"p":["Unicode","Block","sundanese"],"f":[["case",12],[" ",17],["sundanese",7]],"s":[["case",12],[" ",17],["sundanese",7]],"d":"1B80..1BBF; Sundanese"},{"p":["Unicode","Script","khitanSmallScript"],"f":[["case",12],[" ",17],["khitanSmallScript",7]],"s":[["case",12],[" ",17],["khitanSmallScript",7]]},{"p":["Unicode","Script","chorasmian"],"f":[["case",12],[" ",17],["chorasmian",7]],"s":[["case",12],[" ",17],["chorasmian",7]]},{"p":["Unicode","Script","devanagari"],"f":[["case",12],[" ",17],["devanagari",7]],"s":[["case",12],[" ",17],["devanagari",7]]},{"p":["Unicode","Script","divesAkuru"],"f":[["case",12],[" ",17],["divesAkuru",7]],"s":[["case",12],[" ",17],["divesAkuru",7]]},{"p":["Unicode","Script","glagolitic"],"f":[["case",12],[" ",17],["glagolitic",7]],"s":[["case",12],[" ",17],["glagolitic",7]]},{"p":["Unicode","Script","kharoshthi"],"f":[["case",12],[" ",17],["kharoshthi",7]],"s":[["case",12],[" ",17],["kharoshthi",7]]},{"p":["Unicode","Script","manichaean"],"f":[["case",12],[" ",17],["manichaean",7]],"s":[["case",12],[" ",17],["manichaean",7]]},{"p":["Unicode","Script","oldPersian"],"f":[["case",12],[" ",17],["oldPersian",7]],"s":[["case",12],[" ",17],["oldPersian",7]]},{"p":["Unicode","Script","oldSogdian"],"f":[["case",12],[" ",17],["oldSogdian",7]],"s":[["case",12],[" ",17],["oldSogdian",7]]},{"p":["Unicode","Script","phoenician"],"f":[["case",12],[" ",17],["phoenician",7]],"s":[["case",12],[" ",17],["phoenician",7]]},{"p":["Unicode","Script","saurashtra"],"f":[["case",12],[" ",17],["saurashtra",7]],"s":[["case",12],[" ",17],["saurashtra",7]]},{"p":["Unicode","Script","warangCiti"],"f":[["case",12],[" ",17],["warangCiti",7]],"s":[["case",12],[" ",17],["warangCiti",7]]},{"p":["Unicode","Script","cyproMinoan"],"f":[["case",12],[" ",17],["cyproMinoan",7]],"s":[["case",12],[" ",17],["cyproMinoan",7]]},{"p":["Unicode","Script","medefaidrin"],"f":[["case",12],[" ",17],["medefaidrin",7]],"s":[["case",12],[" ",17],["medefaidrin",7]]},{"p":["Unicode","Script","meeteiMayek"],"f":[["case",12],[" ",17],["meeteiMayek",7]],"s":[["case",12],[" ",17],["meeteiMayek",7]]},{"p":["Unicode","Script","nandinagari"],"f":[["case",12],[" ",17],["nandinagari",7]],"s":[["case",12],[" ",17],["nandinagari",7]]},{"p":["Unicode","Script","pahawhHmong"],"f":[["case",12],[" ",17],["pahawhHmong",7]],"s":[["case",12],[" ",17],["pahawhHmong",7]]},{"p":["Unicode","Script","signWriting"],"f":[["case",12],[" ",17],["signWriting",7]],"s":[["case",12],[" ",17],["signWriting",7]]},{"p":["Unicode","Script","soraSompeng"],"f":[["case",12],[" ",17],["soraSompeng",7]],"s":[["case",12],[" ",17],["soraSompeng",7]]},{"p":["Unicode","Script","sylotiNagri"],"f":[["case",12],[" ",17],["sylotiNagri",7]],"s":[["case",12],[" ",17],["sylotiNagri",7]]},{"p":["Unicode","Script","gunjalaGondi"],"f":[["case",12],[" ",17],["gunjalaGondi",7]],"s":[["case",12],[" ",17],["gunjalaGondi",7]]},{"p":["Unicode","Script","masaramGondi"],"f":[["case",12],[" ",17],["masaramGondi",7]],"s":[["case",12],[" ",17],["masaramGondi",7]]},{"p":["Unicode","Script","mendeKikakui"],"f":[["case",12],[" ",17],["mendeKikakui",7]],"s":[["case",12],[" ",17],["mendeKikakui",7]]},{"p":["Unicode","Script","oldHungarian"],"f":[["case",12],[" ",17],["oldHungarian",7]],"s":[["case",12],[" ",17],["oldHungarian",7]]},{"p":["Unicode","Script","hanifiRohingya"],"f":[["case",12],[" ",17],["hanifiRohingya",7]],"s":[["case",12],[" ",17],["hanifiRohingya",7]]},{"p":["Unicode","Script","psalterPahlavi"],"f":[["case",12],[" ",17],["psalterPahlavi",7]],"s":[["case",12],[" ",17],["psalterPahlavi",7]]},{"p":["Unicode","Script","imperialAramaic"],"f":[["case",12],[" ",17],["imperialAramaic",7]],"s":[["case",12],[" ",17],["imperialAramaic",7]]},{"p":["Unicode","Script","meroiticCursive"],"f":[["case",12],[" ",17],["meroiticCursive",7]],"s":[["case",12],[" ",17],["meroiticCursive",7]]},{"p":["Unicode","Script","oldNorthArabian"],"f":[["case",12],[" ",17],["oldNorthArabian",7]],"s":[["case",12],[" ",17],["oldNorthArabian",7]]},{"p":["Unicode","Script","oldSouthArabian"],"f":[["case",12],[" ",17],["oldSouthArabian",7]],"s":[["case",12],[" ",17],["oldSouthArabian",7]]},{"p":["Unicode","Script","zanabazarSquare"],"f":[["case",12],[" ",17],["zanabazarSquare",7]],"s":[["case",12],[" ",17],["zanabazarSquare",7]]},{"p":["Unicode","Script","caucasianAlbanian"],"f":[["case",12],[" ",17],["caucasianAlbanian",7]],"s":[["case",12],[" ",17],["caucasianAlbanian",7]]},{"p":["Unicode","Script","canadianAboriginal"],"f":[["case",12],[" ",17],["canadianAboriginal",7]],"s":[["case",12],[" ",17],["canadianAboriginal",7]]},{"p":["Unicode","Script","katakanaOrHiragana"],"f":[["case",12],[" ",17],["katakanaOrHiragana",7]],"s":[["case",12],[" ",17],["katakanaOrHiragana",7]]},{"p":["Unicode","Script","egyptianHieroglyphs"],"f":[["case",12],[" ",17],["egyptianHieroglyphs",7]],"s":[["case",12],[" ",17],["egyptianHieroglyphs",7]]},{"p":["Unicode","Script","meroiticHieroglyphs"],"f":[["case",12],[" ",17],["meroiticHieroglyphs",7]],"s":[["case",12],[" ",17],["meroiticHieroglyphs",7]]},{"p":["Unicode","Script","anatolianHieroglyphs"],"f":[["case",12],[" ",17],["anatolianHieroglyphs",7]],"s":[["case",12],[" ",17],["anatolianHieroglyphs",7]]},{"p":["Unicode","Script","inscriptionalPahlavi"],"f":[["case",12],[" ",17],["inscriptionalPahlavi",7]],"s":[["case",12],[" ",17],["inscriptionalPahlavi",7]]},{"p":["Unicode","Script","nyiakengPuachueHmong"],"f":[["case",12],[" ",17],["nyiakengPuachueHmong",7]],"s":[["case",12],[" ",17],["nyiakengPuachueHmong",7]]},{"p":["Unicode","Script","inscriptionalParthian"],"f":[["case",12],[" ",17],["inscriptionalParthian",7]],"s":[["case",12],[" ",17],["inscriptionalParthian",7]]},{"p":["Unicode","Script","yi"],"f":[["case",12],[" ",17],["yi",7]],"s":[["case",12],[" ",17],["yi",7]]},{"p":["Unicode","Script","han"],"f":[["case",12],[" ",17],["han",7]],"s":[["case",12],[" ",17],["han",7]]},{"p":["Unicode","Script","lao"],"f":[["case",12],[" ",17],["lao",7]],"s":[["case",12],[" ",17],["lao",7]]},{"p":["Unicode","Script","mro"],"f":[["case",12],[" ",17],["mro",7]],"s":[["case",12],[" ",17],["mro",7]]},{"p":["Unicode","Script","nko"],"f":[["case",12],[" ",17],["nko",7]],"s":[["case",12],[" ",17],["nko",7]]},{"p":["Unicode","Script","vai"],"f":[["case",12],[" ",17],["vai",7]],"s":[["case",12],[" ",17],["vai",7]]},{"p":["Unicode","Script","ahom"],"f":[["case",12],[" ",17],["ahom",7]],"s":[["case",12],[" ",17],["ahom",7]]},{"p":["Unicode","Script","cham"],"f":[["case",12],[" ",17],["cham",7]],"s":[["case",12],[" ",17],["cham",7]]},{"p":["Unicode","Script","lisu"],"f":[["case",12],[" ",17],["lisu",7]],"s":[["case",12],[" ",17],["lisu",7]]},{"p":["Unicode","Script","miao"],"f":[["case",12],[" ",17],["miao",7]],"s":[["case",12],[" ",17],["miao",7]]},{"p":["Unicode","Script","modi"],"f":[["case",12],[" ",17],["modi",7]],"s":[["case",12],[" ",17],["modi",7]]},{"p":["Unicode","Script","newa"],"f":[["case",12],[" ",17],["newa",7]],"s":[["case",12],[" ",17],["newa",7]]},{"p":["Unicode","Script","thai"],"f":[["case",12],[" ",17],["thai",7]],"s":[["case",12],[" ",17],["thai",7]]},{"p":["Unicode","Script","toto"],"f":[["case",12],[" ",17],["toto",7]],"s":[["case",12],[" ",17],["toto",7]]},{"p":["Unicode","Script","adlam"],"f":[["case",12],[" ",17],["adlam",7]],"s":[["case",12],[" ",17],["adlam",7]]},{"p":["Unicode","Script","bamum"],"f":[["case",12],[" ",17],["bamum",7]],"s":[["case",12],[" ",17],["bamum",7]]},{"p":["Unicode","Script","batak"],"f":[["case",12],[" ",17],["batak",7]],"s":[["case",12],[" ",17],["batak",7]]},{"p":["Unicode","Script","buhid"],"f":[["case",12],[" ",17],["buhid",7]],"s":[["case",12],[" ",17],["buhid",7]]},{"p":["Unicode","Script","dogra"],"f":[["case",12],[" ",17],["dogra",7]],"s":[["case",12],[" ",17],["dogra",7]]},{"p":["Unicode","Script","greek"],"f":[["case",12],[" ",17],["greek",7]],"s":[["case",12],[" ",17],["greek",7]]},{"p":["Unicode","Script","khmer"],"f":[["case",12],[" ",17],["khmer",7]],"s":[["case",12],[" ",17],["khmer",7]]},{"p":["Unicode","Script","latin"],"f":[["case",12],[" ",17],["latin",7]],"s":[["case",12],[" ",17],["latin",7]]},{"p":["Unicode","Script","limbu"],"f":[["case",12],[" ",17],["limbu",7]],"s":[["case",12],[" ",17],["limbu",7]]},{"p":["Unicode","Script","nushu"],"f":[["case",12],[" ",17],["nushu",7]],"s":[["case",12],[" ",17],["nushu",7]]},{"p":["Unicode","Script","ogham"],"f":[["case",12],[" ",17],["ogham",7]],"s":[["case",12],[" ",17],["ogham",7]]},{"p":["Unicode","Script","oriya"],"f":[["case",12],[" ",17],["oriya",7]],"s":[["case",12],[" ",17],["oriya",7]]},{"p":["Unicode","Script","osage"],"f":[["case",12],[" ",17],["osage",7]],"s":[["case",12],[" ",17],["osage",7]]},{"p":["Unicode","Script","runic"],"f":[["case",12],[" ",17],["runic",7]],"s":[["case",12],[" ",17],["runic",7]]},{"p":["Unicode","Script","taiLe"],"f":[["case",12],[" ",17],["taiLe",7]],"s":[["case",12],[" ",17],["taiLe",7]]},{"p":["Unicode","Script","takri"],"f":[["case",12],[" ",17],["takri",7]],"s":[["case",12],[" ",17],["takri",7]]},{"p":["Unicode","Script","tamil"],"f":[["case",12],[" ",17],["tamil",7]],"s":[["case",12],[" ",17],["tamil",7]]},{"p":["Unicode","Script","arabic"],"f":[["case",12],[" ",17],["arabic",7]],"s":[["case",12],[" ",17],["arabic",7]]},{"p":["Unicode","Script","brahmi"],"f":[["case",12],[" ",17],["brahmi",7]],"s":[["case",12],[" ",17],["brahmi",7]]},{"p":["Unicode","Script","carian"],"f":[["case",12],[" ",17],["carian",7]],"s":[["case",12],[" ",17],["carian",7]]},{"p":["Unicode","Script","chakma"],"f":[["case",12],[" ",17],["chakma",7]],"s":[["case",12],[" ",17],["chakma",7]]},{"p":["Unicode","Script","common"],"f":[["case",12],[" ",17],["common",7]],"s":[["case",12],[" ",17],["common",7]]},{"p":["Unicode","Script","coptic"],"f":[["case",12],[" ",17],["coptic",7]],"s":[["case",12],[" ",17],["coptic",7]]},{"p":["Unicode","Script","gothic"],"f":[["case",12],[" ",17],["gothic",7]],"s":[["case",12],[" ",17],["gothic",7]]},{"p":["Unicode","Script","hangul"],"f":[["case",12],[" ",17],["hangul",7]],"s":[["case",12],[" ",17],["hangul",7]]},{"p":["Unicode","Script","hatran"],"f":[["case",12],[" ",17],["hatran",7]],"s":[["case",12],[" ",17],["hatran",7]]},{"p":["Unicode","Script","hebrew"],"f":[["case",12],[" ",17],["hebrew",7]],"s":[["case",12],[" ",17],["hebrew",7]]},{"p":["Unicode","Script","kaithi"],"f":[["case",12],[" ",17],["kaithi",7]],"s":[["case",12],[" ",17],["kaithi",7]]},{"p":["Unicode","Script","khojki"],"f":[["case",12],[" ",17],["khojki",7]],"s":[["case",12],[" ",17],["khojki",7]]},{"p":["Unicode","Script","lepcha"],"f":[["case",12],[" ",17],["lepcha",7]],"s":[["case",12],[" ",17],["lepcha",7]]},{"p":["Unicode","Script","lycian"],"f":[["case",12],[" ",17],["lycian",7]],"s":[["case",12],[" ",17],["lycian",7]]},{"p":["Unicode","Script","lydian"],"f":[["case",12],[" ",17],["lydian",7]],"s":[["case",12],[" ",17],["lydian",7]]},{"p":["Unicode","Script","rejang"],"f":[["case",12],[" ",17],["rejang",7]],"s":[["case",12],[" ",17],["rejang",7]]},{"p":["Unicode","Script","syriac"],"f":[["case",12],[" ",17],["syriac",7]],"s":[["case",12],[" ",17],["syriac",7]]},{"p":["Unicode","Script","tangsa"],"f":[["case",12],[" ",17],["tangsa",7]],"s":[["case",12],[" ",17],["tangsa",7]]},{"p":["Unicode","Script","tangut"],"f":[["case",12],[" ",17],["tangut",7]],"s":[["case",12],[" ",17],["tangut",7]]},{"p":["Unicode","Script","telugu"],"f":[["case",12],[" ",17],["telugu",7]],"s":[["case",12],[" ",17],["telugu",7]]},{"p":["Unicode","Script","thaana"],"f":[["case",12],[" ",17],["thaana",7]],"s":[["case",12],[" ",17],["thaana",7]]},{"p":["Unicode","Script","wancho"],"f":[["case",12],[" ",17],["wancho",7]],"s":[["case",12],[" ",17],["wancho",7]]},{"p":["Unicode","Script","yezidi"],"f":[["case",12],[" ",17],["yezidi",7]],"s":[["case",12],[" ",17],["yezidi",7]]},{"p":["Unicode","Script","avestan"],"f":[["case",12],[" ",17],["avestan",7]],"s":[["case",12],[" ",17],["avestan",7]]},{"p":["Unicode","Script","bengali"],"f":[["case",12],[" ",17],["bengali",7]],"s":[["case",12],[" ",17],["bengali",7]]},{"p":["Unicode","Script","braille"],"f":[["case",12],[" ",17],["braille",7]],"s":[["case",12],[" ",17],["braille",7]]},{"p":["Unicode","Script","cypriot"],"f":[["case",12],[" ",17],["cypriot",7]],"s":[["case",12],[" ",17],["cypriot",7]]},{"p":["Unicode","Script","deseret"],"f":[["case",12],[" ",17],["deseret",7]],"s":[["case",12],[" ",17],["deseret",7]]},{"p":["Unicode","Script","elbasan"],"f":[["case",12],[" ",17],["elbasan",7]],"s":[["case",12],[" ",17],["elbasan",7]]},{"p":["Unicode","Script","elymaic"],"f":[["case",12],[" ",17],["elymaic",7]],"s":[["case",12],[" ",17],["elymaic",7]]},{"p":["Unicode","Script","grantha"],"f":[["case",12],[" ",17],["grantha",7]],"s":[["case",12],[" ",17],["grantha",7]]},{"p":["Unicode","Script","hanunoo"],"f":[["case",12],[" ",17],["hanunoo",7]],"s":[["case",12],[" ",17],["hanunoo",7]]},{"p":["Unicode","Script","kannada"],"f":[["case",12],[" ",17],["kannada",7]],"s":[["case",12],[" ",17],["kannada",7]]},{"p":["Unicode","Script","kayahLi"],"f":[["case",12],[" ",17],["kayahLi",7]],"s":[["case",12],[" ",17],["kayahLi",7]]},{"p":["Unicode","Script","linearA"],"f":[["case",12],[" ",17],["linearA",7]],"s":[["case",12],[" ",17],["linearA",7]]},{"p":["Unicode","Script","linearB"],"f":[["case",12],[" ",17],["linearB",7]],"s":[["case",12],[" ",17],["linearB",7]]},{"p":["Unicode","Script","makasar"],"f":[["case",12],[" ",17],["makasar",7]],"s":[["case",12],[" ",17],["makasar",7]]},{"p":["Unicode","Script","mandaic"],"f":[["case",12],[" ",17],["mandaic",7]],"s":[["case",12],[" ",17],["mandaic",7]]},{"p":["Unicode","Script","marchen"],"f":[["case",12],[" ",17],["marchen",7]],"s":[["case",12],[" ",17],["marchen",7]]},{"p":["Unicode","Script","multani"],"f":[["case",12],[" ",17],["multani",7]],"s":[["case",12],[" ",17],["multani",7]]},{"p":["Unicode","Script","myanmar"],"f":[["case",12],[" ",17],["myanmar",7]],"s":[["case",12],[" ",17],["myanmar",7]]},{"p":["Unicode","Script","olChiki"],"f":[["case",12],[" ",17],["olChiki",7]],"s":[["case",12],[" ",17],["olChiki",7]]},{"p":["Unicode","Script","osmanya"],"f":[["case",12],[" ",17],["osmanya",7]],"s":[["case",12],[" ",17],["osmanya",7]]},{"p":["Unicode","Script","phagsPa"],"f":[["case",12],[" ",17],["phagsPa",7]],"s":[["case",12],[" ",17],["phagsPa",7]]},{"p":["Unicode","Script","sharada"],"f":[["case",12],[" ",17],["sharada",7]],"s":[["case",12],[" ",17],["sharada",7]]},{"p":["Unicode","Script","shavian"],"f":[["case",12],[" ",17],["shavian",7]],"s":[["case",12],[" ",17],["shavian",7]]},{"p":["Unicode","Script","siddham"],"f":[["case",12],[" ",17],["siddham",7]],"s":[["case",12],[" ",17],["siddham",7]]},{"p":["Unicode","Script","sinhala"],"f":[["case",12],[" ",17],["sinhala",7]],"s":[["case",12],[" ",17],["sinhala",7]]},{"p":["Unicode","Script","sogdian"],"f":[["case",12],[" ",17],["sogdian",7]],"s":[["case",12],[" ",17],["sogdian",7]]},{"p":["Unicode","Script","soyombo"],"f":[["case",12],[" ",17],["soyombo",7]],"s":[["case",12],[" ",17],["soyombo",7]]},{"p":["Unicode","Script","tagalog"],"f":[["case",12],[" ",17],["tagalog",7]],"s":[["case",12],[" ",17],["tagalog",7]]},{"p":["Unicode","Script","taiTham"],"f":[["case",12],[" ",17],["taiTham",7]],"s":[["case",12],[" ",17],["taiTham",7]]},{"p":["Unicode","Script","taiViet"],"f":[["case",12],[" ",17],["taiViet",7]],"s":[["case",12],[" ",17],["taiViet",7]]},{"p":["Unicode","Script","tibetan"],"f":[["case",12],[" ",17],["tibetan",7]],"s":[["case",12],[" ",17],["tibetan",7]]},{"p":["Unicode","Script","tirhuta"],"f":[["case",12],[" ",17],["tirhuta",7]],"s":[["case",12],[" ",17],["tirhuta",7]]},{"p":["Unicode","Script","unknown"],"f":[["case",12],[" ",17],["unknown",7]],"s":[["case",12],[" ",17],["unknown",7]]},{"p":["Unicode","Script","armenian"],"f":[["case",12],[" ",17],["armenian",7]],"s":[["case",12],[" ",17],["armenian",7]]},{"p":["Unicode","Script","balinese"],"f":[["case",12],[" ",17],["balinese",7]],"s":[["case",12],[" ",17],["balinese",7]]},{"p":["Unicode","Script","bassaVah"],"f":[["case",12],[" ",17],["bassaVah",7]],"s":[["case",12],[" ",17],["bassaVah",7]]},{"p":["Unicode","Script","bopomofo"],"f":[["case",12],[" ",17],["bopomofo",7]],"s":[["case",12],[" ",17],["bopomofo",7]]},{"p":["Unicode","Script","buginese"],"f":[["case",12],[" ",17],["buginese",7]],"s":[["case",12],[" ",17],["buginese",7]]},{"p":["Unicode","Script","cherokee"],"f":[["case",12],[" ",17],["cherokee",7]],"s":[["case",12],[" ",17],["cherokee",7]]},{"p":["Unicode","Script","cyrillic"],"f":[["case",12],[" ",17],["cyrillic",7]],"s":[["case",12],[" ",17],["cyrillic",7]]},{"p":["Unicode","Script","duployan"],"f":[["case",12],[" ",17],["duployan",7]],"s":[["case",12],[" ",17],["duployan",7]]},{"p":["Unicode","Script","ethiopic"],"f":[["case",12],[" ",17],["ethiopic",7]],"s":[["case",12],[" ",17],["ethiopic",7]]},{"p":["Unicode","Script","georgian"],"f":[["case",12],[" ",17],["georgian",7]],"s":[["case",12],[" ",17],["georgian",7]]},{"p":["Unicode","Script","gujarati"],"f":[["case",12],[" ",17],["gujarati",7]],"s":[["case",12],[" ",17],["gujarati",7]]},{"p":["Unicode","Script","gurmukhi"],"f":[["case",12],[" ",17],["gurmukhi",7]],"s":[["case",12],[" ",17],["gurmukhi",7]]},{"p":["Unicode","Script","hiragana"],"f":[["case",12],[" ",17],["hiragana",7]],"s":[["case",12],[" ",17],["hiragana",7]]},{"p":["Unicode","Script","javanese"],"f":[["case",12],[" ",17],["javanese",7]],"s":[["case",12],[" ",17],["javanese",7]]},{"p":["Unicode","Script","katakana"],"f":[["case",12],[" ",17],["katakana",7]],"s":[["case",12],[" ",17],["katakana",7]]},{"p":["Unicode","Script","mahajani"],"f":[["case",12],[" ",17],["mahajani",7]],"s":[["case",12],[" ",17],["mahajani",7]]},{"p":["Unicode","Script","tagbanwa"],"f":[["case",12],[" ",17],["tagbanwa",7]],"s":[["case",12],[" ",17],["tagbanwa",7]]},{"p":["Unicode","Script","tifinagh"],"f":[["case",12],[" ",17],["tifinagh",7]],"s":[["case",12],[" ",17],["tifinagh",7]]},{"p":["Unicode","Script","ugaritic"],"f":[["case",12],[" ",17],["ugaritic",7]],"s":[["case",12],[" ",17],["ugaritic",7]]},{"p":["Unicode","Script","vithkuqi"],"f":[["case",12],[" ",17],["vithkuqi",7]],"s":[["case",12],[" ",17],["vithkuqi",7]]},{"p":["Unicode","Script","bhaiksuki"],"f":[["case",12],[" ",17],["bhaiksuki",7]],"s":[["case",12],[" ",17],["bhaiksuki",7]]},{"p":["Unicode","Script","cuneiform"],"f":[["case",12],[" ",17],["cuneiform",7]],"s":[["case",12],[" ",17],["cuneiform",7]]},{"p":["Unicode","Script","inherited"],"f":[["case",12],[" ",17],["inherited",7]],"s":[["case",12],[" ",17],["inherited",7]]},{"p":["Unicode","Script","khudawadi"],"f":[["case",12],[" ",17],["khudawadi",7]],"s":[["case",12],[" ",17],["khudawadi",7]]},{"p":["Unicode","Script","malayalam"],"f":[["case",12],[" ",17],["malayalam",7]],"s":[["case",12],[" ",17],["malayalam",7]]},{"p":["Unicode","Script","mongolian"],"f":[["case",12],[" ",17],["mongolian",7]],"s":[["case",12],[" ",17],["mongolian",7]]},{"p":["Unicode","Script","nabataean"],"f":[["case",12],[" ",17],["nabataean",7]],"s":[["case",12],[" ",17],["nabataean",7]]},{"p":["Unicode","Script","newTaiLue"],"f":[["case",12],[" ",17],["newTaiLue",7]],"s":[["case",12],[" ",17],["newTaiLue",7]]},{"p":["Unicode","Script","oldItalic"],"f":[["case",12],[" ",17],["oldItalic",7]],"s":[["case",12],[" ",17],["oldItalic",7]]},{"p":["Unicode","Script","oldPermic"],"f":[["case",12],[" ",17],["oldPermic",7]],"s":[["case",12],[" ",17],["oldPermic",7]]},{"p":["Unicode","Script","oldTurkic"],"f":[["case",12],[" ",17],["oldTurkic",7]],"s":[["case",12],[" ",17],["oldTurkic",7]]},{"p":["Unicode","Script","oldUyghur"],"f":[["case",12],[" ",17],["oldUyghur",7]],"s":[["case",12],[" ",17],["oldUyghur",7]]},{"p":["Unicode","Script","palmyrene"],"f":[["case",12],[" ",17],["palmyrene",7]],"s":[["case",12],[" ",17],["palmyrene",7]]},{"p":["Unicode","Script","pauCinHau"],"f":[["case",12],[" ",17],["pauCinHau",7]],"s":[["case",12],[" ",17],["pauCinHau",7]]},{"p":["Unicode","Script","samaritan"],"f":[["case",12],[" ",17],["samaritan",7]],"s":[["case",12],[" ",17],["samaritan",7]]},{"p":["Unicode","Script","sundanese"],"f":[["case",12],[" ",17],["sundanese",7]],"s":[["case",12],[" ",17],["sundanese",7]]},{"p":["String","init(_:)"],"f":[["init",10],["<",17],["Scalars",0],[">(",17],["_",1],[" ",17],["scs",2],[": ",17],["Scalars",18],[") ",17],["where",12],[" ",17],["Scalars",18],[" : ",17],["Collection",18,1267],[", ",17],["Scalars",18],[".",17],["Element",18],[" == ",17],["Unicode",18,1327],[".",17],["Scalar",18,1330]],"s":[["init",10],["<",17],["Scalars",0],[">(",17],["Scalars",18],[")",17]],"c":[["Scalars",1,"Collection",1267],["Scalars.Element",2,"Unicode.Scalar",1330]],"g":[["Scalars",0,0]]},{"p":["BinaryInteger","init(asserting:)"],"f":[["init",10],["<",17],["T",0],[">(",17],["asserting",1],[" ",17],["i",2],[": ",17],["T",18],[") ",17],["where",12],[" ",17],["T",18],[" : ",17],["BinaryInteger",18,1302]],"s":[["init",10],["<",17],["T",0],[">(",17],["asserting",1],[": ",17],["T",18],[")",17]],"g":[["T",0,1]]},{"p":["Unicode","POSIXProperty","init(rawValue:)"],"f":[["init",10],["?(",17],["rawValue",1],[": ",17],["String",18,1220],[")",17]],"s":[["init",10],["?(",17],["rawValue",1],[": ",17],["String",18],[")",17]],"o":1259},{"p":["Unicode","BinaryProperty","init(rawValue:)"],"f":[["init",10],["?(",17],["rawValue",1],[": ",17],["String",18,1220],[")",17]],"s":[["init",10],["?(",17],["rawValue",1],[": ",17],["String",18],[")",17]],"o":1259},{"p":["Unicode","ExtendedGeneralCategory","init(rawValue:)"],"f":[["init",10],["?(",17],["rawValue",1],[": ",17],["String",18,1220],[")",17]],"s":[["init",10],["?(",17],["rawValue",1],[": ",17],["String",18],[")",17]],"o":1259},{"p":["Unicode","Block","init(rawValue:)"],"f":[["init",10],["?(",17],["rawValue",1],[": ",17],["String",18,1220],[")",17]],"s":[["init",10],["?(",17],["rawValue",1],[": ",17],["String",18],[")",17]],"o":1259},{"p":["Unicode","Script","init(rawValue:)"],"f":[["init",10],["?(",17],["rawValue",1],[": ",17],["String",18,1220],[")",17]],"s":[["init",10],["?(",17],["rawValue",1],[": ",17],["String",18],[")",17]],"o":1259},{"p":["Unicode","Scalar","AllScalars","subscript(_:)"],"f":[["subscript",10],["(",17],["position",2],[": ",17],["Int",18,1264],[") -> ",17],["Unicode",18,1327],[".",17],["Scalar",18,1330],[" { ",17],["get",12],[" }",17]],"s":[["subscript",10],["(",17],["Int",18],[") -> ",17],["Unicode",18],[".",17],["Scalar",18]],"o":1296},{"p":["Unicode","Scalar","allScalars"],"f":[["static",12],[" ",17],["var",12],[" ",17],["allScalars",7],[": ",17],["Unicode",18,1327],[".",17],["Scalar",18,1330],[".",17],["AllScalars",18,568],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["allScalars",7],[": ",17],["Unicode",18],[".",17],["Scalar",18],[".",17],["AllScalars",18]]},{"p":["Character","isOctalDigit"],"f":[["var",12],[" ",17],["isOctalDigit",7],[": ",17],["Bool",18,1262],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isOctalDigit",7],[": ",17],["Bool",18]],"d":"Whether this character represents an octal (base 8) digit,\nfor the purposes of pattern parsing."},{"p":["Character","isWordCharacter"],"f":[["var",12],[" ",17],["isWordCharacter",7],[": ",17],["Bool",18,1262],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isWordCharacter",7],[": ",17],["Bool",18]],"d":"Whether this character represents a word character,\nfor the purposes of pattern parsing."},{"p":["Character","isPatternWhitespace"],"f":[["var",12],[" ",17],["isPatternWhitespace",7],[": ",17],["Bool",18,1262],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isPatternWhitespace",7],[": ",17],["Bool",18]],"d":"Whether this character represents whitespace,\nfor the purposes of pattern parsing."},{"p":["Range","destructure"],"f":[["var",12],[" ",17],["destructure",7],[": (lowerBound",17],[": ",17],["Bound",18],[", upperBound",17],[": ",17],["Bound",18],[") { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["destructure",7],[": (lowerBound",17],[": ",17],["Bound",18],[", upperBound",17],[": ",17],["Bound",18],[")",17]],"e":[["Bound",1,"Comparable",1216]]},{"p":["CustomStringConvertible","halfWidthCornerQuoted"],"f":[["var",12],[" ",17],["halfWidthCornerQuoted",7],[": ",17],["String",18,1220],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["halfWidthCornerQuoted",7],[": ",17],["String",18]]},{"p":["Unicode","Scalar","AllScalars","startIndex"],"f":[["var",12],[" ",17],["startIndex",7],[": ",17],["Int",18,1264],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["startIndex",7],[": ",17],["Int",18]],"o":1268},{"p":["Unicode","Scalar","AllScalars","endIndex"],"f":[["var",12],[" ",17],["endIndex",7],[": ",17],["Int",18,1264],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["endIndex",7],[": ",17],["Int",18]],"o":1269},{"p":["Unicode","Scalar","isPrintableASCII"],"f":[["var",12],[" ",17],["isPrintableASCII",7],[": ",17],["Bool",18,1262],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isPrintableASCII",7],[": ",17],["Bool",18]],"d":"Whether this character represents a printable ASCII character,\nfor the purposes of pattern parsing."},{"p":["MemoryLayout","tupleElementIndex(of:elementTypes:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["tupleElementIndex",7],["<",17],["ElementTypes",0],[">(",17],["of",1],[" ",17],["keyPath",2],[": ",17],["PartialKeyPath",18,1319],["<",17],["T",18],[">, ",17],["elementTypes",1],[": ",17],["ElementTypes",18],[") -> ",17],["Int",18,1264],["? ",17],["where",12],[" ",17],["ElementTypes",18],[" : ",17],["Collection",18,1267],[", ",17],["ElementTypes",18],[".",17],["Element",18],[" == ",17],["Any",12],[".Type",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["tupleElementIndex",7],["<",17],["ElementTypes",0],[">(",17],["of",1],[": ",17],["PartialKeyPath",18],["<",17],["T",18],[">, ",17],["elementTypes",1],[": ",17],["ElementTypes",18],[") -> ",17],["Int",18],["?",17]],"c":[["ElementTypes",1,"Collection",1267],["ElementTypes.Element",2,"Any.Type"]],"g":[["T",0,0],["ElementTypes",0,1]]},{"p":["BidirectionalCollection","mapOffsets(_:)"],"f":[["func",12],[" ",17],["mapOffsets",7],["(",17],["_",1],[" ",17],["offsets",2],[": ",17],["Offsets",18,562],[") -> ",17],["Range",18,1297],["<",17],["Self",18],[".",17],["Index",18],[">",17]],"s":[["func",12],[" ",17],["mapOffsets",7],["(",17],["Offsets",18],[") -> ",17],["Range",18],["<",17],["Self",18],[".",17],["Index",18],[">",17]]},{"p":["BidirectionalCollection","flatmapOffsets(_:)"],"f":[["func",12],[" ",17],["flatmapOffsets",7],["(",17],["_",1],[" ",17],["offsets",2],[": ",17],["Offsets",18,562],["?) -> ",17],["Range",18,1297],["<",17],["Self",18],[".",17],["Index",18],[">",17]],"s":[["func",12],[" ",17],["flatmapOffsets",7],["(",17],["Offsets",18],["?) -> ",17],["Range",18],["<",17],["Self",18],[".",17],["Index",18],[">",17]]},{"p":["String","isOnGraphemeClusterBoundary(_:)"],"f":[["func",12],[" ",17],["isOnGraphemeClusterBoundary",7],["(",17],["_",1],[" ",17],["i",2],[": ",17],["String",18,1220],[".",17],["Index",18,1222],[") -> ",17],["Bool",18,1262]],"s":[["func",12],[" ",17],["isOnGraphemeClusterBoundary",7],["(",17],["String",18],[".",17],["Index",18],[") -> ",17],["Bool",18]]},{"p":["Sequence","all(_:)"],"f":[["func",12],[" ",17],["all",7],["(",17],["_",1],[" ",17],["f",2],[": (",17],["Self",18],[".",17],["Element",18],[") -> ",17],["Bool",18,1262],[") -> ",17],["Bool",18,1262]],"s":[["func",12],[" ",17],["all",7],["((",17],["Self",18],[".",17],["Element",18],[") -> ",17],["Bool",18],[") -> ",17],["Bool",18]]},{"p":["Sequence","any(_:)"],"f":[["func",12],[" ",17],["any",7],["(",17],["_",1],[" ",17],["f",2],[": (",17],["Self",18],[".",17],["Element",18],[") -> ",17],["Bool",18,1262],[") -> ",17],["Bool",18,1262]],"s":[["func",12],[" ",17],["any",7],["((",17],["Self",18],[".",17],["Element",18],[") -> ",17],["Bool",18],[") -> ",17],["Bool",18]]},{"p":["Sequence","none(_:)"],"f":[["func",12],[" ",17],["none",7],["(",17],["_",1],[" ",17],["f",2],[": (",17],["Self",18],[".",17],["Element",18],[") -> ",17],["Bool",18,1262],[") -> ",17],["Bool",18,1262]],"s":[["func",12],[" ",17],["none",7],["((",17],["Self",18],[".",17],["Element",18],[") -> ",17],["Bool",18],[") -> ",17],["Bool",18]]},{"p":["Collection","convertByOffset(_:in:)"],"f":[["func",12],[" ",17],["convertByOffset",7],["<",17],["C",0],[">(",17],["_",1],[" ",17],["idx",2],[": ",17],["Self",18],[".",17],["Index",18],[", ",17],["in",1],[" ",17],["c",2],[": ",17],["C",18],[") -> ",17],["C",18],[".",17],["Index",18],[" ",17],["where",12],[" ",17],["C",18],[" : ",17],["Collection",18,1267]],"s":[["func",12],[" ",17],["convertByOffset",7],["<",17],["C",0],[">(",17],["Self",18],[".",17],["Index",18],[", ",17],["in",1],[": ",17],["C",18],[") -> ",17],["C",18],[".",17],["Index",18]],"g":[["C",0,1]]},{"p":["Collection","convertByOffset(_:in:)"],"f":[["func",12],[" ",17],["convertByOffset",7],["<",17],["C",0],[">(",17],["_",1],[" ",17],["range",2],[": ",17],["Range",18,1297],["<",17],["Self",18],[".",17],["Index",18],[">, ",17],["in",1],[" ",17],["c",2],[": ",17],["C",18],[") -> ",17],["Range",18,1297],["<",17],["C",18],[".",17],["Index",18],["> ",17],["where",12],[" ",17],["C",18],[" : ",17],["Collection",18,1267]],"s":[["func",12],[" ",17],["convertByOffset",7],["<",17],["C",0],[">(",17],["Range",18],["<",17],["Self",18],[".",17],["Index",18],[">, ",17],["in",1],[": ",17],["C",18],[") -> ",17],["Range",18],["<",17],["C",18],[".",17],["Index",18],[">",17]],"g":[["C",0,1]]},{"p":["Collection","index(atOffset:)"],"f":[["func",12],[" ",17],["index",7],["(",17],["atOffset",1],[" ",17],["i",2],[": ",17],["Int",18,1264],[") -> ",17],["Self",18],[".",17],["Index",18]],"s":[["func",12],[" ",17],["index",7],["(",17],["atOffset",1],[": ",17],["Int",18],[") -> ",17],["Self",18],[".",17],["Index",18]]},{"p":["Collection","split(around:)"],"f":[["func",12],[" ",17],["split",7],["(",17],["around",1],[" ",17],["r",2],[": ",17],["Range",18,1297],["<",17],["Self",18],[".",17],["Index",18],[">) -> (prefix",17],[": ",17],["Self",18],[".",17],["SubSequence",18],[", ",17],["Self",18],[".",17],["SubSequence",18],[", suffix",17],[": ",17],["Self",18],[".",17],["SubSequence",18],[")",17]],"s":[["func",12],[" ",17],["split",7],["(",17],["around",1],[": ",17],["Range",18],["<",17],["Self",18],[".",17],["Index",18],[">) -> (prefix",17],[": ",17],["Self",18],[".",17],["SubSequence",18],[", ",17],["Self",18],[".",17],["SubSequence",18],[", suffix",17],[": ",17],["Self",18],[".",17],["SubSequence",18],[")",17]]},{"p":["Collection","offset(of:)"],"f":[["func",12],[" ",17],["offset",7],["(",17],["of",1],[" ",17],["i",2],[": ",17],["Self",18],[".",17],["Index",18],[") -> ",17],["Int",18,1264]],"s":[["func",12],[" ",17],["offset",7],["(",17],["of",1],[": ",17],["Self",18],[".",17],["Index",18],[") -> ",17],["Int",18]]},{"p":["Collection","offset(ofIndex:)"],"f":[["func",12],[" ",17],["offset",7],["(",17],["ofIndex",1],[" ",17],["index",2],[": ",17],["Self",18],[".",17],["Index",18],[") -> ",17],["Int",18,1264]],"s":[["func",12],[" ",17],["offset",7],["(",17],["ofIndex",1],[": ",17],["Self",18],[".",17],["Index",18],[") -> ",17],["Int",18]]},{"p":["Collection","offsets(of:)"],"f":[["func",12],[" ",17],["offsets",7],["(",17],["of",1],[" ",17],["r",2],[": ",17],["Range",18,1297],["<",17],["Self",18],[".",17],["Index",18],[">) -> ",17],["Range",18,1297],["<",17],["Int",18,1264],[">",17]],"s":[["func",12],[" ",17],["offsets",7],["(",17],["of",1],[": ",17],["Range",18],["<",17],["Self",18],[".",17],["Index",18],[">) -> ",17],["Range",18],["<",17],["Int",18],[">",17]]},{"p":["Collection","tryDropPrefix(_:)"],"f":[["func",12],[" ",17],["tryDropPrefix",7],["<",17],["C",0],[">(",17],["_",1],[" ",17],["other",2],[": ",17],["C",18],[") -> ",17],["Self",18],[".",17],["SubSequence",18],["? ",17],["where",12],[" ",17],["C",18],[" : ",17],["Collection",18,1267],[", ",17],["Self",18],[".",17],["Element",18],[" == ",17],["C",18],[".",17],["Element",18]],"s":[["func",12],[" ",17],["tryDropPrefix",7],["<",17],["C",0],[">(",17],["C",18],[") -> ",17],["Self",18],[".",17],["SubSequence",18],["?",17]],"e":[["Self.Element",1,"Equatable",1217]],"c":[["Self.Element",1,"Equatable",1217],["Self.Element",2,"C.Element"]],"g":[["C",0,1]],"d":"Attempts to drop a given prefix from the collection.\n\n- Parameter other: The collection that contains the prefix.\n- Returns: The resulting subsequence,\n  or `nil` if the prefix doesn't match."},{"p":["Collection","tryDropSuffix(_:)"],"f":[["func",12],[" ",17],["tryDropSuffix",7],["<",17],["C",0],[">(",17],["_",1],[" ",17],["other",2],[": ",17],["C",18],[") -> ",17],["Self",18],[".",17],["SubSequence",18],["? ",17],["where",12],[" ",17],["C",18],[" : ",17],["Collection",18,1267],[", ",17],["Self",18],[".",17],["Element",18],[" == ",17],["C",18],[".",17],["Element",18]],"s":[["func",12],[" ",17],["tryDropSuffix",7],["<",17],["C",0],[">(",17],["C",18],[") -> ",17],["Self",18],[".",17],["SubSequence",18],["?",17]],"e":[["Self.Element",1,"Equatable",1217]],"c":[["Self.Element",1,"Equatable",1217],["Self.Element",2,"C.Element"]],"g":[["C",0,1]],"d":"Attempts to drop a given suffix from the collection.\n\n- Parameter other: The collection that contains the suffix.\n- Returns: The resulting subsequence,\n  or `nil` if the prefix doesn't match."},{"p":["UnsafeMutableRawPointer","roundedUp(toAlignmentOf:)"],"f":[["func",12],[" ",17],["roundedUp",7],["<",17],["T",0],[">(",17],["toAlignmentOf",1],[" ",17],["type",2],[": ",17],["T",18],[".Type) -> ",17],["UnsafeMutableRawPointer",18,1300]],"s":[["func",12],[" ",17],["roundedUp",7],["<",17],["T",0],[">(",17],["toAlignmentOf",1],[": ",17],["T",18],[".Type) -> ",17],["UnsafeMutableRawPointer",18]],"g":[["T",0,0]]}],"edges":{"conformer":[0,1325,[],0,1331,[],3,1201,[],3,1217,[],4,1201,[],4,1217,[],4,1320,[],4,1324,[],5,1201,[],5,1217,[],6,1201,[],6,1217,[],7,1201,[],7,1217,[],8,1201,[],8,1217,[],9,1201,[],9,1217,[],9,1257,[],9,1320,[],9,1324,[],10,1201,[],10,1217,[],10,1320,[],10,1324,[],11,1201,[],11,1217,[],11,1257,[],12,1201,[],12,1217,[],12,1257,[],13,1201,[],13,1217,[],13,1320,[],13,1324,[],14,1201,[],14,1217,[],15,1201,[],15,1217,[],16,1201,[],16,1217,[],16,1320,[],16,1324,[],17,1201,[],17,1217,[],17,1257,[],18,1201,[],18,1217,[],19,1201,[],19,1217,[],19,1257,[],19,1315,[],20,1201,[],20,1217,[],20,1257,[],21,1201,[],21,1217,[],22,1201,[],22,1217,[],23,1201,[],23,1217,[],24,1201,[],24,1217,[],25,1201,[],25,1217,[],25,1320,[],25,1324,[],26,1201,[],26,1217,[],27,1201,[],27,1217,[],28,1201,[],28,1217,[],28,1320,[],28,1324,[],29,1201,[],29,1217,[],29,1320,[],29,1324,[],30,1201,[],30,1217,[],31,1201,[],31,1217,[],32,1217,[],32,1320,[],32,1322,[],33,1217,[],33,1320,[],34,1320,[],34,1325,[],34,1331,[],35,1320,[],35,1325,[],35,1331,[],37,1217,[],37,1257,[],37,1303,[],37,1322,[],37,1332,[],38,1320,[],38,1325,[],38,1331,[],39,1201,[],39,1217,[],39,1320,[],39,1324,[],40,1201,[],40,1217,[],40,1320,[],40,1324,[],41,1201,[],41,1217,[],41,1320,[],41,1324,[],42,1201,[],42,1217,[],42,1320,[],42,1324,[],43,1201,[],43,1217,[],43,1320,[],43,1324,[],44,1201,[],44,1217,[],44,1320,[],44,1324,[],45,1201,[],45,1217,[],45,1320,[],45,1324,[],46,1201,[],46,1217,[],46,1320,[],46,1324,[],47,1201,[],47,1217,[],47,1320,[],47,1324,[],48,1201,[],48,1217,[],48,1320,[],48,1324,[],49,1201,[],49,1217,[],49,1320,[],49,1324,[],50,1201,[],50,1217,[],50,1320,[],50,1324,[],51,1201,[],51,1217,[],51,1320,[],51,1324,[],52,1201,[],52,1217,[],52,1320,[],52,1324,[],53,1201,[],53,1217,[],53,1320,[],53,1324,[],54,1201,[],54,1217,[],54,1320,[],54,1324,[],55,1201,[],55,1217,[],55,1320,[],55,1324,[],56,1201,[],56,1217,[],57,1201,[],57,1217,[],58,1201,[],58,1217,[],58,1320,[],58,1324,[],59,1201,[],59,1217,[],60,1201,[],60,1217,[],60,1320,[],60,1324,[],61,1201,[],61,1217,[],61,1320,[],61,1324,[],62,1201,[],62,1217,[],62,1320,[],62,1324,[],63,1201,[],63,1217,[],63,1320,[],63,1324,[],64,1201,[],64,1217,[],64,1320,[],64,1324,[],65,1201,[],65,1217,[],65,1320,[],65,1324,[],66,1201,[],66,1217,[],66,1320,[],66,1324,[],67,1201,[],67,1217,[],67,1320,[],67,1324,[],68,1201,[],68,1217,[],68,1320,[],68,1324,[],69,1201,[],69,1217,[],69,1320,[],69,1324,[],70,1201,[],70,1217,[],70,1320,[],70,1324,[],72,0,[],72,1320,[["E",1,"Error",1325]],72,1325,[],72,1331,[],73,1201,[["T",1,"Hashable",1201]],73,1217,[["T",1,"Equatable",1217]],74,1201,[],74,1217,[],75,1201,[],75,1217,[],76,1201,[],76,1217,[],563,1201,[],563,1217,[],563,1257,[],563,1315,[],564,1201,[],564,1217,[],564,1257,[],564,1315,[],565,1201,[],565,1217,[],565,1257,[],565,1315,[],566,1201,[],566,1217,[],566,1257,[],566,1315,[],567,1201,[],567,1217,[],567,1257,[],567,1315,[],568,1204,[],568,1223,[],568,1265,[],568,1267,[]],"feature":[1177,4,1177,9,1177,10,1177,13,1177,16,1177,25,1177,28,1177,29,1177,32,1177,33,1177,34,1177,35,1177,38,1177,39,1177,40,1177,41,1177,42,1177,43,1177,44,1177,45,1177,46,1177,47,1177,48,1177,49,1177,50,1177,51,1177,52,1177,53,1177,54,1177,55,1177,58,1177,60,1177,61,1177,62,1177,63,1177,64,1177,65,1177,66,1177,67,1177,68,1177,69,1177,70,1177,72,1182,568,1183,568,1185,568,1186,568,1187,568,1188,568,1189,568,1190,568,1191,568,1192,568,1193,568,1194,568,1195,568,1196,568,1206,568,1207,568,1208,568,1209,568,1210,568,1211,568,1212,568,1213,568,1214,568,1215,568,1219,3,1219,4,1219,5,1219,6,1219,7,1219,8,1219,9,1219,10,1219,11,1219,12,1219,13,1219,14,1219,15,1219,16,1219,17,1219,18,1219,19,1219,20,1219,21,1219,22,1219,23,1219,24,1219,25,1219,26,1219,27,1219,28,1219,29,1219,30,1219,31,1219,32,1219,33,1219,37,1219,39,1219,40,1219,41,1219,42,1219,43,1219,44,1219,45,1219,46,1219,47,1219,48,1219,49,1219,50,1219,51,1219,52,1219,53,1219,54,1219,55,1219,56,1219,57,1219,58,1219,59,1219,60,1219,61,1219,62,1219,63,1219,64,1219,65,1219,66,1219,67,1219,68,1219,69,1219,70,1219,73,1219,74,1219,75,1219,76,1219,563,1219,564,1219,565,1219,566,1219,567,1225,568,1226,568,1227,568,1228,568,1229,568,1230,568,1231,568,1232,568,1233,568,1234,568,1235,568,1236,568,1237,568,1238,568,1239,568,1240,568,1241,568,1242,568,1243,568,1244,568,1245,568,1246,568,1247,568,1248,568,1249,568,1250,568,1251,568,1252,568,1253,568,1254,568,1260,9,1260,11,1260,12,1260,17,1260,19,1260,20,1260,563,1260,564,1260,565,1260,566,1260,567,1261,9,1261,11,1261,12,1261,17,1261,19,1261,20,1261,563,1261,564,1261,565,1261,566,1261,567,1266,568,1270,568,1271,568,1272,568,1273,568,1274,568,1275,568,1276,568,1277,568,1278,568,1279,568,1280,568,1281,568,1282,568,1283,568,1284,568,1285,568,1286,568,1287,568,1288,568,1289,568,1290,568,1291,568,1292,568,1293,568,1294,568,1295,568,1304,37,1305,37,1306,37,1307,37,1308,37,1309,37,1310,37,1311,37,1312,37,1313,37,1334,37,1335,37,1336,37,1337,37,1338,37,1339,37,1340,37,1341,37,1342,37,1343,37,1344,37],"member":[3,38,4,43,5,42,6,47,7,47,8,48,9,49,10,49,11,50,12,50,13,50,14,52,15,52,16,52,17,55,18,55,19,57,20,57,21,57,22,21,23,58,24,55,25,55,26,63,27,64,28,39,29,66,30,70,33,32,40,39,41,39,42,41,43,42,44,42,45,39,46,39,47,39,48,39,49,39,50,39,51,50,52,39,53,39,54,39,55,39,56,55,57,55,58,55,59,55,60,25,61,25,62,61,63,25,64,25,65,39,66,39,67,66,68,39,69,39,70,39,72,71,73,71,74,71,77,3,78,3,79,3,80,3,81,3,82,4,83,4,84,5,85,5,86,5,87,5,88,5,89,5,90,6,91,6,92,6,93,6,94,7,95,7,96,8,97,8,98,8,99,8,100,8,101,8,102,8,103,8,104,8,105,8,106,8,107,8,108,8,109,8,110,8,111,8,112,8,113,8,114,8,115,9,116,9,117,9,118,10,119,10,120,10,121,10,122,10,123,10,124,10,125,11,126,11,127,11,128,12,129,12,130,13,131,13,132,13,133,13,134,13,135,13,136,14,137,14,138,15,139,15,140,15,141,15,142,15,143,15,144,16,145,16,146,16,147,16,148,16,149,16,150,16,151,16,152,16,153,16,154,16,155,16,156,16,157,17,158,17,159,17,160,17,161,17,162,17,163,17,164,17,165,17,166,17,167,17,168,18,169,18,170,18,171,18,172,18,173,18,174,18,175,18,176,18,177,18,178,18,179,18,180,18,181,18,182,18,183,18,184,18,185,18,186,18,187,18,188,18,189,18,190,18,191,18,192,18,193,18,194,18,195,18,196,18,197,18,198,18,199,19,200,19,201,19,202,19,203,19,204,19,205,19,206,19,207,19,208,19,209,19,210,19,211,19,212,19,213,19,214,19,215,19,216,19,217,20,218,20,219,20,220,20,221,20,222,22,223,22,224,22,225,21,226,21,227,21,228,21,229,21,230,21,231,21,232,21,233,21,234,21,235,21,236,21,237,21,238,21,239,21,240,21,241,21,242,23,243,23,244,23,245,23,246,23,247,23,248,23,249,24,250,24,251,24,252,24,253,24,254,24,255,24,256,24,257,24,258,24,259,24,260,24,261,24,262,24,263,24,264,24,265,24,266,25,267,26,268,26,269,26,270,25,271,27,272,27,273,25,274,28,275,28,276,28,277,28,278,28,279,28,280,28,281,28,282,28,283,28,284,28,285,28,286,29,287,29,288,29,289,29,290,29,291,29,292,29,293,29,294,29,295,29,296,29,297,29,298,29,299,29,300,29,301,30,302,30,303,30,304,31,305,31,306,33,307,32,308,32,309,34,310,35,311,36,312,37,313,37,314,40,315,43,316,44,317,42,318,41,319,45,320,46,321,47,322,48,323,9,324,49,325,51,326,11,327,12,328,50,329,52,330,53,331,53,332,53,333,54,334,17,335,18,336,56,337,19,338,20,339,57,340,58,341,59,342,60,343,62,344,61,345,63,346,64,347,55,348,65,349,67,350,66,351,68,352,69,353,70,354,39,355,72,356,73,357,73,358,73,359,74,360,74,361,74,362,75,363,37,364,37,365,37,366,37,367,37,368,37,369,37,370,37,371,37,372,37,373,37,374,74,375,33,376,33,377,33,378,33,379,33,380,32,381,32,382,34,383,35,384,36,385,36,386,36,387,36,388,36,389,37,390,38,391,38,392,38,394,39,395,40,396,40,397,40,398,41,399,41,400,41,401,41,402,43,403,43,404,44,405,44,406,44,407,42,408,42,409,41,410,39,411,45,412,45,413,46,414,46,415,39,416,47,417,47,418,47,419,47,420,48,421,48,422,48,423,48,424,48,425,49,426,49,427,10,428,49,429,49,430,49,431,50,432,50,433,51,434,51,435,51,436,51,437,50,438,13,439,13,440,13,441,50,442,50,443,52,444,52,445,53,446,53,447,53,448,53,449,53,450,54,451,54,452,55,453,18,454,18,455,18,456,56,457,56,458,56,459,55,460,57,461,57,462,57,463,55,464,58,465,58,466,58,467,55,468,55,469,55,470,59,471,59,472,60,473,60,474,60,475,61,476,61,477,61,478,62,479,62,480,62,481,63,482,63,483,63,484,63,485,63,486,63,487,64,488,64,489,55,490,28,491,28,492,28,493,28,494,28,495,28,496,39,497,65,498,67,499,67,500,67,501,29,502,29,503,29,504,66,505,66,506,66,507,68,508,68,509,69,510,69,511,70,512,70,513,70,514,70,515,72,516,72,517,72,518,73,519,73,520,74,521,74,522,74,523,74,524,74,525,74,526,75,527,2,528,2,529,2,530,2,531,2,532,32,533,32,534,32,535,36,536,36,537,36,538,36,539,36,540,36,541,36,542,36,543,36,544,39,545,28,546,28,547,73,548,74,549,75,550,33,551,75,558,39,559,71,560,71,561,71,563,1327,564,1327,565,1327,566,1327,567,1327,568,1330,569,563,570,563,571,563,572,563,573,563,574,563,575,564,576,564,577,564,578,564,579,564,580,564,581,564,582,564,583,564,584,564,585,564,586,564,587,564,588,564,589,564,590,564,591,564,592,564,593,564,594,564,595,564,596,564,597,564,598,564,599,564,600,564,601,564,602,564,603,564,604,564,605,564,606,564,607,564,608,564,609,564,610,564,611,564,612,564,613,564,614,564,615,564,616,564,617,564,618,564,619,564,620,564,621,564,622,564,623,564,624,564,625,564,626,564,627,564,628,564,629,564,630,564,631,564,632,564,633,564,634,564,635,564,636,564,637,564,638,564,639,564,640,564,641,564,642,565,643,565,644,565,645,565,646,565,647,565,648,565,649,565,650,565,651,565,652,565,653,565,654,565,655,565,656,565,657,565,658,565,659,565,660,565,661,565,662,565,663,565,664,565,665,565,666,565,667,565,668,565,669,565,670,565,671,565,672,565,673,565,674,565,675,565,676,565,677,565,678,565,679,565,680,566,681,566,682,566,683,566,684,566,685,566,686,566,687,566,688,566,689,566,690,566,691,566,692,566,693,566,694,566,695,566,696,566,697,566,698,566,699,566,700,566,701,566,702,566,703,566,704,566,705,566,706,566,707,566,708,566,709,566,710,566,711,566,712,566,713,566,714,566,715,566,716,566,717,566,718,566,719,566,720,566,721,566,722,566,723,566,724,566,725,566,726,566,727,566,728,566,729,566,730,566,731,566,732,566,733,566,734,566,735,566,736,566,737,566,738,566,739,566,740,566,741,566,742,566,743,566,744,566,745,566,746,566,747,566,748,566,749,566,750,566,751,566,752,566,753,566,754,566,755,566,756,566,757,566,758,566,759,566,760,566,761,566,762,566,763,566,764,566,765,566,766,566,767,566,768,566,769,566,770,566,771,566,772,566,773,566,774,566,775,566,776,566,777,566,778,566,779,566,780,566,781,566,782,566,783,566,784,566,785,566,786,566,787,566,788,566,789,566,790,566,791,566,792,566,793,566,794,566,795,566,796,566,797,566,798,566,799,566,800,566,801,566,802,566,803,566,804,566,805,566,806,566,807,566,808,566,809,566,810,566,811,566,812,566,813,566,814,566,815,566,816,566,817,566,818,566,819,566,820,566,821,566,822,566,823,566,824,566,825,566,826,566,827,566,828,566,829,566,830,566,831,566,832,566,833,566,834,566,835,566,836,566,837,566,838,566,839,566,840,566,841,566,842,566,843,566,844,566,845,566,846,566,847,566,848,566,849,566,850,566,851,566,852,566,853,566,854,566,855,566,856,566,857,566,858,566,859,566,860,566,861,566,862,566,863,566,864,566,865,566,866,566,867,566,868,566,869,566,870,566,871,566,872,566,873,566,874,566,875,566,876,566,877,566,878,566,879,566,880,566,881,566,882,566,883,566,884,566,885,566,886,566,887,566,888,566,889,566,890,566,891,566,892,566,893,566,894,566,895,566,896,566,897,566,898,566,899,566,900,566,901,566,902,566,903,566,904,566,905,566,906,566,907,566,908,566,909,566,910,566,911,566,912,566,913,566,914,566,915,566,916,566,917,566,918,566,919,566,920,566,921,566,922,566,923,566,924,566,925,566,926,566,927,566,928,566,929,566,930,566,931,566,932,566,933,566,934,566,935,566,936,566,937,566,938,566,939,566,940,566,941,566,942,566,943,566,944,566,945,566,946,566,947,566,948,566,949,566,950,566,951,566,952,566,953,566,954,566,955,566,956,566,957,566,958,566,959,566,960,566,961,566,962,566,963,566,964,566,965,566,966,566,967,566,968,566,969,566,970,566,971,566,972,566,973,566,974,566,975,566,976,566,977,566,978,566,979,566,980,566,981,566,982,566,983,566,984,566,985,566,986,566,987,566,988,566,989,566,990,566,991,566,992,566,993,566,994,566,995,566,996,566,997,566,998,566,999,566,1000,566,1001,567,1002,567,1003,567,1004,567,1005,567,1006,567,1007,567,1008,567,1009,567,1010,567,1011,567,1012,567,1013,567,1014,567,1015,567,1016,567,1017,567,1018,567,1019,567,1020,567,1021,567,1022,567,1023,567,1024,567,1025,567,1026,567,1027,567,1028,567,1029,567,1030,567,1031,567,1032,567,1033,567,1034,567,1035,567,1036,567,1037,567,1038,567,1039,567,1040,567,1041,567,1042,567,1043,567,1044,567,1045,567,1046,567,1047,567,1048,567,1049,567,1050,567,1051,567,1052,567,1053,567,1054,567,1055,567,1056,567,1057,567,1058,567,1059,567,1060,567,1061,567,1062,567,1063,567,1064,567,1065,567,1066,567,1067,567,1068,567,1069,567,1070,567,1071,567,1072,567,1073,567,1074,567,1075,567,1076,567,1077,567,1078,567,1079,567,1080,567,1081,567,1082,567,1083,567,1084,567,1085,567,1086,567,1087,567,1088,567,1089,567,1090,567,1091,567,1092,567,1093,567,1094,567,1095,567,1096,567,1097,567,1098,567,1099,567,1100,567,1101,567,1102,567,1103,567,1104,567,1105,567,1106,567,1107,567,1108,567,1109,567,1110,567,1111,567,1112,567,1113,567,1114,567,1115,567,1116,567,1117,567,1118,567,1119,567,1120,567,1121,567,1122,567,1123,567,1124,567,1125,567,1126,567,1127,567,1128,567,1129,567,1130,567,1131,567,1132,567,1133,567,1134,567,1135,567,1136,567,1137,567,1138,567,1139,567,1140,567,1141,567,1142,567,1143,567,1144,567,1145,567,1146,567,1147,567,1148,567,1149,567,1150,567,1151,567,1152,567,1153,567,1154,567,1155,567,1156,567,1157,567,1158,567,1159,567,1160,567,1161,567,1162,567,1163,567,1164,1220,1165,1302,1166,563,1167,564,1168,565,1169,566,1170,567,1171,568,1172,1330,1173,1203,1174,1203,1175,1203,1176,1297,1177,1320,1178,568,1179,568,1180,1330,1181,1316,1182,1204,1183,1204,1184,1220,1185,1223,1186,1223,1187,1223,1188,1267,1189,1267,1190,1267,1191,1267,1192,1267,1193,1267,1194,1267,1195,1267,1196,1267,1197,1300],"requirement":[393,0]},"sourcemap":[]}