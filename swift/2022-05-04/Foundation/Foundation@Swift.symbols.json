{"metadata":{"formatVersion":{"major":0,"minor":5,"patch":3},"generator":"Swift version 5.7-dev (LLVM cd62c186b914a47, Swift c58d4dba34ef37a)"},"module":{"name":"Foundation","platform":{"architecture":"x86_64","environment":"gnu","operatingSystem":{"minimumVersion":{"major":0,"minor":0,"patch":0},"name":"linux"},"vendor":"unknown"}},"relationships":[{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:)","identifier":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"Comparable...<(_:)","identifier":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:Sy10FoundationE25localizedStandardContainsySbqd__SyRd__lF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"Comparable....(_:)","identifier":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:)","identifier":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SS10FoundationE24availableStringEncodingsSaySSAAE8EncodingVGvpZ","target":"s:SS","targetFallback":"Swift.String"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.&>>=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.&>>=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.&>>=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.&>>=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.&>>=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.&>>=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.&>>=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.&>>=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.&>>=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:Sy10FoundationE16smallestEncodingSSAAE0C0Vvp","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.&>>=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SxsE2eeoiySbx_xtFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"Equatable.==(_:_:)","identifier":"s:SQ2eeoiySbx_xtFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:Sn10FoundationAA16AttributedStringV5IndexVRszrlE_2inSnyAEGSgAA8_NSRangeV_qd__tcAA0bC8ProtocolRd__lufc","target":"s:Sn","targetFallback":"Swift.Range"},{"kind":"memberOf","source":"s:s5UInt8V10FoundationEyAbC8NSNumberCcfc","target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SzsE11descriptionSSvp::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"BinaryInteger.description","identifier":"s:SzsE11descriptionSSvp"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SzsE11descriptionSSvp::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"BinaryInteger.description","identifier":"s:SzsE11descriptionSSvp"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s15CollectionOfOneV10Foundations5UInt8VRszlE15withUnsafeBytesyqd__qd__SWKXEKlF","sourceOrigin":{"displayName":"ContiguousBytes.withUnsafeBytes(_:)","identifier":"s:10Foundation15ContiguousBytesP010withUnsafeC0yqd__qd__SWKXEKlF"},"target":"s:s15CollectionOfOneV","targetFallback":"Swift.CollectionOfOne"},{"kind":"memberOf","source":"s:SzsE11descriptionSSvp::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"BinaryInteger.description","identifier":"s:SzsE11descriptionSSvp"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SzsE11descriptionSSvp::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"BinaryInteger.description","identifier":"s:SzsE11descriptionSSvp"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SzsE11descriptionSSvp::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"BinaryInteger.description","identifier":"s:SzsE11descriptionSSvp"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:SzsE11descriptionSSvp::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"BinaryInteger.description","identifier":"s:SzsE11descriptionSSvp"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SzsE11descriptionSSvp::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"BinaryInteger.description","identifier":"s:SzsE11descriptionSSvp"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SzsE11descriptionSSvp::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"BinaryInteger.description","identifier":"s:SzsE11descriptionSSvp"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SzsE11descriptionSSvp::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"BinaryInteger.description","identifier":"s:SzsE11descriptionSSvp"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:Sr10Foundations5UInt8VRszlE15withUnsafeBytesyqd__qd__SWKXEKlF","sourceOrigin":{"displayName":"ContiguousBytes.withUnsafeBytes(_:)","identifier":"s:10Foundation15ContiguousBytesP010withUnsafeC0yqd__qd__SWKXEKlF"},"target":"s:Sr","targetFallback":"Swift.UnsafeMutableBufferPointer"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.&>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:Sa10FoundationAA26EncodableWithConfigurationRzlE6encode2to13configurationys7Encoder_p_08EncodingD0QztKF","sourceOrigin":{"displayName":"EncodableWithConfiguration.encode(to:configuration:)","identifier":"s:10Foundation26EncodableWithConfigurationP6encode2to13configurationys7Encoder_p_08EncodingD0QztKF"},"target":"s:Sa","targetFallback":"Swift.Array"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.&>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.&>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.&>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.&>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.&>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.&>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SS10FoundationE8EncodingV14utf32BigEndianACvpZ","target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.&>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s4Int8V10FoundationEyAbC8NSNumberCcfc","target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"conformsTo","source":"s:SS","target":"s:s7CVarArgP","targetFallback":"Swift.CVarArg"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SZss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"SignedInteger.init(_:)","identifier":"s:SZss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SZss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"SignedInteger.init(_:)","identifier":"s:SZss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:Sn10FoundationAA16AttributedStringV5IndexVRszrlE_2inSnyAEGSgqd___qd_0_tcSXRd__AA0bC8ProtocolRd_0_SSADV5BoundRtd__r0_lufc","target":"s:Sn","targetFallback":"Swift.Range"},{"kind":"memberOf","source":"s:SZss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"SignedInteger.init(_:)","identifier":"s:SZss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SZss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"SignedInteger.init(_:)","identifier":"s:SZss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.&>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SzsE11descriptionSSvp::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"BinaryInteger.description","identifier":"s:SzsE11descriptionSSvp"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SZss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"SignedInteger.init(_:)","identifier":"s:SZss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"conformsTo","source":"s:Sa","swiftConstraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"target":"s:10Foundation12DataProtocolP"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.&>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SZss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"SignedInteger.init(exactly:)","identifier":"s:SZss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SZss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"SignedInteger.init(exactly:)","identifier":"s:SZss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SZss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"SignedInteger.init(exactly:)","identifier":"s:SZss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SZss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"SignedInteger.init(exactly:)","identifier":"s:SZss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:SZss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"SignedInteger.init(exactly:)","identifier":"s:SZss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.init(truncatingIfNeeded:)","identifier":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"BinaryInteger.==(_:_:)","identifier":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.init(truncatingIfNeeded:)","identifier":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"BinaryInteger.==(_:_:)","identifier":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"BinaryInteger.==(_:_:)","identifier":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.init(truncatingIfNeeded:)","identifier":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.init(truncatingIfNeeded:)","identifier":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"BinaryInteger.==(_:_:)","identifier":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"BinaryInteger.==(_:_:)","identifier":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.init(truncatingIfNeeded:)","identifier":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.&<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.&<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.init(truncatingIfNeeded:)","identifier":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"BinaryInteger.==(_:_:)","identifier":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.&<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.&<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.&<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"BinaryInteger.==(_:_:)","identifier":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"BinaryInteger.==(_:_:)","identifier":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.&<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.init(truncatingIfNeeded:)","identifier":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"BinaryInteger.==(_:_:)","identifier":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.init(truncatingIfNeeded:)","identifier":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.&<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.&<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s24UnkeyedDecodingContainerP10FoundationE15decodeIfPresent_13configurationqd__Sgqd__m_0B13ConfigurationQyd__tKAC013DecodableWithI0Rd__lF","target":"s:s24UnkeyedDecodingContainerP","targetFallback":"Swift.UnkeyedDecodingContainer"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.&<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.&<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:Sy10FoundationE9appendingySSqd__SyRd__lF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:SS10FoundationE8EncodingV5utf32ACvpZ","target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.init(truncatingIfNeeded:)","identifier":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"BinaryInteger.==(_:_:)","identifier":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"conformsTo","source":"s:s13DecodingErrorO","target":"s:10Foundation14LocalizedErrorP"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.init(truncatingIfNeeded:)","identifier":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"conformsTo","source":"s:s13EncodingErrorO","target":"s:10Foundation14LocalizedErrorP"},{"kind":"memberOf","source":"s:SS10FoundationE8EncodingV17utf16LittleEndianACvpZ","target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:Sy10FoundationE21addingPercentEncoding21withAllowedCharactersSSSgAA12CharacterSetV_tF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:SS10FoundationE14CompareOptionsa","target":"s:SS","targetFallback":"Swift.String"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.&<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SzsE2neoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"BinaryInteger.!=(_:_:)","identifier":"s:SzsE2neoiySbx_qd__tSzRd__lFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SzsE2neoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"BinaryInteger.!=(_:_:)","identifier":"s:SzsE2neoiySbx_qd__tSzRd__lFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SzsE2neoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"BinaryInteger.!=(_:_:)","identifier":"s:SzsE2neoiySbx_qd__tSzRd__lFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:SzsE2neoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"BinaryInteger.!=(_:_:)","identifier":"s:SzsE2neoiySbx_qd__tSzRd__lFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SzsE2neoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"BinaryInteger.!=(_:_:)","identifier":"s:SzsE2neoiySbx_qd__tSzRd__lFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.&<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SzsE2neoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"BinaryInteger.!=(_:_:)","identifier":"s:SzsE2neoiySbx_qd__tSzRd__lFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SzsE2neoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"BinaryInteger.!=(_:_:)","identifier":"s:SzsE2neoiySbx_qd__tSzRd__lFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.&<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.&<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.&<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.&<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s5UInt8V10FoundationE10truncatingAbC8NSNumberC_tcfc","target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SzsE2neoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"BinaryInteger.!=(_:_:)","identifier":"s:SzsE2neoiySbx_qd__tSzRd__lFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.&<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3lleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"BinaryInteger.<<=(_:_:)","identifier":"s:Sz3lleoiyyxz_qd__tSzRd__lFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:s5UInt8V10FoundationE7exactlyABSgAC8NSNumberC_tcfc","target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SzsE2neoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"BinaryInteger.!=(_:_:)","identifier":"s:SzsE2neoiySbx_qd__tSzRd__lFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"conformsTo","source":"s:s15ContiguousArrayV","swiftConstraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"target":"s:10Foundation15ContiguousBytesP"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3lleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"BinaryInteger.<<=(_:_:)","identifier":"s:Sz3lleoiyyxz_qd__tSzRd__lFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3lleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"BinaryInteger.<<=(_:_:)","identifier":"s:Sz3lleoiyyxz_qd__tSzRd__lFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SD10FoundationAA18NSAttributedStringC3KeyVRszypRs_rlEySDyAEypGAA18AttributeContainerVcfc","target":"s:SD","targetFallback":"Swift.Dictionary"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3lleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"BinaryInteger.<<=(_:_:)","identifier":"s:Sz3lleoiyyxz_qd__tSzRd__lFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3lleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"BinaryInteger.<<=(_:_:)","identifier":"s:Sz3lleoiyyxz_qd__tSzRd__lFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3lleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"BinaryInteger.<<=(_:_:)","identifier":"s:Sz3lleoiyyxz_qd__tSzRd__lFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3lleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"BinaryInteger.<<=(_:_:)","identifier":"s:Sz3lleoiyyxz_qd__tSzRd__lFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3lleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"BinaryInteger.<<=(_:_:)","identifier":"s:Sz3lleoiyyxz_qd__tSzRd__lFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SzsE2neoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"BinaryInteger.!=(_:_:)","identifier":"s:SzsE2neoiySbx_qd__tSzRd__lFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:Sy10FoundationE15appendingFormatySSqd___s7CVarArg_pdtSyRd__lF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3lleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"BinaryInteger.<<=(_:_:)","identifier":"s:Sz3lleoiyyxz_qd__tSzRd__lFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s24UnkeyedDecodingContainerP10FoundationE6decode_13configurationqd__qd__m_0B13ConfigurationQyd__tKAC013DecodableWithG0Rd__lF","target":"s:s24UnkeyedDecodingContainerP","targetFallback":"Swift.UnkeyedDecodingContainer"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3lleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"BinaryInteger.<<=(_:_:)","identifier":"s:Sz3lleoiyyxz_qd__tSzRd__lFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.&<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SzsE1aoiyxx_xtFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"BinaryInteger.&(_:_:)","identifier":"s:SzsE1aoiyxx_xtFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:Sy10FoundationE24localizedStandardCompareyAA16ComparisonResultOqd__SyRd__lF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"conformsTo","source":"s:Sa","swiftConstraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"target":"s:10Foundation19MutableDataProtocolP"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.&<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SzsE1aoiyxx_xtFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"BinaryInteger.&(_:_:)","identifier":"s:SzsE1aoiyxx_xtFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SzsE1aoiyxx_xtFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"BinaryInteger.&(_:_:)","identifier":"s:SzsE1aoiyxx_xtFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SzsE1aoiyxx_xtFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"BinaryInteger.&(_:_:)","identifier":"s:SzsE1aoiyxx_xtFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SzsE1aoiyxx_xtFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"BinaryInteger.&(_:_:)","identifier":"s:SzsE1aoiyxx_xtFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SzsE1aoiyxx_xtFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"BinaryInteger.&(_:_:)","identifier":"s:SzsE1aoiyxx_xtFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SzsE1aoiyxx_xtFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"BinaryInteger.&(_:_:)","identifier":"s:SzsE1aoiyxx_xtFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.&<<(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SzsE1aoiyxx_xtFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"BinaryInteger.&(_:_:)","identifier":"s:SzsE1aoiyxx_xtFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SzsE1aoiyxx_xtFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"BinaryInteger.&(_:_:)","identifier":"s:SzsE1aoiyxx_xtFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"conformsTo","source":"s:Sa","swiftConstraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"target":"s:10Foundation15ContiguousBytesP"},{"kind":"memberOf","source":"s:SzsE1aoiyxx_xtFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"BinaryInteger.&(_:_:)","identifier":"s:SzsE1aoiyxx_xtFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SS10FoundationE8EncodingV14utf16BigEndianACvpZ","target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:SS10FoundationE8EncodingV5utf16ACvpZ","target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE9bigEndianxvp::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.bigEndian","identifier":"s:s17FixedWidthIntegerPsE9bigEndianxvp"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE9bigEndianxvp::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.bigEndian","identifier":"s:s17FixedWidthIntegerPsE9bigEndianxvp"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE9bigEndianxvp::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.bigEndian","identifier":"s:s17FixedWidthIntegerPsE9bigEndianxvp"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE9bigEndianxvp::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.bigEndian","identifier":"s:s17FixedWidthIntegerPsE9bigEndianxvp"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE9bigEndianxvp::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.bigEndian","identifier":"s:s17FixedWidthIntegerPsE9bigEndianxvp"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE9bigEndianxvp::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.bigEndian","identifier":"s:s17FixedWidthIntegerPsE9bigEndianxvp"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE9bigEndianxvp::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.bigEndian","identifier":"s:s17FixedWidthIntegerPsE9bigEndianxvp"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE9bigEndianxvp::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.bigEndian","identifier":"s:s17FixedWidthIntegerPsE9bigEndianxvp"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE9bigEndianxvp::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.bigEndian","identifier":"s:s17FixedWidthIntegerPsE9bigEndianxvp"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE9bigEndianxvp::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.bigEndian","identifier":"s:s17FixedWidthIntegerPsE9bigEndianxvp"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SZss17FixedWidthIntegerRzrlE10isMultiple2ofSbx_tF::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"BinaryInteger.isMultiple(of:)","identifier":"s:Sz10isMultiple2ofSbx_tF"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SS10FoundationE25EncodingConversionOptionsa","target":"s:SS","targetFallback":"Swift.String"},{"kind":"memberOf","source":"s:SZss17FixedWidthIntegerRzrlE10isMultiple2ofSbx_tF::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"BinaryInteger.isMultiple(of:)","identifier":"s:Sz10isMultiple2ofSbx_tF"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SZss17FixedWidthIntegerRzrlE10isMultiple2ofSbx_tF::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"BinaryInteger.isMultiple(of:)","identifier":"s:Sz10isMultiple2ofSbx_tF"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SZss17FixedWidthIntegerRzrlE10isMultiple2ofSbx_tF::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"BinaryInteger.isMultiple(of:)","identifier":"s:Sz10isMultiple2ofSbx_tF"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SZss17FixedWidthIntegerRzrlE10isMultiple2ofSbx_tF::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"BinaryInteger.isMultiple(of:)","identifier":"s:Sz10isMultiple2ofSbx_tF"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"conformsTo","source":"s:s15ContiguousArrayV","swiftConstraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"target":"s:10Foundation19MutableDataProtocolP"},{"kind":"memberOf","source":"s:Sy10FoundationE18localizedLowercaseSSvp","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.init(exactly:)","identifier":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.init(exactly:)","identifier":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE12littleEndianxvp::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.littleEndian","identifier":"s:s17FixedWidthIntegerPsE12littleEndianxvp"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.init(exactly:)","identifier":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.init(exactly:)","identifier":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.init(exactly:)","identifier":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.init(exactly:)","identifier":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.init(exactly:)","identifier":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s6UInt16V10FoundationE20unicodeScalarLiteralABs7UnicodeO0D0V_tcfc","target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE12littleEndianxvp::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.littleEndian","identifier":"s:s17FixedWidthIntegerPsE12littleEndianxvp"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE12littleEndianxvp::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.littleEndian","identifier":"s:s17FixedWidthIntegerPsE12littleEndianxvp"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE12littleEndianxvp::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.littleEndian","identifier":"s:s17FixedWidthIntegerPsE12littleEndianxvp"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE12littleEndianxvp::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.littleEndian","identifier":"s:s17FixedWidthIntegerPsE12littleEndianxvp"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE12littleEndianxvp::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.littleEndian","identifier":"s:s17FixedWidthIntegerPsE12littleEndianxvp"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.init(exactly:)","identifier":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE12littleEndianxvp::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.littleEndian","identifier":"s:s17FixedWidthIntegerPsE12littleEndianxvp"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.init(exactly:)","identifier":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE12littleEndianxvp::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.littleEndian","identifier":"s:s17FixedWidthIntegerPsE12littleEndianxvp"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SzsE1xoiyxx_xtFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"BinaryInteger.^(_:_:)","identifier":"s:SzsE1xoiyxx_xtFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE12littleEndianxvp::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.littleEndian","identifier":"s:s17FixedWidthIntegerPsE12littleEndianxvp"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SzsE1xoiyxx_xtFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"BinaryInteger.^(_:_:)","identifier":"s:SzsE1xoiyxx_xtFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SzsE1xoiyxx_xtFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"BinaryInteger.^(_:_:)","identifier":"s:SzsE1xoiyxx_xtFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SzsE1xoiyxx_xtFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"BinaryInteger.^(_:_:)","identifier":"s:SzsE1xoiyxx_xtFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SzsE1xoiyxx_xtFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"BinaryInteger.^(_:_:)","identifier":"s:SzsE1xoiyxx_xtFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SzsE1ooiyxx_xtFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"BinaryInteger.|(_:_:)","identifier":"s:SzsE1ooiyxx_xtFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SzsE1ooiyxx_xtFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"BinaryInteger.|(_:_:)","identifier":"s:SzsE1ooiyxx_xtFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SzsE1xoiyxx_xtFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"BinaryInteger.^(_:_:)","identifier":"s:SzsE1xoiyxx_xtFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:Sw10FoundationE15withUnsafeBytesyxxSWKXEKlF","sourceOrigin":{"displayName":"ContiguousBytes.withUnsafeBytes(_:)","identifier":"s:10Foundation15ContiguousBytesP010withUnsafeC0yqd__qd__SWKXEKlF"},"target":"s:Sw","targetFallback":"Swift.UnsafeMutableRawBufferPointer"},{"kind":"memberOf","source":"s:SzsE1ooiyxx_xtFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"BinaryInteger.|(_:_:)","identifier":"s:SzsE1ooiyxx_xtFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SzsE1xoiyxx_xtFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"BinaryInteger.^(_:_:)","identifier":"s:SzsE1xoiyxx_xtFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.init(bigEndian:)","identifier":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.init(bigEndian:)","identifier":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.init(bigEndian:)","identifier":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.init(bigEndian:)","identifier":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.init(bigEndian:)","identifier":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.&<<=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.&<<=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.init(bigEndian:)","identifier":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SzsE1ooiyxx_xtFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"BinaryInteger.|(_:_:)","identifier":"s:SzsE1ooiyxx_xtFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.&<<=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.&<<=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.init(bigEndian:)","identifier":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.&<<=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"BinaryInteger.quotientAndRemainder(dividingBy:)","identifier":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"BinaryInteger.quotientAndRemainder(dividingBy:)","identifier":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SzsE1ooiyxx_xtFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"BinaryInteger.|(_:_:)","identifier":"s:SzsE1ooiyxx_xtFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"BinaryInteger.quotientAndRemainder(dividingBy:)","identifier":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"BinaryInteger.quotientAndRemainder(dividingBy:)","identifier":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"BinaryInteger.quotientAndRemainder(dividingBy:)","identifier":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.&<<=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"BinaryInteger.quotientAndRemainder(dividingBy:)","identifier":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"BinaryInteger.quotientAndRemainder(dividingBy:)","identifier":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SzsE1ooiyxx_xtFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"BinaryInteger.|(_:_:)","identifier":"s:SzsE1ooiyxx_xtFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"BinaryInteger.quotientAndRemainder(dividingBy:)","identifier":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.&<<=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SzsE1xoiyxx_xtFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"BinaryInteger.^(_:_:)","identifier":"s:SzsE1xoiyxx_xtFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.init(littleEndian:)","identifier":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.init(littleEndian:)","identifier":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SS10FoundationE8EncodingV9iso2022JPACvpZ","target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE03bitB0Sivp::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.bitWidth","identifier":"s:s17FixedWidthIntegerPsE03bitB0Sivp"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE03bitB0Sivp::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.bitWidth","identifier":"s:s17FixedWidthIntegerPsE03bitB0Sivp"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.init(littleEndian:)","identifier":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SUsE8isSignedSbvpZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"UnsignedInteger.isSigned","identifier":"s:SUsE8isSignedSbvpZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE03bitB0Sivp::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.bitWidth","identifier":"s:s17FixedWidthIntegerPsE03bitB0Sivp"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE03bitB0Sivp::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.bitWidth","identifier":"s:s17FixedWidthIntegerPsE03bitB0Sivp"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE03bitB0Sivp::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.bitWidth","identifier":"s:s17FixedWidthIntegerPsE03bitB0Sivp"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.init(littleEndian:)","identifier":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"BinaryInteger.>>(_:_:)","identifier":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"BinaryInteger.>>(_:_:)","identifier":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s4Int8V10FoundationE10truncatingAbC8NSNumberC_tcfc","target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"BinaryInteger.>>(_:_:)","identifier":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"BinaryInteger.>>(_:_:)","identifier":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"BinaryInteger.>>(_:_:)","identifier":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"conformsTo","source":"s:SR","swiftConstraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"target":"s:10Foundation15ContiguousBytesP"},{"kind":"memberOf","source":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"BinaryInteger.>>(_:_:)","identifier":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.init(littleEndian:)","identifier":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.init(bigEndian:)","identifier":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"BinaryInteger.>>(_:_:)","identifier":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SUsE8isSignedSbvpZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"UnsignedInteger.isSigned","identifier":"s:SUsE8isSignedSbvpZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SzsE1ooiyxx_xtFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"BinaryInteger.|(_:_:)","identifier":"s:SzsE1ooiyxx_xtFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SUsE8isSignedSbvpZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"UnsignedInteger.isSigned","identifier":"s:SUsE8isSignedSbvpZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SzsE1ooiyxx_xtFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"BinaryInteger.|(_:_:)","identifier":"s:SzsE1ooiyxx_xtFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"BinaryInteger.>>(_:_:)","identifier":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SzsE1ooiyxx_xtFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"BinaryInteger.|(_:_:)","identifier":"s:SzsE1ooiyxx_xtFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.init(littleEndian:)","identifier":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SzsE1xoiyxx_xtFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"BinaryInteger.^(_:_:)","identifier":"s:SzsE1xoiyxx_xtFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE03bitB0Sivp::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.bitWidth","identifier":"s:s17FixedWidthIntegerPsE03bitB0Sivp"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE03bitB0Sivp::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.bitWidth","identifier":"s:s17FixedWidthIntegerPsE03bitB0Sivp"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"BinaryInteger.>>(_:_:)","identifier":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.init(littleEndian:)","identifier":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.&<<=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE03bitB0Sivp::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.bitWidth","identifier":"s:s17FixedWidthIntegerPsE03bitB0Sivp"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.init(littleEndian:)","identifier":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.init(bigEndian:)","identifier":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.&<<=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE03bitB0Sivp::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.bitWidth","identifier":"s:s17FixedWidthIntegerPsE03bitB0Sivp"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SzsE1xoiyxx_xtFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"BinaryInteger.^(_:_:)","identifier":"s:SzsE1xoiyxx_xtFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:s5ErrorP10FoundationE20localizedDescriptionSSvp::SYNTHESIZED::s:s13EncodingErrorO","sourceOrigin":{"displayName":"Error.localizedDescription","identifier":"s:s5ErrorP10FoundationE20localizedDescriptionSSvp"},"target":"s:s13EncodingErrorO","targetFallback":"Swift.EncodingError"},{"kind":"memberOf","source":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"BinaryInteger.>>(_:_:)","identifier":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:Sd10FoundationE7exactlySdSgAA8NSNumberC_tcfc","target":"s:Sd","targetFallback":"Swift.Double"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.init(littleEndian:)","identifier":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s5ErrorP10FoundationE20localizedDescriptionSSvp::SYNTHESIZED::s:s13DecodingErrorO","sourceOrigin":{"displayName":"Error.localizedDescription","identifier":"s:s5ErrorP10FoundationE20localizedDescriptionSSvp"},"target":"s:s13DecodingErrorO","targetFallback":"Swift.DecodingError"},{"kind":"memberOf","source":"s:Sn10FoundationSzRzrlEySnyxGSgAA8_NSRangeVcfc","target":"s:Sn","targetFallback":"Swift.Range"},{"kind":"memberOf","source":"s:SUsE8isSignedSbvpZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"UnsignedInteger.isSigned","identifier":"s:SUsE8isSignedSbvpZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.&<<=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:Sd10FoundationE10truncatingSdAA8NSNumberC_tcfc","target":"s:Sd","targetFallback":"Swift.Double"},{"kind":"memberOf","source":"s:s4Int8V10FoundationE7exactlyABSgAC8NSNumberC_tcfc","target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:Sn10FoundationSiRszrlEySnySiGSgAA8_NSRangeVcfc","target":"s:Sn","targetFallback":"Swift.Range"},{"kind":"memberOf","source":"s:Sd10FoundationEySdAA8NSNumberCcfc","target":"s:Sd","targetFallback":"Swift.Double"},{"kind":"memberOf","source":"s:Sn10FoundationSS5IndexVRszrlE_2inSnyACGSgqd___qd_0_tcSXRd__SyRd_0_AA16AttributedStringVABV5BoundRtd__r0_lufc","target":"s:Sn","targetFallback":"Swift.Range"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.init(littleEndian:)","identifier":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE12littleEndianxvp::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.littleEndian","identifier":"s:s17FixedWidthIntegerPsE12littleEndianxvp"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"BinaryInteger.quotientAndRemainder(dividingBy:)","identifier":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE03bitB0Sivp::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.bitWidth","identifier":"s:s17FixedWidthIntegerPsE03bitB0Sivp"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SzsE1ooiyxx_xtFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"BinaryInteger.|(_:_:)","identifier":"s:SzsE1ooiyxx_xtFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SS10FoundationE8EncodingV13windowsCP1250ACvpZ","target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:Sy10FoundationE41precomposedStringWithCompatibilityMappingSSvp","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:SzsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"BinaryInteger.<<(_:_:)","identifier":"s:SzsE2lloiyxx_qd__tSzRd__lFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:Sy10FoundationE37precomposedStringWithCanonicalMappingSSvp","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"BinaryInteger.quotientAndRemainder(dividingBy:)","identifier":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.init(bigEndian:)","identifier":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SzsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"BinaryInteger.<<(_:_:)","identifier":"s:SzsE2lloiyxx_qd__tSzRd__lFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"conformsTo","source":"s:s8RepeatedV","swiftConstraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"target":"s:10Foundation12DataProtocolP"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.init(exactly:)","identifier":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SzsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"BinaryInteger.<<(_:_:)","identifier":"s:SzsE2lloiyxx_qd__tSzRd__lFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"conformsTo","source":"s:s10ArraySliceV","swiftConstraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"target":"s:10Foundation12DataProtocolP"},{"kind":"conformsTo","source":"s:s15ContiguousArrayV","swiftConstraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"target":"s:10Foundation12DataProtocolP"},{"kind":"memberOf","source":"s:SzsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"BinaryInteger.<<(_:_:)","identifier":"s:SzsE2lloiyxx_qd__tSzRd__lFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:SzsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"BinaryInteger.<<(_:_:)","identifier":"s:SzsE2lloiyxx_qd__tSzRd__lFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SUsE8isSignedSbvpZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"UnsignedInteger.isSigned","identifier":"s:SUsE8isSignedSbvpZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SzsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"BinaryInteger.<<(_:_:)","identifier":"s:SzsE2lloiyxx_qd__tSzRd__lFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s5ErrorP10FoundationE20localizedDescriptionSSvp","target":"s:s5ErrorP","targetFallback":"Swift.Error"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:)","identifier":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SS10FoundationE22defaultCStringEncodingSSAAE0D0VvpZ","target":"s:SS","targetFallback":"Swift.String"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:)","identifier":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"conformsTo","source":"s:s10ArraySliceV","swiftConstraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"target":"s:10Foundation15ContiguousBytesP"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:)","identifier":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:)","identifier":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s5Int32V10FoundationE7exactlyABSgAC8NSNumberC_tcfc","target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:)","identifier":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.&*=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.&*=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.&*=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.&*=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.&*=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.&*=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SzsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"BinaryInteger.<<(_:_:)","identifier":"s:SzsE2lloiyxx_qd__tSzRd__lFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:)","identifier":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.&*=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s5Int32V10FoundationEyAbC8NSNumberCcfc","target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:)","identifier":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.&*=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:)","identifier":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SzsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"BinaryInteger.<<(_:_:)","identifier":"s:SzsE2lloiyxx_qd__tSzRd__lFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:)","identifier":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.&*=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s5Int32V10FoundationE10truncatingAbC8NSNumberC_tcfc","target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:Sn10FoundationSS5IndexVRszrlE_2inSnyACGSgAA8_NSRangeV_SStcfc","target":"s:Sn","targetFallback":"Swift.Range"},{"kind":"memberOf","source":"s:SzsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"BinaryInteger.<<(_:_:)","identifier":"s:SzsE2lloiyxx_qd__tSzRd__lFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SS10FoundationE18EnumerationOptionsa","target":"s:SS","targetFallback":"Swift.String"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.&*=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:)","identifier":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:Sy10FoundationE20maximumLengthOfBytes5usingSiSSAAE8EncodingV_tF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:SS10FoundationE8EncodingV13windowsCP1254ACvpZ","target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:SzsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"BinaryInteger.<<(_:_:)","identifier":"s:SzsE2lloiyxx_qd__tSzRd__lFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:Sy10FoundationE10lowercased4withSSAA6LocaleVSg_tF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:SUss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"UnsignedInteger.init(exactly:)","identifier":"s:SUss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SUss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"UnsignedInteger.init(exactly:)","identifier":"s:SUss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SUss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"UnsignedInteger.init(exactly:)","identifier":"s:SUss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SUss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"UnsignedInteger.init(exactly:)","identifier":"s:SUss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SUss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"UnsignedInteger.init(exactly:)","identifier":"s:SUss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SS10FoundationE8EncodingV10macOSRomanACvpZ","target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:SS10FoundationE6format9argumentsS2Sh_Says7CVarArg_pGhtcfc","target":"s:SS","targetFallback":"Swift.String"},{"kind":"memberOf","source":"s:s5SliceV10FoundationAC12DataProtocolRzrlE7regionsSay7Regions_7Element11SubSequenceSlQZGvp","sourceOrigin":{"displayName":"DataProtocol.regions","identifier":"s:10Foundation12DataProtocolP7regions7RegionsQzvp"},"target":"s:s5SliceV","targetFallback":"Swift.Slice"},{"kind":"memberOf","source":"s:Sy10FoundationE16localizedCompareyAA16ComparisonResultOqd__SyRd__lF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:SzsE2neoiySbx_xtFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"BinaryInteger.!=(_:_:)","identifier":"s:SzsE2neoiySbx_xtFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SzsE2neoiySbx_xtFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"BinaryInteger.!=(_:_:)","identifier":"s:SzsE2neoiySbx_xtFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SzsE2neoiySbx_xtFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"BinaryInteger.!=(_:_:)","identifier":"s:SzsE2neoiySbx_xtFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SzsE2neoiySbx_xtFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"BinaryInteger.!=(_:_:)","identifier":"s:SzsE2neoiySbx_xtFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:SzsE2neoiySbx_xtFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"BinaryInteger.!=(_:_:)","identifier":"s:SzsE2neoiySbx_xtFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SzsE2neoiySbx_xtFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"BinaryInteger.!=(_:_:)","identifier":"s:SzsE2neoiySbx_xtFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SzsE2neoiySbx_xtFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"BinaryInteger.!=(_:_:)","identifier":"s:SzsE2neoiySbx_xtFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SzsE2neoiySbx_xtFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"BinaryInteger.!=(_:_:)","identifier":"s:SzsE2neoiySbx_xtFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:Sy10FoundationE18localizedUppercaseSSvp","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:SzsE2neoiySbx_xtFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"BinaryInteger.!=(_:_:)","identifier":"s:SzsE2neoiySbx_xtFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SzsE2neoiySbx_xtFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"BinaryInteger.!=(_:_:)","identifier":"s:SzsE2neoiySbx_xtFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:s24UnkeyedEncodingContainerP10FoundationE6encode_13configurationyqd___qd_0_mtKAC26EncodableWithConfigurationRd__AC0bI9ProvidingRd_0_0bI0Qyd_0_AHRtd__r0_lF","target":"s:s24UnkeyedEncodingContainerP","targetFallback":"Swift.UnkeyedEncodingContainer"},{"kind":"memberOf","source":"s:SS10FoundationE6format_S2Sh_s7CVarArg_pdtcfc","target":"s:SS","targetFallback":"Swift.String"},{"kind":"memberOf","source":"s:SS10FoundationEySSs5SliceVyAA16AttributedStringV13CharacterViewVGcfc","target":"s:SS","targetFallback":"Swift.String"},{"kind":"memberOf","source":"s:10Foundation19MutableDataProtocolPAAE10resetBytes2inyqd___tSXRd__5BoundQyd__5IndexRtzlF::SYNTHESIZED::s:s15ContiguousArrayV","sourceOrigin":{"displayName":"MutableDataProtocol.resetBytes(in:)","identifier":"s:10Foundation19MutableDataProtocolP10resetBytes2inyqd___tSXRd__5BoundQyd__5IndexRtzlF"},"target":"s:s15ContiguousArrayV","targetFallback":"Swift.ContiguousArray"},{"kind":"memberOf","source":"s:s4Int8V10FoundationEyAbC7CGFloatVcfc","target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SzsE2geoiySbx_xtFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"Comparable.>=(_:_:)","identifier":"s:SL2geoiySbx_xtFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SS10FoundationE4data8encodingSSSgAA4DataVh_SSAAE8EncodingVtcfc","target":"s:SS","targetFallback":"Swift.String"},{"kind":"memberOf","source":"s:10Foundation19MutableDataProtocolPAAE10resetBytes2inyqd___tSXRd__5BoundQyd__5IndexRtzlF::SYNTHESIZED::s:Sa","sourceOrigin":{"displayName":"MutableDataProtocol.resetBytes(in:)","identifier":"s:10Foundation19MutableDataProtocolP10resetBytes2inyqd___tSXRd__5BoundQyd__5IndexRtzlF"},"target":"s:Sa","targetFallback":"Swift.Array"},{"kind":"memberOf","source":"s:SzsE2geoiySbx_xtFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"Comparable.>=(_:_:)","identifier":"s:SL2geoiySbx_xtFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SzsE2geoiySbx_xtFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"Comparable.>=(_:_:)","identifier":"s:SL2geoiySbx_xtFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SzsE2geoiySbx_xtFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"Comparable.>=(_:_:)","identifier":"s:SL2geoiySbx_xtFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SzsE2geoiySbx_xtFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"Comparable.>=(_:_:)","identifier":"s:SL2geoiySbx_xtFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SzsE2geoiySbx_xtFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"Comparable.>=(_:_:)","identifier":"s:SL2geoiySbx_xtFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s8RepeatedV10Foundations5UInt8VRszlE7Regionsa","sourceOrigin":{"displayName":"DataProtocol.Regions","identifier":"s:10Foundation12DataProtocolP7RegionsQa"},"target":"s:s8RepeatedV","targetFallback":"Swift.Repeated"},{"kind":"memberOf","source":"s:SzsE2geoiySbx_xtFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"Comparable.>=(_:_:)","identifier":"s:SL2geoiySbx_xtFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SzsE2geoiySbx_xtFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"Comparable.>=(_:_:)","identifier":"s:SL2geoiySbx_xtFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:SzsE2geoiySbx_xtFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"Comparable.>=(_:_:)","identifier":"s:SL2geoiySbx_xtFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SUsE9magnitudexvp::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"UnsignedInteger.magnitude","identifier":"s:SUsE9magnitudexvp"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:Sy10FoundationE18trimmingCharacters2inSSAA12CharacterSetV_tF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:SUsE9magnitudexvp::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"UnsignedInteger.magnitude","identifier":"s:SUsE9magnitudexvp"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SUsE9magnitudexvp::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"UnsignedInteger.magnitude","identifier":"s:SUsE9magnitudexvp"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SzsE2leoiySbx_xtFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"Comparable.<=(_:_:)","identifier":"s:SL2leoiySbx_xtFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SzsE2leoiySbx_xtFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"Comparable.<=(_:_:)","identifier":"s:SL2leoiySbx_xtFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"ExpressibleByIntegerLiteral.init(integerLiteral:)","identifier":"s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SzsE2leoiySbx_xtFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"Comparable.<=(_:_:)","identifier":"s:SL2leoiySbx_xtFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SzsE2leoiySbx_xtFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"Comparable.<=(_:_:)","identifier":"s:SL2leoiySbx_xtFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SzsE2leoiySbx_xtFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"Comparable.<=(_:_:)","identifier":"s:SL2leoiySbx_xtFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"ExpressibleByIntegerLiteral.init(integerLiteral:)","identifier":"s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"ExpressibleByIntegerLiteral.init(integerLiteral:)","identifier":"s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"ExpressibleByIntegerLiteral.init(integerLiteral:)","identifier":"s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"ExpressibleByIntegerLiteral.init(integerLiteral:)","identifier":"s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SzsE2leoiySbx_xtFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"Comparable.<=(_:_:)","identifier":"s:SL2leoiySbx_xtFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s8RepeatedV10Foundations5UInt8VRszlE7regionsAByAC4DataVGvp","sourceOrigin":{"displayName":"DataProtocol.regions","identifier":"s:10Foundation12DataProtocolP7regions7RegionsQzvp"},"target":"s:s8RepeatedV","targetFallback":"Swift.Repeated"},{"kind":"memberOf","source":"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"ExpressibleByIntegerLiteral.init(integerLiteral:)","identifier":"s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SUsE9magnitudexvp::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"UnsignedInteger.magnitude","identifier":"s:SUsE9magnitudexvp"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SzsE2leoiySbx_xtFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"Comparable.<=(_:_:)","identifier":"s:SL2leoiySbx_xtFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:SzsE2leoiySbx_xtFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"Comparable.<=(_:_:)","identifier":"s:SL2leoiySbx_xtFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"ExpressibleByIntegerLiteral.init(integerLiteral:)","identifier":"s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"ExpressibleByIntegerLiteral.init(integerLiteral:)","identifier":"s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:SzsE2leoiySbx_xtFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"Comparable.<=(_:_:)","identifier":"s:SL2leoiySbx_xtFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SUsE9magnitudexvp::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"UnsignedInteger.magnitude","identifier":"s:SUsE9magnitudexvp"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"ExpressibleByIntegerLiteral.init(integerLiteral:)","identifier":"s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"ExpressibleByIntegerLiteral.init(integerLiteral:)","identifier":"s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SzsE2geoiySbx_xtFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"Comparable.>=(_:_:)","identifier":"s:SL2geoiySbx_xtFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SS10FoundationE7cString8encodingSSSgSPys4Int8VG_SSAAE8EncodingVtcfc","target":"s:SS","targetFallback":"Swift.String"},{"kind":"memberOf","source":"s:SzsE2leoiySbx_xtFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"Comparable.<=(_:_:)","identifier":"s:SL2leoiySbx_xtFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:s6UInt16V10FoundationEyAbC7CGFloatVcfc","target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SzsE8advanced2byxSi_tF::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"BinaryInteger.advanced(by:)","identifier":"s:SzsE8advanced2byxSi_tF"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SzsE8advanced2byxSi_tF::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"BinaryInteger.advanced(by:)","identifier":"s:SzsE8advanced2byxSi_tF"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SzsE8advanced2byxSi_tF::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"BinaryInteger.advanced(by:)","identifier":"s:SzsE8advanced2byxSi_tF"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:SzsE8advanced2byxSi_tF::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"BinaryInteger.advanced(by:)","identifier":"s:SzsE8advanced2byxSi_tF"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SzsE8advanced2byxSi_tF::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"BinaryInteger.advanced(by:)","identifier":"s:SzsE8advanced2byxSi_tF"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SS10FoundationE10contentsOfSSAA3URLVh_tKcfc","target":"s:SS","targetFallback":"Swift.String"},{"kind":"memberOf","source":"s:SzsE8advanced2byxSi_tF::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"BinaryInteger.advanced(by:)","identifier":"s:SzsE8advanced2byxSi_tF"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SzsE8distance2toSix_tF::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"BinaryInteger.distance(to:)","identifier":"s:SzsE8distance2toSix_tF"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SzsE8distance2toSix_tF::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"BinaryInteger.distance(to:)","identifier":"s:SzsE8distance2toSix_tF"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s5Int16V10FoundationE7exactlyABSgAC8NSNumberC_tcfc","target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SzsE8distance2toSix_tF::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"BinaryInteger.distance(to:)","identifier":"s:SzsE8distance2toSix_tF"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SzsE8distance2toSix_tF::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"BinaryInteger.distance(to:)","identifier":"s:SzsE8distance2toSix_tF"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SzsE8distance2toSix_tF::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"BinaryInteger.distance(to:)","identifier":"s:SzsE8distance2toSix_tF"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SzsE8distance2toSix_tF::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"BinaryInteger.distance(to:)","identifier":"s:SzsE8distance2toSix_tF"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SzsE8distance2toSix_tF::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"BinaryInteger.distance(to:)","identifier":"s:SzsE8distance2toSix_tF"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:SzsE8advanced2byxSi_tF::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"BinaryInteger.advanced(by:)","identifier":"s:SzsE8advanced2byxSi_tF"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SzsE8distance2toSix_tF::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"BinaryInteger.distance(to:)","identifier":"s:SzsE8distance2toSix_tF"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s5SliceV10FoundationAC15ContiguousBytesRzrlE010withUnsafeD0yqd__qd__SWKXEKlF","sourceOrigin":{"displayName":"ContiguousBytes.withUnsafeBytes(_:)","identifier":"s:10Foundation15ContiguousBytesP010withUnsafeC0yqd__qd__SWKXEKlF"},"target":"s:s5SliceV","targetFallback":"Swift.Slice"},{"kind":"memberOf","source":"s:SzsE8advanced2byxSi_tF::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"BinaryInteger.advanced(by:)","identifier":"s:SzsE8advanced2byxSi_tF"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:Sy10FoundationE5write2to10atomically8encodingyAA3URLV_SbSSAAE8EncodingVtKF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:SzsE1goiySbx_xtFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"Comparable.>(_:_:)","identifier":"s:SL1goiySbx_xtFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SzsE8advanced2byxSi_tF::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"BinaryInteger.advanced(by:)","identifier":"s:SzsE8advanced2byxSi_tF"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SS10FoundationE10contentsOf12usedEncodingSSAA3URLVh_SSAAE0E0VztKcfc","target":"s:SS","targetFallback":"Swift.String"},{"kind":"memberOf","source":"s:SzsE1goiySbx_xtFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"Comparable.>(_:_:)","identifier":"s:SL1goiySbx_xtFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SzsE1goiySbx_xtFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"Comparable.>(_:_:)","identifier":"s:SL1goiySbx_xtFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SzsE1goiySbx_xtFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"Comparable.>(_:_:)","identifier":"s:SL1goiySbx_xtFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SzsE1goiySbx_xtFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"Comparable.>(_:_:)","identifier":"s:SL1goiySbx_xtFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SzsE1goiySbx_xtFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"Comparable.>(_:_:)","identifier":"s:SL1goiySbx_xtFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SzsE1goiySbx_xtFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"Comparable.>(_:_:)","identifier":"s:SL1goiySbx_xtFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SzsE1goiySbx_xtFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"Comparable.>(_:_:)","identifier":"s:SL1goiySbx_xtFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:SzsE1goiySbx_xtFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"Comparable.>(_:_:)","identifier":"s:SL1goiySbx_xtFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SzsE8distance2toSix_tF::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"BinaryInteger.distance(to:)","identifier":"s:SzsE8distance2toSix_tF"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SzsE1goiySbx_xtFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"Comparable.>(_:_:)","identifier":"s:SL1goiySbx_xtFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:Sy10FoundationE10uppercased4withSSAA6LocaleVSg_tF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:SZsE8isSignedSbvpZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"SignedInteger.isSigned","identifier":"s:SZsE8isSignedSbvpZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SZsE8isSignedSbvpZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"SignedInteger.isSigned","identifier":"s:SZsE8isSignedSbvpZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SZsE8isSignedSbvpZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"SignedInteger.isSigned","identifier":"s:SZsE8isSignedSbvpZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SZsE8isSignedSbvpZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"SignedInteger.isSigned","identifier":"s:SZsE8isSignedSbvpZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s5Int16V10FoundationE10truncatingAbC8NSNumberC_tcfc","target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SZsE8isSignedSbvpZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"SignedInteger.isSigned","identifier":"s:SZsE8isSignedSbvpZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SS10FoundationE10contentsOf8encodingSSAA3URLVh_SSAAE8EncodingVtKcfc","target":"s:SS","targetFallback":"Swift.String"},{"kind":"memberOf","source":"s:s5Int16V10FoundationEyAbC7CGFloatVcfc","target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s5SliceV10FoundationAC12DataProtocolRzrlE7Regionsa","sourceOrigin":{"displayName":"DataProtocol.Regions","identifier":"s:10Foundation12DataProtocolP7RegionsQa"},"target":"s:s5SliceV","targetFallback":"Swift.Slice"},{"kind":"memberOf","source":"s:s24UnkeyedEncodingContainerP10FoundationE6encode_13configurationyqd___0B13ConfigurationQyd__tKAC013EncodableWithG0Rd__lF","target":"s:s24UnkeyedEncodingContainerP","targetFallback":"Swift.UnkeyedEncodingContainer"},{"kind":"memberOf","source":"s:Sy10FoundationE5write6toFile10atomically8encodingyqd___SbSSAAE8EncodingVtKSyRd__lF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"conformsTo","source":"s:SS10FoundationE8EncodingV","target":"s:SY","targetFallback":"Swift.RawRepresentable"},{"kind":"memberOf","source":"s:s5Int16V10FoundationEyAbC8NSNumberCcfc","target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SS10FoundationE14contentsOfFileS2Sh_tKcfc","target":"s:SS","targetFallback":"Swift.String"},{"kind":"memberOf","source":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:SS10FoundationE8EncodingV","sourceOrigin":{"displayName":"Equatable.!=(_:_:)","identifier":"s:SQsE2neoiySbx_xtFZ"},"target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:Sq10FoundationAA26EncodableWithConfigurationRzlE6encode2to13configurationys7Encoder_p_08EncodingD0QztKF","sourceOrigin":{"displayName":"EncodableWithConfiguration.encode(to:configuration:)","identifier":"s:10Foundation26EncodableWithConfigurationP6encode2to13configurationys7Encoder_p_08EncodingD0QztKF"},"target":"s:Sq","targetFallback":"Swift.Optional"},{"kind":"memberOf","source":"s:SzsE1loiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"BinaryInteger.<(_:_:)","identifier":"s:SzsE1loiySbx_qd__tSzRd__lFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SzsE1loiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"BinaryInteger.<(_:_:)","identifier":"s:SzsE1loiySbx_qd__tSzRd__lFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SD10FoundationAA18NSAttributedStringC3KeyVRszypRs_rlE_9includingSDyAEypGAA18AttributeContainerV_qd__mtKcAA0F5ScopeRd__lufc","target":"s:SD","targetFallback":"Swift.Dictionary"},{"kind":"memberOf","source":"s:SzsE1loiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"BinaryInteger.<(_:_:)","identifier":"s:SzsE1loiySbx_qd__tSzRd__lFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SzsE1loiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"BinaryInteger.<(_:_:)","identifier":"s:SzsE1loiySbx_qd__tSzRd__lFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SzsE1loiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"BinaryInteger.<(_:_:)","identifier":"s:SzsE1loiySbx_qd__tSzRd__lFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SzsE1loiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"BinaryInteger.<(_:_:)","identifier":"s:SzsE1loiySbx_qd__tSzRd__lFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:Sy10FoundationE7padding8toLength7withPad10startingAtSSSi_qd__SitSyRd__lF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:SzsE1loiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"BinaryInteger.<(_:_:)","identifier":"s:SzsE1loiySbx_qd__tSzRd__lFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SzsE1loiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"BinaryInteger.<(_:_:)","identifier":"s:SzsE1loiySbx_qd__tSzRd__lFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SzsE1loiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"BinaryInteger.<(_:_:)","identifier":"s:SzsE1loiySbx_qd__tSzRd__lFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s24UnkeyedDecodingContainerP10FoundationE15decodeIfPresent_13configurationqd__Sgqd__m_qd_0_mtKAC26DecodableWithConfigurationRd__AC0bK9ProvidingRd_0_0bK0Qyd_0_AIRtd__r0_lF","target":"s:s24UnkeyedDecodingContainerP","targetFallback":"Swift.UnkeyedDecodingContainer"},{"kind":"memberOf","source":"s:s6UInt64V10FoundationE10truncatingAbC8NSNumberC_tcfc","target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SzsE1loiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"BinaryInteger.<(_:_:)","identifier":"s:SzsE1loiySbx_qd__tSzRd__lFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:Sy10FoundationE23removingPercentEncodingSSSgvp","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:SD10FoundationAA18NSAttributedStringC3KeyVRszypRs_rlE_9includingSDyAEypGAA18AttributeContainerV_s0D4PathCyAA0F6ScopesOqd__mGtKcAA0F5ScopeRd__lufc","target":"s:SD","targetFallback":"Swift.Dictionary"},{"kind":"memberOf","source":"s:s6UInt64V10FoundationEyAbC8NSNumberCcfc","target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s6UInt32V10FoundationEyAbC8NSNumberCcfc","target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s22KeyedDecodingContainerV10FoundationE15decodeIfPresent_6forKey13configurationqd__Sgqd__m_x0B13ConfigurationQyd__tKAC013DecodableWithK0Rd__lF","target":"s:s22KeyedDecodingContainerV","targetFallback":"Swift.KeyedDecodingContainer"},{"kind":"memberOf","source":"s:Sq10FoundationAA26DecodableWithConfigurationRzlE4from13configurationxSgs7Decoder_p_08DecodingD0QztKcfc","sourceOrigin":{"displayName":"DecodableWithConfiguration.init(from:configuration:)","identifier":"s:10Foundation26DecodableWithConfigurationP4from13configurationxs7Decoder_p_08DecodingD0QztKcfc"},"target":"s:Sq","targetFallback":"Swift.Optional"},{"kind":"memberOf","source":"s:SzsE2leoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"BinaryInteger.<=(_:_:)","identifier":"s:SzsE2leoiySbx_qd__tSzRd__lFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:Sy10FoundationE7folding7options6localeSSAA8NSStringC14CompareOptionsV_AA6LocaleVSgtF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:SzsE2leoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"BinaryInteger.<=(_:_:)","identifier":"s:SzsE2leoiySbx_qd__tSzRd__lFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SzsE2leoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"BinaryInteger.<=(_:_:)","identifier":"s:SzsE2leoiySbx_qd__tSzRd__lFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SzsE2leoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"BinaryInteger.<=(_:_:)","identifier":"s:SzsE2leoiySbx_qd__tSzRd__lFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SzsE2leoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"BinaryInteger.<=(_:_:)","identifier":"s:SzsE2leoiySbx_qd__tSzRd__lFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SzsE2leoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"BinaryInteger.<=(_:_:)","identifier":"s:SzsE2leoiySbx_qd__tSzRd__lFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SzsE2leoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"BinaryInteger.<=(_:_:)","identifier":"s:SzsE2leoiySbx_qd__tSzRd__lFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SzsE2leoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"BinaryInteger.<=(_:_:)","identifier":"s:SzsE2leoiySbx_qd__tSzRd__lFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s15EmptyCollectionV10Foundations5UInt8VRszlE15withUnsafeBytesyqd__qd__SWKXEKlF","sourceOrigin":{"displayName":"ContiguousBytes.withUnsafeBytes(_:)","identifier":"s:10Foundation15ContiguousBytesP010withUnsafeC0yqd__qd__SWKXEKlF"},"target":"s:s15EmptyCollectionV","targetFallback":"Swift.EmptyCollection"},{"kind":"memberOf","source":"s:SzsE2leoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"BinaryInteger.<=(_:_:)","identifier":"s:SzsE2leoiySbx_qd__tSzRd__lFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s6UInt32V10FoundationE10truncatingAbC8NSNumberC_tcfc","target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SzsE2leoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"BinaryInteger.<=(_:_:)","identifier":"s:SzsE2leoiySbx_qd__tSzRd__lFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:s24UnkeyedDecodingContainerP10FoundationE6decode_13configurationqd__qd__m_qd_0_mtKAC26DecodableWithConfigurationRd__AC0bI9ProvidingRd_0_0bI0Qyd_0_AHRtd__r0_lF","target":"s:s24UnkeyedDecodingContainerP","targetFallback":"Swift.UnkeyedDecodingContainer"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.&>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.&>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.&>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.&>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.&>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.&>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.&>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.&>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s6UInt32V10FoundationE7exactlyABSgAC8NSNumberC_tcfc","target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.&>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.&>>(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SS10FoundationEySSAA8NSStringCcfc","target":"s:SS","targetFallback":"Swift.String"},{"kind":"memberOf","source":"s:SzsE2geoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"BinaryInteger.>=(_:_:)","identifier":"s:SzsE2geoiySbx_qd__tSzRd__lFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SzsE2geoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"BinaryInteger.>=(_:_:)","identifier":"s:SzsE2geoiySbx_qd__tSzRd__lFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SzsE2geoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"BinaryInteger.>=(_:_:)","identifier":"s:SzsE2geoiySbx_qd__tSzRd__lFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:SzsE2geoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"BinaryInteger.>=(_:_:)","identifier":"s:SzsE2geoiySbx_qd__tSzRd__lFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SzsE2geoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"BinaryInteger.>=(_:_:)","identifier":"s:SzsE2geoiySbx_qd__tSzRd__lFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:Sy10FoundationE20replacingOccurrences2of4with7options5rangeSSqd___qd_0_AA8NSStringC14CompareOptionsVSnySS5IndexVGSgtSyRd__SyRd_0_r0_lF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:SzsE2geoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"BinaryInteger.>=(_:_:)","identifier":"s:SzsE2geoiySbx_qd__tSzRd__lFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SzsE2geoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"BinaryInteger.>=(_:_:)","identifier":"s:SzsE2geoiySbx_qd__tSzRd__lFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SzsE2geoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"BinaryInteger.>=(_:_:)","identifier":"s:SzsE2geoiySbx_qd__tSzRd__lFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SzsE2geoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"BinaryInteger.>=(_:_:)","identifier":"s:SzsE2geoiySbx_qd__tSzRd__lFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SzsE2geoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"BinaryInteger.>=(_:_:)","identifier":"s:SzsE2geoiySbx_qd__tSzRd__lFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:s15EmptyCollectionV10Foundations5UInt8VRszlE7regionsAByAC4DataVGvp","sourceOrigin":{"displayName":"DataProtocol.regions","identifier":"s:10Foundation12DataProtocolP7regions7RegionsQzvp"},"target":"s:s15EmptyCollectionV","targetFallback":"Swift.EmptyCollection"},{"kind":"memberOf","source":"s:SS10FoundationE6format6locale9argumentsS2Sh_AA6LocaleVSghSays7CVarArg_pGhtcfc","target":"s:SS","targetFallback":"Swift.String"},{"kind":"memberOf","source":"s:s6UInt64V10FoundationE7exactlyABSgAC8NSNumberC_tcfc","target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s10ArraySliceV10Foundations5UInt8VRszlE7regionss15CollectionOfOneVyAByAEGGvp","sourceOrigin":{"displayName":"DataProtocol.regions","identifier":"s:10Foundation12DataProtocolP7regions7RegionsQzvp"},"target":"s:s10ArraySliceV","targetFallback":"Swift.ArraySlice"},{"kind":"memberOf","source":"s:s5UInt8V10FoundationEyAbC7CGFloatVcfc","target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SzsE1goiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"BinaryInteger.>(_:_:)","identifier":"s:SzsE1goiySbx_qd__tSzRd__lFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:Sy10FoundationE19replacingCharacters2in4withSSqd_0__qd__tSyRd__SXRd_0_SS5IndexV5BoundRtd_0_r0_lF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:SS10FoundationE6format6locale_S2Sh_AA6LocaleVSghs7CVarArg_pdtcfc","target":"s:SS","targetFallback":"Swift.String"},{"kind":"memberOf","source":"s:SzsE1goiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"BinaryInteger.>(_:_:)","identifier":"s:SzsE1goiySbx_qd__tSzRd__lFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:SzsE1goiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"BinaryInteger.>(_:_:)","identifier":"s:SzsE1goiySbx_qd__tSzRd__lFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SzsE1goiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"BinaryInteger.>(_:_:)","identifier":"s:SzsE1goiySbx_qd__tSzRd__lFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SzsE1goiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"BinaryInteger.>(_:_:)","identifier":"s:SzsE1goiySbx_qd__tSzRd__lFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SzsE1goiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"BinaryInteger.>(_:_:)","identifier":"s:SzsE1goiySbx_qd__tSzRd__lFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3ggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"BinaryInteger.>>=(_:_:)","identifier":"s:Sz3ggeoiyyxz_qd__tSzRd__lFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SzsE1goiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"BinaryInteger.>(_:_:)","identifier":"s:SzsE1goiySbx_qd__tSzRd__lFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3ggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"BinaryInteger.>>=(_:_:)","identifier":"s:Sz3ggeoiyyxz_qd__tSzRd__lFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3ggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"BinaryInteger.>>=(_:_:)","identifier":"s:Sz3ggeoiyyxz_qd__tSzRd__lFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3ggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"BinaryInteger.>>=(_:_:)","identifier":"s:Sz3ggeoiyyxz_qd__tSzRd__lFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3ggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"BinaryInteger.>>=(_:_:)","identifier":"s:Sz3ggeoiyyxz_qd__tSzRd__lFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3ggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"BinaryInteger.>>=(_:_:)","identifier":"s:Sz3ggeoiyyxz_qd__tSzRd__lFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SzsE1goiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"BinaryInteger.>(_:_:)","identifier":"s:SzsE1goiySbx_qd__tSzRd__lFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3ggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"BinaryInteger.>>=(_:_:)","identifier":"s:Sz3ggeoiyyxz_qd__tSzRd__lFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3ggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"BinaryInteger.>>=(_:_:)","identifier":"s:Sz3ggeoiyyxz_qd__tSzRd__lFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SzsE1goiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"BinaryInteger.>(_:_:)","identifier":"s:SzsE1goiySbx_qd__tSzRd__lFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3ggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"BinaryInteger.>>=(_:_:)","identifier":"s:Sz3ggeoiyyxz_qd__tSzRd__lFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s13SignedNumericPsE1sopyxxFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"SignedNumeric.-(_:)","identifier":"s:s13SignedNumericPsE1sopyxxFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SzsE1goiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"BinaryInteger.>(_:_:)","identifier":"s:SzsE1goiySbx_qd__tSzRd__lFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3ggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"BinaryInteger.>>=(_:_:)","identifier":"s:Sz3ggeoiyyxz_qd__tSzRd__lFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:Sy10FoundationE22caseInsensitiveCompareyAA16ComparisonResultOqd__SyRd__lF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:s13SignedNumericPsE1sopyxxFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"SignedNumeric.-(_:)","identifier":"s:s13SignedNumericPsE1sopyxxFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SS5IndexV10FoundationEyABSicfc","target":"s:SS5IndexV","targetFallback":"Swift.String.Index"},{"kind":"memberOf","source":"s:SS10FoundationE8EncodingV5asciiACvpZ","target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:s13SignedNumericPsE1sopyxxFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"SignedNumeric.-(_:)","identifier":"s:s13SignedNumericPsE1sopyxxFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s13SignedNumericPsE1sopyxxFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"SignedNumeric.-(_:)","identifier":"s:s13SignedNumericPsE1sopyxxFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s13SignedNumericPsE1sopyxxFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"SignedNumeric.-(_:)","identifier":"s:s13SignedNumericPsE1sopyxxFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SS10FoundationE13localizedName2ofS2SAAE8EncodingV_tFZ","target":"s:SS","targetFallback":"Swift.String"},{"kind":"memberOf","source":"s:Sy10FoundationE12getLineStart_3end11contentsEnd3forySpySS5IndexVG_A2Hqd__tSXRd__AG5BoundRtd__lF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:SS10FoundationE8EncodingV8nextstepACvpZ","target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:SS10FoundationE25localizedStringWithFormatyS2S_s7CVarArg_pdtFZ","target":"s:SS","targetFallback":"Swift.String"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSw_qd__tSXRd__5BoundQyd__5IndexRtzlF::SYNTHESIZED::s:s5SliceV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:from:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSw_qd__tSXRd__5BoundQyd__5IndexRtzlF"},"target":"s:s5SliceV","targetFallback":"Swift.Slice"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSw_qd__tSXRd__5BoundQyd__5IndexRtzlF::SYNTHESIZED::s:s10ArraySliceV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:from:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSw_qd__tSXRd__5BoundQyd__5IndexRtzlF"},"target":"s:s10ArraySliceV","targetFallback":"Swift.ArraySlice"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSw_qd__tSXRd__5BoundQyd__5IndexRtzlF::SYNTHESIZED::s:s15EmptyCollectionV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:from:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSw_qd__tSXRd__5BoundQyd__5IndexRtzlF"},"target":"s:s15EmptyCollectionV","targetFallback":"Swift.EmptyCollection"},{"kind":"memberOf","source":"s:SS10FoundationE8EncodingV11descriptionSSvp","sourceOrigin":{"displayName":"CustomStringConvertible.description","identifier":"s:s23CustomStringConvertibleP11descriptionSSvp"},"target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSw_qd__tSXRd__5BoundQyd__5IndexRtzlF::SYNTHESIZED::s:s8RepeatedV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:from:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSw_qd__tSXRd__5BoundQyd__5IndexRtzlF"},"target":"s:s8RepeatedV","targetFallback":"Swift.Repeated"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSw_qd__tSXRd__5BoundQyd__5IndexRtzlF::SYNTHESIZED::s:s15ContiguousArrayV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:from:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSw_qd__tSXRd__5BoundQyd__5IndexRtzlF"},"target":"s:s15ContiguousArrayV","targetFallback":"Swift.ContiguousArray"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSw_qd__tSXRd__5BoundQyd__5IndexRtzlF::SYNTHESIZED::s:SW","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:from:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSw_qd__tSXRd__5BoundQyd__5IndexRtzlF"},"target":"s:SW","targetFallback":"Swift.UnsafeRawBufferPointer"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSw_qd__tSXRd__5BoundQyd__5IndexRtzlF::SYNTHESIZED::s:SR","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:from:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSw_qd__tSXRd__5BoundQyd__5IndexRtzlF"},"target":"s:SR","targetFallback":"Swift.UnsafeBufferPointer"},{"kind":"memberOf","source":"s:SS10FoundationE10utf8StringSSSgSPys4Int8VG_tcfc","target":"s:SS","targetFallback":"Swift.String"},{"kind":"memberOf","source":"s:Sy10FoundationE11capitalized4withSSAA6LocaleVSg_tF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:s13SignedNumericPsE6negateyyF::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"SignedNumeric.negate()","identifier":"s:s13SignedNumericPsE6negateyyF"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s13SignedNumericPsE6negateyyF::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"SignedNumeric.negate()","identifier":"s:s13SignedNumericPsE6negateyyF"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s13SignedNumericPsE6negateyyF::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"SignedNumeric.negate()","identifier":"s:s13SignedNumericPsE6negateyyF"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s13SignedNumericPsE6negateyyF::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"SignedNumeric.negate()","identifier":"s:s13SignedNumericPsE6negateyyF"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSw_qd__tSXRd__5BoundQyd__5IndexRtzlF::SYNTHESIZED::s:Sa","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:from:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSw_qd__tSXRd__5BoundQyd__5IndexRtzlF"},"target":"s:Sa","targetFallback":"Swift.Array"},{"kind":"memberOf","source":"s:s13SignedNumericPsE6negateyyF::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"SignedNumeric.negate()","identifier":"s:s13SignedNumericPsE6negateyyF"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:s22KeyedEncodingContainerV10FoundationE6encode_6forKey13configurationyqd___xqd_0_mtKAC26EncodableWithConfigurationRd__AC0bK9ProvidingRd_0_0bK0Qyd_0_AIRtd__r0_lF","target":"s:s22KeyedEncodingContainerV","targetFallback":"Swift.KeyedEncodingContainer"},{"kind":"memberOf","source":"s:s15ContiguousArrayV10Foundations5UInt8VRszlE7regionss15CollectionOfOneVyAByAEGGvp","sourceOrigin":{"displayName":"DataProtocol.regions","identifier":"s:10Foundation12DataProtocolP7regions7RegionsQzvp"},"target":"s:s15ContiguousArrayV","targetFallback":"Swift.ContiguousArray"},{"kind":"memberOf","source":"s:Sy10FoundationE17getParagraphStart_3end11contentsEnd3forySpySS5IndexVG_A2Hqd__tSXRd__AG5BoundRtd__lF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:Sy10FoundationE20localizedCapitalizedSSvp","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:Sy10FoundationE9lineRange3forSnySS5IndexVGqd___tSXRd__AE5BoundRtd__lF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:Su10FoundationEySuAA8NSNumberCcfc","target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"AdditiveArithmetic.zero","identifier":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"AdditiveArithmetic.zero","identifier":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:Su10FoundationE10truncatingSuAA8NSNumberC_tcfc","target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"conformsTo","source":"s:Sq","swiftConstraints":[{"kind":"conformance","lhs":"Wrapped","rhs":"EncodableWithConfiguration","rhsPrecise":"s:10Foundation26EncodableWithConfigurationP"}],"target":"s:10Foundation26EncodableWithConfigurationP"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"AdditiveArithmetic.zero","identifier":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"AdditiveArithmetic.zero","identifier":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"AdditiveArithmetic.zero","identifier":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"AdditiveArithmetic.zero","identifier":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"AdditiveArithmetic.zero","identifier":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"AdditiveArithmetic.zero","identifier":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SS10FoundationE8EncodingV17utf32LittleEndianACvpZ","target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"AdditiveArithmetic.zero","identifier":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:Sy10FoundationE7compare_7options5range6localeAA16ComparisonResultOqd___AA8NSStringC14CompareOptionsVSnySS5IndexVGSgAA6LocaleVSgtSyRd__lF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"AdditiveArithmetic.zero","identifier":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:Su10FoundationE7exactlySuSgAA8NSNumberC_tcfc","target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SxsE1loiySbx_xtFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"Comparable.<(_:_:)","identifier":"s:SL1loiySbx_xtFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexRtzr0_lF::SYNTHESIZED::s:Sa","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:from:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexRtzr0_lF"},"target":"s:Sa","targetFallback":"Swift.Array"},{"kind":"memberOf","source":"s:SxsE1loiySbx_xtFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"Comparable.<(_:_:)","identifier":"s:SL1loiySbx_xtFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SxsE1loiySbx_xtFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"Comparable.<(_:_:)","identifier":"s:SL1loiySbx_xtFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SxsE1loiySbx_xtFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"Comparable.<(_:_:)","identifier":"s:SL1loiySbx_xtFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:SxsE1loiySbx_xtFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"Comparable.<(_:_:)","identifier":"s:SL1loiySbx_xtFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE1popyxxFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"AdditiveArithmetic.+(_:)","identifier":"s:s18AdditiveArithmeticPsE1popyxxFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE1popyxxFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"AdditiveArithmetic.+(_:)","identifier":"s:s18AdditiveArithmeticPsE1popyxxFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SxsE1loiySbx_xtFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"Comparable.<(_:_:)","identifier":"s:SL1loiySbx_xtFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SS5IndexV10FoundationE8distance2toSiABSg_tF","target":"s:SS5IndexV","targetFallback":"Swift.String.Index"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE1popyxxFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"AdditiveArithmetic.+(_:)","identifier":"s:s18AdditiveArithmeticPsE1popyxxFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SxsE1loiySbx_xtFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"Comparable.<(_:_:)","identifier":"s:SL1loiySbx_xtFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexRtzr0_lF::SYNTHESIZED::s:s15ContiguousArrayV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:from:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexRtzr0_lF"},"target":"s:s15ContiguousArrayV","targetFallback":"Swift.ContiguousArray"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexRtzr0_lF::SYNTHESIZED::s:SW","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:from:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexRtzr0_lF"},"target":"s:SW","targetFallback":"Swift.UnsafeRawBufferPointer"},{"kind":"memberOf","source":"s:SS10FoundationE8EncodingV8rawValueACSu_tcfc","sourceOrigin":{"displayName":"RawRepresentable.init(rawValue:)","identifier":"s:SY8rawValuexSg03RawB0Qz_tcfc"},"target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:s22KeyedEncodingContainerV10FoundationE15encodeIfPresent_6forKey13configurationyqd__Sg_xqd_0_mtKAC26EncodableWithConfigurationRd__AC0bM9ProvidingRd_0_0bM0Qyd_0_AJRtd__r0_lF","target":"s:s22KeyedEncodingContainerV","targetFallback":"Swift.KeyedEncodingContainer"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexRtzr0_lF::SYNTHESIZED::s:s5SliceV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:from:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexRtzr0_lF"},"target":"s:s5SliceV","targetFallback":"Swift.Slice"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexRtzr0_lF::SYNTHESIZED::s:SR","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:from:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexRtzr0_lF"},"target":"s:SR","targetFallback":"Swift.UnsafeBufferPointer"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE1popyxxFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"AdditiveArithmetic.+(_:)","identifier":"s:s18AdditiveArithmeticPsE1popyxxFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexRtzr0_lF::SYNTHESIZED::s:s10ArraySliceV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:from:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexRtzr0_lF"},"target":"s:s10ArraySliceV","targetFallback":"Swift.ArraySlice"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexRtzr0_lF::SYNTHESIZED::s:s15EmptyCollectionV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:from:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexRtzr0_lF"},"target":"s:s15EmptyCollectionV","targetFallback":"Swift.EmptyCollection"},{"kind":"memberOf","source":"s:Sy10FoundationE32rangeOfComposedCharacterSequence2atSnySS5IndexVGAE_tF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexRtzr0_lF::SYNTHESIZED::s:s8RepeatedV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:from:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexRtzr0_lF"},"target":"s:s8RepeatedV","targetFallback":"Swift.Repeated"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE1popyxxFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"AdditiveArithmetic.+(_:)","identifier":"s:s18AdditiveArithmeticPsE1popyxxFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SxsE1loiySbx_xtFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"Comparable.<(_:_:)","identifier":"s:SL1loiySbx_xtFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE1popyxxFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"AdditiveArithmetic.+(_:)","identifier":"s:s18AdditiveArithmeticPsE1popyxxFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE1popyxxFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"AdditiveArithmetic.+(_:)","identifier":"s:s18AdditiveArithmeticPsE1popyxxFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:Sy10FoundationE16rangeOfCharacter4from7options0B0SnySS5IndexVGSgAA0D3SetV_AA8NSStringC14CompareOptionsVAItF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:SxsE1loiySbx_xtFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"Comparable.<(_:_:)","identifier":"s:SL1loiySbx_xtFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE1popyxxFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"AdditiveArithmetic.+(_:)","identifier":"s:s18AdditiveArithmeticPsE1popyxxFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SS10FoundationE8EncodingV8rawValueSuvp","sourceOrigin":{"displayName":"RawRepresentable.rawValue","identifier":"s:SY8rawValue03RawB0Qzvp"},"target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:SxsE1loiySbx_xtFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"Comparable.<(_:_:)","identifier":"s:SL1loiySbx_xtFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE1popyxxFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"AdditiveArithmetic.+(_:)","identifier":"s:s18AdditiveArithmeticPsE1popyxxFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:Sy10FoundationE12commonPrefix4with7optionsSSqd___AA8NSStringC14CompareOptionsVtSyRd__lF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE1popyxxFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"AdditiveArithmetic.+(_:)","identifier":"s:s18AdditiveArithmeticPsE1popyxxFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE2peoiyyxz_xtFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"AdditiveArithmetic.+=(_:_:)","identifier":"s:s18AdditiveArithmeticP2peoiyyxz_xtFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE2peoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"AdditiveArithmetic.+=(_:_:)","identifier":"s:s18AdditiveArithmeticP2peoiyyxz_xtFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE2peoiyyxz_xtFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"AdditiveArithmetic.+=(_:_:)","identifier":"s:s18AdditiveArithmeticP2peoiyyxz_xtFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE2peoiyyxz_xtFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"AdditiveArithmetic.+=(_:_:)","identifier":"s:s18AdditiveArithmeticP2peoiyyxz_xtFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE2peoiyyxz_xtFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"AdditiveArithmetic.+=(_:_:)","identifier":"s:s18AdditiveArithmeticP2peoiyyxz_xtFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE1topyxxFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.~(_:)","identifier":"s:s17FixedWidthIntegerPsE1topyxxFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9lastRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:s15ContiguousArrayV","sourceOrigin":{"displayName":"DataProtocol.lastRange(of:in:)","identifier":"s:10Foundation12DataProtocolP9lastRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF"},"target":"s:s15ContiguousArrayV","targetFallback":"Swift.ContiguousArray"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9lastRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:SW","sourceOrigin":{"displayName":"DataProtocol.lastRange(of:in:)","identifier":"s:10Foundation12DataProtocolP9lastRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF"},"target":"s:SW","targetFallback":"Swift.UnsafeRawBufferPointer"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE1topyxxFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.~(_:)","identifier":"s:s17FixedWidthIntegerPsE1topyxxFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SW10FoundationE15withUnsafeBytesyxxSWKXEKlF","sourceOrigin":{"displayName":"ContiguousBytes.withUnsafeBytes(_:)","identifier":"s:10Foundation15ContiguousBytesP010withUnsafeC0yqd__qd__SWKXEKlF"},"target":"s:SW","targetFallback":"Swift.UnsafeRawBufferPointer"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9lastRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:s5SliceV","sourceOrigin":{"displayName":"DataProtocol.lastRange(of:in:)","identifier":"s:10Foundation12DataProtocolP9lastRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF"},"target":"s:s5SliceV","targetFallback":"Swift.Slice"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE1topyxxFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.~(_:)","identifier":"s:s17FixedWidthIntegerPsE1topyxxFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9lastRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:SR","sourceOrigin":{"displayName":"DataProtocol.lastRange(of:in:)","identifier":"s:10Foundation12DataProtocolP9lastRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF"},"target":"s:SR","targetFallback":"Swift.UnsafeBufferPointer"},{"kind":"memberOf","source":"s:s22KeyedEncodingContainerV10FoundationE6encode_6forKeyyAC20CodableConfigurationVyqd__Sgqd_0_G_xtKAC013DecodableWithI0Rd__AC09EncodablekI0Rd__AC08DecodingI9ProvidingRd_0_AC0biN0Rd_0_0mI0AcLPQyd_0_AncJPRtd__0bI0AcMPQyd_0_AscKPRtd__r0_lF","target":"s:s22KeyedEncodingContainerV","targetFallback":"Swift.KeyedEncodingContainer"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9lastRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:s10ArraySliceV","sourceOrigin":{"displayName":"DataProtocol.lastRange(of:in:)","identifier":"s:10Foundation12DataProtocolP9lastRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF"},"target":"s:s10ArraySliceV","targetFallback":"Swift.ArraySlice"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9lastRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:s15EmptyCollectionV","sourceOrigin":{"displayName":"DataProtocol.lastRange(of:in:)","identifier":"s:10Foundation12DataProtocolP9lastRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF"},"target":"s:s15EmptyCollectionV","targetFallback":"Swift.EmptyCollection"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9lastRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:s8RepeatedV","sourceOrigin":{"displayName":"DataProtocol.lastRange(of:in:)","identifier":"s:10Foundation12DataProtocolP9lastRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF"},"target":"s:s8RepeatedV","targetFallback":"Swift.Repeated"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE2peoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"AdditiveArithmetic.+=(_:_:)","identifier":"s:s18AdditiveArithmeticP2peoiyyxz_xtFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:Sy10FoundationE19enumerateSubstrings2in7options_yqd___AA8NSStringC18EnumerationOptionsVySSSg_SnySS5IndexVGALSbztctSXRd__AK5BoundRtd__lF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:SS10FoundationE20utf16CodeUnitsNoCopy5count12freeWhenDoneSSSPys6UInt16VG_SiSbtcfc","target":"s:SS","targetFallback":"Swift.String"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9lastRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:Sa","sourceOrigin":{"displayName":"DataProtocol.lastRange(of:in:)","identifier":"s:10Foundation12DataProtocolP9lastRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF"},"target":"s:Sa","targetFallback":"Swift.Array"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE1topyxxFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.~(_:)","identifier":"s:s17FixedWidthIntegerPsE1topyxxFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE2peoiyyxz_xtFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"AdditiveArithmetic.+=(_:_:)","identifier":"s:s18AdditiveArithmeticP2peoiyyxz_xtFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE1topyxxFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.~(_:)","identifier":"s:s17FixedWidthIntegerPsE1topyxxFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE2peoiyyxz_xtFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"AdditiveArithmetic.+=(_:_:)","identifier":"s:s18AdditiveArithmeticP2peoiyyxz_xtFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE1topyxxFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.~(_:)","identifier":"s:s17FixedWidthIntegerPsE1topyxxFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE2peoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"AdditiveArithmetic.+=(_:_:)","identifier":"s:s18AdditiveArithmeticP2peoiyyxz_xtFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE1topyxxFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.~(_:)","identifier":"s:s17FixedWidthIntegerPsE1topyxxFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE2seoiyyxz_xtFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"AdditiveArithmetic.-=(_:_:)","identifier":"s:s18AdditiveArithmeticP2seoiyyxz_xtFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE2seoiyyxz_xtFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"AdditiveArithmetic.-=(_:_:)","identifier":"s:s18AdditiveArithmeticP2seoiyyxz_xtFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE1topyxxFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.~(_:)","identifier":"s:s17FixedWidthIntegerPsE1topyxxFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE2seoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"AdditiveArithmetic.-=(_:_:)","identifier":"s:s18AdditiveArithmeticP2seoiyyxz_xtFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE2seoiyyxz_xtFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"AdditiveArithmetic.-=(_:_:)","identifier":"s:s18AdditiveArithmeticP2seoiyyxz_xtFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE2seoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"AdditiveArithmetic.-=(_:_:)","identifier":"s:s18AdditiveArithmeticP2seoiyyxz_xtFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE2seoiyyxz_xtFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"AdditiveArithmetic.-=(_:_:)","identifier":"s:s18AdditiveArithmeticP2seoiyyxz_xtFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE2seoiyyxz_xtFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"AdditiveArithmetic.-=(_:_:)","identifier":"s:s18AdditiveArithmeticP2seoiyyxz_xtFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:SZss17FixedWidthIntegerRzrlE3maxxvpZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"SignedInteger.max","identifier":"s:SZss17FixedWidthIntegerRzrlE3maxxvpZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SZss17FixedWidthIntegerRzrlE3maxxvpZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"SignedInteger.max","identifier":"s:SZss17FixedWidthIntegerRzrlE3maxxvpZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE2seoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"AdditiveArithmetic.-=(_:_:)","identifier":"s:s18AdditiveArithmeticP2seoiyyxz_xtFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"conformsTo","source":"s:SS10FoundationE8EncodingV","target":"s:SH","targetFallback":"Swift.Hashable"},{"kind":"memberOf","source":"s:SZss17FixedWidthIntegerRzrlE3maxxvpZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"SignedInteger.max","identifier":"s:SZss17FixedWidthIntegerRzrlE3maxxvpZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SZss17FixedWidthIntegerRzrlE3maxxvpZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"SignedInteger.max","identifier":"s:SZss17FixedWidthIntegerRzrlE3maxxvpZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE1topyxxFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.~(_:)","identifier":"s:s17FixedWidthIntegerPsE1topyxxFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE2seoiyyxz_xtFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"AdditiveArithmetic.-=(_:_:)","identifier":"s:s18AdditiveArithmeticP2seoiyyxz_xtFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE1topyxxFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.~(_:)","identifier":"s:s17FixedWidthIntegerPsE1topyxxFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SZss17FixedWidthIntegerRzrlE3maxxvpZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"SignedInteger.max","identifier":"s:SZss17FixedWidthIntegerRzrlE3maxxvpZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SS5IndexV10FoundationE8advanced2byABSi_tF","target":"s:SS5IndexV","targetFallback":"Swift.String.Index"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE2seoiyyxz_xtFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"AdditiveArithmetic.-=(_:_:)","identifier":"s:s18AdditiveArithmeticP2seoiyyxz_xtFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE10firstRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:s5SliceV","sourceOrigin":{"displayName":"DataProtocol.firstRange(of:in:)","identifier":"s:10Foundation12DataProtocolP10firstRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF"},"target":"s:s5SliceV","targetFallback":"Swift.Slice"},{"kind":"memberOf","source":"s:SS5IndexV10FoundationE_6withinABSgAC16AttributedStringVAAV_xtcSyRzlufc","target":"s:SS5IndexV","targetFallback":"Swift.String.Index"},{"kind":"memberOf","source":"s:SS10FoundationE14contentsOfFile8encodingS2Sh_SSAAE8EncodingVtKcfc","target":"s:SS","targetFallback":"Swift.String"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE10firstRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:s10ArraySliceV","sourceOrigin":{"displayName":"DataProtocol.firstRange(of:in:)","identifier":"s:10Foundation12DataProtocolP10firstRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF"},"target":"s:s10ArraySliceV","targetFallback":"Swift.ArraySlice"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE10firstRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:s15EmptyCollectionV","sourceOrigin":{"displayName":"DataProtocol.firstRange(of:in:)","identifier":"s:10Foundation12DataProtocolP10firstRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF"},"target":"s:s15EmptyCollectionV","targetFallback":"Swift.EmptyCollection"},{"kind":"memberOf","source":"s:SUss17FixedWidthIntegerRzrlE3maxxvpZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"UnsignedInteger.max","identifier":"s:SUss17FixedWidthIntegerRzrlE3maxxvpZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE10firstRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:s8RepeatedV","sourceOrigin":{"displayName":"DataProtocol.firstRange(of:in:)","identifier":"s:10Foundation12DataProtocolP10firstRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF"},"target":"s:s8RepeatedV","targetFallback":"Swift.Repeated"},{"kind":"memberOf","source":"s:SYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF::SYNTHESIZED::s:SS10FoundationE8EncodingV","sourceOrigin":{"displayName":"RawRepresentable.hash(into:)","identifier":"s:SYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF"},"target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:SUss17FixedWidthIntegerRzrlE3maxxvpZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"UnsignedInteger.max","identifier":"s:SUss17FixedWidthIntegerRzrlE3maxxvpZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SUss17FixedWidthIntegerRzrlE3maxxvpZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"UnsignedInteger.max","identifier":"s:SUss17FixedWidthIntegerRzrlE3maxxvpZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE10firstRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:s15ContiguousArrayV","sourceOrigin":{"displayName":"DataProtocol.firstRange(of:in:)","identifier":"s:10Foundation12DataProtocolP10firstRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF"},"target":"s:s15ContiguousArrayV","targetFallback":"Swift.ContiguousArray"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE10firstRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:SW","sourceOrigin":{"displayName":"DataProtocol.firstRange(of:in:)","identifier":"s:10Foundation12DataProtocolP10firstRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF"},"target":"s:SW","targetFallback":"Swift.UnsafeRawBufferPointer"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE10firstRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:SR","sourceOrigin":{"displayName":"DataProtocol.firstRange(of:in:)","identifier":"s:10Foundation12DataProtocolP10firstRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF"},"target":"s:SR","targetFallback":"Swift.UnsafeBufferPointer"},{"kind":"memberOf","source":"s:SUss17FixedWidthIntegerRzrlE3maxxvpZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"UnsignedInteger.max","identifier":"s:SUss17FixedWidthIntegerRzrlE3maxxvpZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SZss17FixedWidthIntegerRzrlE3minxvpZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"SignedInteger.min","identifier":"s:SZss17FixedWidthIntegerRzrlE3minxvpZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SUss17FixedWidthIntegerRzrlE3maxxvpZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"UnsignedInteger.max","identifier":"s:SUss17FixedWidthIntegerRzrlE3maxxvpZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SZss17FixedWidthIntegerRzrlE3minxvpZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"SignedInteger.min","identifier":"s:SZss17FixedWidthIntegerRzrlE3minxvpZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SZss17FixedWidthIntegerRzrlE3minxvpZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"SignedInteger.min","identifier":"s:SZss17FixedWidthIntegerRzrlE3minxvpZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SZss17FixedWidthIntegerRzrlE3minxvpZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"SignedInteger.min","identifier":"s:SZss17FixedWidthIntegerRzrlE3minxvpZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE10firstRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:Sa","sourceOrigin":{"displayName":"DataProtocol.firstRange(of:in:)","identifier":"s:10Foundation12DataProtocolP10firstRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF"},"target":"s:Sa","targetFallback":"Swift.Array"},{"kind":"memberOf","source":"s:s18AdditiveArithmeticPsE2peoiyyxz_xtFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"AdditiveArithmetic.+=(_:_:)","identifier":"s:s18AdditiveArithmeticP2peoiyyxz_xtFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SZss17FixedWidthIntegerRzrlE3minxvpZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"SignedInteger.min","identifier":"s:SZss17FixedWidthIntegerRzrlE3minxvpZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:Sf10FoundationE10truncatingSfAA8NSNumberC_tcfc","target":"s:Sf","targetFallback":"Swift.Float"},{"kind":"conformsTo","source":"s:s15EmptyCollectionV","swiftConstraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"target":"s:10Foundation12DataProtocolP"},{"kind":"memberOf","source":"s:SS10FoundationE14contentsOfFile12usedEncodingS2Sh_SSAAE0F0VztKcfc","target":"s:SS","targetFallback":"Swift.String"},{"kind":"memberOf","source":"s:SLsE1goiySbx_xtFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"Comparable.>(_:_:)","identifier":"s:SLsE1goiySbx_xtFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"conformsTo","source":"s:SS10FoundationE8EncodingV","target":"s:s23CustomStringConvertibleP","targetFallback":"Swift.CustomStringConvertible"},{"kind":"memberOf","source":"s:s22KeyedDecodingContainerV10FoundationE6decode_6forKey13configurationqd__qd__m_x0B13ConfigurationQyd__tKAC013DecodableWithI0Rd__lF","target":"s:s22KeyedDecodingContainerV","targetFallback":"Swift.KeyedDecodingContainer"},{"kind":"memberOf","source":"s:SW10FoundationE7regionss15CollectionOfOneVySWGvp","sourceOrigin":{"displayName":"DataProtocol.regions","identifier":"s:10Foundation12DataProtocolP7regions7RegionsQzvp"},"target":"s:SW","targetFallback":"Swift.UnsafeRawBufferPointer"},{"kind":"memberOf","source":"s:SLsE1goiySbx_xtFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"Comparable.>(_:_:)","identifier":"s:SLsE1goiySbx_xtFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SLsE1goiySbx_xtFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"Comparable.>(_:_:)","identifier":"s:SLsE1goiySbx_xtFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SUss17FixedWidthIntegerRzrlE3minxvpZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"UnsignedInteger.min","identifier":"s:SUss17FixedWidthIntegerRzrlE3minxvpZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SLsE1goiySbx_xtFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"Comparable.>(_:_:)","identifier":"s:SLsE1goiySbx_xtFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SLsE1goiySbx_xtFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"Comparable.>(_:_:)","identifier":"s:SLsE1goiySbx_xtFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SUss17FixedWidthIntegerRzrlE3minxvpZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"UnsignedInteger.min","identifier":"s:SUss17FixedWidthIntegerRzrlE3minxvpZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SUss17FixedWidthIntegerRzrlE3minxvpZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"UnsignedInteger.min","identifier":"s:SUss17FixedWidthIntegerRzrlE3minxvpZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SLsE1goiySbx_xtFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"Comparable.>(_:_:)","identifier":"s:SLsE1goiySbx_xtFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SUss17FixedWidthIntegerRzrlE3minxvpZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"UnsignedInteger.min","identifier":"s:SUss17FixedWidthIntegerRzrlE3minxvpZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SLsE1goiySbx_xtFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"Comparable.>(_:_:)","identifier":"s:SLsE1goiySbx_xtFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SUss17FixedWidthIntegerRzrlE3minxvpZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"UnsignedInteger.min","identifier":"s:SUss17FixedWidthIntegerRzrlE3minxvpZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SYsSHRzSH8RawValueSYRpzrlE04hashB0Sivp::SYNTHESIZED::s:SS10FoundationE8EncodingV","sourceOrigin":{"displayName":"RawRepresentable.hashValue","identifier":"s:SYsSHRzSH8RawValueSYRpzrlE04hashB0Sivp"},"target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:SLsE1goiySbx_xtFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"Comparable.>(_:_:)","identifier":"s:SLsE1goiySbx_xtFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:SLsE1goiySbx_xtFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"Comparable.>(_:_:)","identifier":"s:SLsE1goiySbx_xtFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:Sf10FoundationEySfAA8NSNumberCcfc","target":"s:Sf","targetFallback":"Swift.Float"},{"kind":"memberOf","source":"s:SLsE1goiySbx_xtFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"Comparable.>(_:_:)","identifier":"s:SLsE1goiySbx_xtFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPA2A15ContiguousBytesRzrlE04copyE02to4fromySryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexSlRtzr0_lF::SYNTHESIZED::s:s10ArraySliceV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:from:)","identifier":"s:10Foundation12DataProtocolPA2A15ContiguousBytesRzrlE04copyE02to4fromySryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexSlRtzr0_lF"},"target":"s:s10ArraySliceV","targetFallback":"Swift.ArraySlice"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPA2A15ContiguousBytesRzrlE04copyE02to4fromySryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexSlRtzr0_lF::SYNTHESIZED::s:s15EmptyCollectionV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:from:)","identifier":"s:10Foundation12DataProtocolPA2A15ContiguousBytesRzrlE04copyE02to4fromySryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexSlRtzr0_lF"},"target":"s:s15EmptyCollectionV","targetFallback":"Swift.EmptyCollection"},{"kind":"memberOf","source":"s:SS10FoundationE5bytes8encodingSSSgxh_SSAAE8EncodingVtcSTRzs5UInt8V7ElementRtzlufc","target":"s:SS","targetFallback":"Swift.String"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPA2A15ContiguousBytesRzrlE04copyE02to4fromySryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexSlRtzr0_lF::SYNTHESIZED::s:s5SliceV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:from:)","identifier":"s:10Foundation12DataProtocolPA2A15ContiguousBytesRzrlE04copyE02to4fromySryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexSlRtzr0_lF"},"target":"s:s5SliceV","targetFallback":"Swift.Slice"},{"kind":"memberOf","source":"s:s22KeyedDecodingContainerV10FoundationE6decode_6forKey13configurationqd__qd__m_xqd_0_mtKAC26DecodableWithConfigurationRd__AC0bK9ProvidingRd_0_0bK0Qyd_0_AIRtd__r0_lF","target":"s:s22KeyedDecodingContainerV","targetFallback":"Swift.KeyedDecodingContainer"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPA2A15ContiguousBytesRzrlE04copyE02to4fromySryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexSlRtzr0_lF::SYNTHESIZED::s:s15ContiguousArrayV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:from:)","identifier":"s:10Foundation12DataProtocolPA2A15ContiguousBytesRzrlE04copyE02to4fromySryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexSlRtzr0_lF"},"target":"s:s15ContiguousArrayV","targetFallback":"Swift.ContiguousArray"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPA2A15ContiguousBytesRzrlE04copyE02to4fromySryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexSlRtzr0_lF::SYNTHESIZED::s:SW","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:from:)","identifier":"s:10Foundation12DataProtocolPA2A15ContiguousBytesRzrlE04copyE02to4fromySryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexSlRtzr0_lF"},"target":"s:SW","targetFallback":"Swift.UnsafeRawBufferPointer"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPA2A15ContiguousBytesRzrlE04copyE02to4fromySryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexSlRtzr0_lF::SYNTHESIZED::s:SR","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:from:)","identifier":"s:10Foundation12DataProtocolPA2A15ContiguousBytesRzrlE04copyE02to4fromySryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexSlRtzr0_lF"},"target":"s:SR","targetFallback":"Swift.UnsafeBufferPointer"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPA2A15ContiguousBytesRzrlE04copyE02to4fromySryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexSlRtzr0_lF::SYNTHESIZED::s:Sa","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:from:)","identifier":"s:10Foundation12DataProtocolPA2A15ContiguousBytesRzrlE04copyE02to4fromySryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexSlRtzr0_lF"},"target":"s:Sa","targetFallback":"Swift.Array"},{"kind":"memberOf","source":"s:SzsE10isMultiple2ofSbx_tF::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"BinaryInteger.isMultiple(of:)","identifier":"s:Sz10isMultiple2ofSbx_tF"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SzsE10isMultiple2ofSbx_tF::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"BinaryInteger.isMultiple(of:)","identifier":"s:Sz10isMultiple2ofSbx_tF"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SzsE10isMultiple2ofSbx_tF::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"BinaryInteger.isMultiple(of:)","identifier":"s:Sz10isMultiple2ofSbx_tF"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SzsE10isMultiple2ofSbx_tF::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"BinaryInteger.isMultiple(of:)","identifier":"s:Sz10isMultiple2ofSbx_tF"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SzsE10isMultiple2ofSbx_tF::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"BinaryInteger.isMultiple(of:)","identifier":"s:Sz10isMultiple2ofSbx_tF"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:Sy10FoundationE8getBytes_9maxLength04usedE08encoding7options5range9remainingSbSays5UInt8VGz_SiSpySiGSSAAE8EncodingVAA8NSStringC0L17ConversionOptionsVqd__SpySnySS5IndexVGGtSXRd__AT5BoundRtd__lF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:SS10FoundationE11bytesNoCopy6length8encoding12freeWhenDoneSSSgSv_SiSSAAE8EncodingVSbtcfc","target":"s:SS","targetFallback":"Swift.String"},{"kind":"memberOf","source":"s:Sy10FoundationE11capitalizedSSvp","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:s22KeyedDecodingContainerV10FoundationE15decodeIfPresent_6forKey13configurationqd__Sgqd__m_xqd_0_mtKAC26DecodableWithConfigurationRd__AC0bM9ProvidingRd_0_0bM0Qyd_0_AJRtd__r0_lF","target":"s:s22KeyedDecodingContainerV","targetFallback":"Swift.KeyedDecodingContainer"},{"kind":"conformsTo","source":"s:s15EmptyCollectionV","swiftConstraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"target":"s:10Foundation15ContiguousBytesP"},{"kind":"memberOf","source":"s:Sy10FoundationE14canBeConverted2toSbSSAAE8EncodingV_tF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:SS10FoundationE14utf16CodeUnits5countSSSPys6UInt16VG_Sitcfc","target":"s:SS","targetFallback":"Swift.String"},{"kind":"conformsTo","source":"s:SR","swiftConstraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"target":"s:10Foundation12DataProtocolP"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:radix:)","identifier":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:radix:)","identifier":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:radix:)","identifier":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:radix:)","identifier":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:radix:)","identifier":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"Comparable....(_:_:)","identifier":"s:SLsE3zzzoiySNyxGx_xtFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:radix:)","identifier":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:radix:)","identifier":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"Comparable....(_:_:)","identifier":"s:SLsE3zzzoiySNyxGx_xtFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"Comparable....(_:_:)","identifier":"s:SLsE3zzzoiySNyxGx_xtFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"Comparable....(_:_:)","identifier":"s:SLsE3zzzoiySNyxGx_xtFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"Comparable....(_:_:)","identifier":"s:SLsE3zzzoiySNyxGx_xtFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"Comparable....(_:_:)","identifier":"s:SLsE3zzzoiySNyxGx_xtFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"Comparable....(_:_:)","identifier":"s:SLsE3zzzoiySNyxGx_xtFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SUss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"UnsignedInteger.init(_:)","identifier":"s:SUss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SUss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"UnsignedInteger.init(_:)","identifier":"s:SUss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:radix:)","identifier":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"Comparable....(_:_:)","identifier":"s:SLsE3zzzoiySNyxGx_xtFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:SUss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"UnsignedInteger.init(_:)","identifier":"s:SUss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SUss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"UnsignedInteger.init(_:)","identifier":"s:SUss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"Comparable....(_:_:)","identifier":"s:SLsE3zzzoiySNyxGx_xtFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SUss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"UnsignedInteger.init(_:)","identifier":"s:SUss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:Sy10FoundationE10getCString_9maxLength8encodingSbSays4Int8VGz_SiSSAAE8EncodingVtF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"Comparable....(_:_:)","identifier":"s:SLsE3zzzoiySNyxGx_xtFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:radix:)","identifier":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:radix:)","identifier":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.&+(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.&+(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SS10FoundationE8EncodingV13windowsCP1253ACvpZ","target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.&+(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.&+(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.&+(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.&+(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.&+(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:Sy10FoundationE15fastestEncodingSSAAE0C0Vvp","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.&+(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.&+(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:Sy10FoundationE32localizedCaseInsensitiveContainsySbqd__SyRd__lF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.&+(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:Sy10FoundationE14enumerateLines8invokingyySS_Sbztc_tF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.&+=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.&+=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.&+=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.&+=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.&+=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.&+=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SS10FoundationE8EncodingV13windowsCP1251ACvpZ","target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.&+=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.&-(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.&+=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:Sy10FoundationE9substring4fromS2S5IndexV_tF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.&-(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.&-(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SS10FoundationE8EncodingV13windowsCP1252ACvpZ","target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.&-(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.&-(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.&-(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.&-(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.&-(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.&-(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"Comparable...<(_:_:)","identifier":"s:SLsE3zzloiySnyxGx_xtFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"Comparable...<(_:_:)","identifier":"s:SLsE3zzloiySnyxGx_xtFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"Comparable...<(_:_:)","identifier":"s:SLsE3zzloiySnyxGx_xtFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"Comparable...<(_:_:)","identifier":"s:SLsE3zzloiySnyxGx_xtFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"Comparable...<(_:_:)","identifier":"s:SLsE3zzloiySnyxGx_xtFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"Comparable...<(_:_:)","identifier":"s:SLsE3zzloiySnyxGx_xtFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"Comparable...<(_:_:)","identifier":"s:SLsE3zzloiySnyxGx_xtFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.&+=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"Comparable...<(_:_:)","identifier":"s:SLsE3zzloiySnyxGx_xtFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"Comparable...<(_:_:)","identifier":"s:SLsE3zzloiySnyxGx_xtFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:Sy10FoundationE40decomposedStringWithCompatibilityMappingSSvp","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"conformsTo","source":"s:Sr","swiftConstraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"target":"s:10Foundation15ContiguousBytesP"},{"kind":"memberOf","source":"s:SLsE2leoiySbx_xtFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"Comparable.<=(_:_:)","identifier":"s:SLsE2leoiySbx_xtFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SLsE2leoiySbx_xtFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"Comparable.<=(_:_:)","identifier":"s:SLsE2leoiySbx_xtFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:Si10FoundationE10truncatingSiAA8NSNumberC_tcfc","target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SLsE2leoiySbx_xtFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"Comparable.<=(_:_:)","identifier":"s:SLsE2leoiySbx_xtFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:SLsE2leoiySbx_xtFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"Comparable.<=(_:_:)","identifier":"s:SLsE2leoiySbx_xtFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SLsE2leoiySbx_xtFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"Comparable.<=(_:_:)","identifier":"s:SLsE2leoiySbx_xtFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"conformsTo","source":"s:SW","target":"s:10Foundation15ContiguousBytesP"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE10firstRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:Sa","sourceOrigin":{"displayName":"DataProtocol.firstRange(of:)","identifier":"s:10Foundation12DataProtocolPAAE10firstRange2ofSny5IndexQzGSgqd___tAaBRd__lF"},"target":"s:Sa","targetFallback":"Swift.Array"},{"kind":"memberOf","source":"s:SLsE2leoiySbx_xtFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"Comparable.<=(_:_:)","identifier":"s:SLsE2leoiySbx_xtFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SLsE2leoiySbx_xtFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"Comparable.<=(_:_:)","identifier":"s:SLsE2leoiySbx_xtFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"Comparable...<(_:_:)","identifier":"s:SLsE3zzloiySnyxGx_xtFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SS10FoundationE8EncodingV7unicodeACvpZ","target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:s6UInt16V10FoundationE7exactlyABSgAC8NSNumberC_tcfc","target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE10firstRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:s10ArraySliceV","sourceOrigin":{"displayName":"DataProtocol.firstRange(of:)","identifier":"s:10Foundation12DataProtocolPAAE10firstRange2ofSny5IndexQzGSgqd___tAaBRd__lF"},"target":"s:s10ArraySliceV","targetFallback":"Swift.ArraySlice"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE10firstRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:s15EmptyCollectionV","sourceOrigin":{"displayName":"DataProtocol.firstRange(of:)","identifier":"s:10Foundation12DataProtocolPAAE10firstRange2ofSny5IndexQzGSgqd___tAaBRd__lF"},"target":"s:s15EmptyCollectionV","targetFallback":"Swift.EmptyCollection"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.&-(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE10firstRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:s8RepeatedV","sourceOrigin":{"displayName":"DataProtocol.firstRange(of:)","identifier":"s:10Foundation12DataProtocolPAAE10firstRange2ofSny5IndexQzGSgqd___tAaBRd__lF"},"target":"s:s8RepeatedV","targetFallback":"Swift.Repeated"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE10firstRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:s5SliceV","sourceOrigin":{"displayName":"DataProtocol.firstRange(of:)","identifier":"s:10Foundation12DataProtocolPAAE10firstRange2ofSny5IndexQzGSgqd___tAaBRd__lF"},"target":"s:s5SliceV","targetFallback":"Swift.Slice"},{"kind":"memberOf","source":"s:SzsExycfc::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"BinaryInteger.init()","identifier":"s:SzsExycfc"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SzsExycfc::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"BinaryInteger.init()","identifier":"s:SzsExycfc"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:10Foundation14LocalizedErrorPAAE13failureReasonSSSgvp::SYNTHESIZED::s:s13DecodingErrorO","sourceOrigin":{"displayName":"LocalizedError.failureReason","identifier":"s:10Foundation14LocalizedErrorP13failureReasonSSSgvp"},"target":"s:s13DecodingErrorO","targetFallback":"Swift.DecodingError"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE10firstRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:s15ContiguousArrayV","sourceOrigin":{"displayName":"DataProtocol.firstRange(of:)","identifier":"s:10Foundation12DataProtocolPAAE10firstRange2ofSny5IndexQzGSgqd___tAaBRd__lF"},"target":"s:s15ContiguousArrayV","targetFallback":"Swift.ContiguousArray"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE10firstRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:SW","sourceOrigin":{"displayName":"DataProtocol.firstRange(of:)","identifier":"s:10Foundation12DataProtocolPAAE10firstRange2ofSny5IndexQzGSgqd___tAaBRd__lF"},"target":"s:SW","targetFallback":"Swift.UnsafeRawBufferPointer"},{"kind":"memberOf","source":"s:SzsExycfc::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"BinaryInteger.init()","identifier":"s:SzsExycfc"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:10Foundation14LocalizedErrorPAAE13failureReasonSSSgvp::SYNTHESIZED::s:s13EncodingErrorO","sourceOrigin":{"displayName":"LocalizedError.failureReason","identifier":"s:10Foundation14LocalizedErrorP13failureReasonSSSgvp"},"target":"s:s13EncodingErrorO","targetFallback":"Swift.EncodingError"},{"kind":"memberOf","source":"s:SzsExycfc::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"BinaryInteger.init()","identifier":"s:SzsExycfc"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE10firstRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:SR","sourceOrigin":{"displayName":"DataProtocol.firstRange(of:)","identifier":"s:10Foundation12DataProtocolPAAE10firstRange2ofSny5IndexQzGSgqd___tAaBRd__lF"},"target":"s:SR","targetFallback":"Swift.UnsafeBufferPointer"},{"kind":"memberOf","source":"s:SzsExycfc::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"BinaryInteger.init()","identifier":"s:SzsExycfc"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SLsE2leoiySbx_xtFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"Comparable.<=(_:_:)","identifier":"s:SLsE2leoiySbx_xtFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s6UInt16V10FoundationEyAbC8NSNumberCcfc","target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SzsExycfc::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"BinaryInteger.init()","identifier":"s:SzsExycfc"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:Sf10FoundationE7exactlySfSgAA8NSNumberC_tcfc","target":"s:Sf","targetFallback":"Swift.Float"},{"kind":"conformsTo","source":"s:Sw","target":"s:10Foundation15ContiguousBytesP"},{"kind":"memberOf","source":"s:SzsExycfc::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"BinaryInteger.init()","identifier":"s:SzsExycfc"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:Si10FoundationE7exactlySiSgAA8NSNumberC_tcfc","target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SzsExycfc::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"BinaryInteger.init()","identifier":"s:SzsExycfc"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:10Foundation14LocalizedErrorPAAE18recoverySuggestionSSSgvp::SYNTHESIZED::s:s13DecodingErrorO","sourceOrigin":{"displayName":"LocalizedError.recoverySuggestion","identifier":"s:10Foundation14LocalizedErrorP18recoverySuggestionSSSgvp"},"target":"s:s13DecodingErrorO","targetFallback":"Swift.DecodingError"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.&-=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.&-=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:10Foundation14LocalizedErrorPAAE18recoverySuggestionSSSgvp::SYNTHESIZED::s:s13EncodingErrorO","sourceOrigin":{"displayName":"LocalizedError.recoverySuggestion","identifier":"s:10Foundation14LocalizedErrorP18recoverySuggestionSSSgvp"},"target":"s:s13EncodingErrorO","targetFallback":"Swift.EncodingError"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.&-=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.&-=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.&-=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:Sy10FoundationE31localizedCaseInsensitiveCompareyAA16ComparisonResultOqd__SyRd__lF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:s6UInt16V10FoundationE10truncatingAbC8NSNumberC_tcfc","target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.&-=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SzsExycfc::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"BinaryInteger.init()","identifier":"s:SzsExycfc"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.&-=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SLsE2leoiySbx_xtFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"Comparable.<=(_:_:)","identifier":"s:SLsE2leoiySbx_xtFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.&-=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SzsExycfc::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"BinaryInteger.init()","identifier":"s:SzsExycfc"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.&*(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.&*(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.&-=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.&*(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.&*(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.&*(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.&*(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.&*(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsEyxSgSScfc::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:)","identifier":"s:s17FixedWidthIntegerPsEyxSgSScfc"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsEyxSgSScfc::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:)","identifier":"s:s17FixedWidthIntegerPsEyxSgSScfc"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:Su10FoundationEySuAA7CGFloatVcfc","target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SLsE2geoiySbx_xtFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"Comparable.>=(_:_:)","identifier":"s:SLsE2geoiySbx_xtFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsEyxSgSScfc::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:)","identifier":"s:s17FixedWidthIntegerPsEyxSgSScfc"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SLsE2geoiySbx_xtFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"Comparable.>=(_:_:)","identifier":"s:SLsE2geoiySbx_xtFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SLsE2geoiySbx_xtFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"Comparable.>=(_:_:)","identifier":"s:SLsE2geoiySbx_xtFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SLsE2geoiySbx_xtFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"Comparable.>=(_:_:)","identifier":"s:SLsE2geoiySbx_xtFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SLsE2geoiySbx_xtFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"Comparable.>=(_:_:)","identifier":"s:SLsE2geoiySbx_xtFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SLsE2geoiySbx_xtFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"Comparable.>=(_:_:)","identifier":"s:SLsE2geoiySbx_xtFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsEyxSgSScfc::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:)","identifier":"s:s17FixedWidthIntegerPsEyxSgSScfc"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.&-=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SLsE2geoiySbx_xtFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"Comparable.>=(_:_:)","identifier":"s:SLsE2geoiySbx_xtFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.&*(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsEyxSgSScfc::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:)","identifier":"s:s17FixedWidthIntegerPsEyxSgSScfc"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsEyxSgSScfc::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:)","identifier":"s:s17FixedWidthIntegerPsEyxSgSScfc"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:SLsE2geoiySbx_xtFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"Comparable.>=(_:_:)","identifier":"s:SLsE2geoiySbx_xtFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:Sy10FoundationE13lengthOfBytes5usingSiSSAAE8EncodingV_tF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsEyxSgSScfc::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:)","identifier":"s:s17FixedWidthIntegerPsEyxSgSScfc"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsEyxSgSScfc::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:)","identifier":"s:s17FixedWidthIntegerPsEyxSgSScfc"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SS10FoundationE8EncodingV8shiftJISACvpZ","target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:10Foundation14LocalizedErrorPAAE16errorDescriptionSSSgvp::SYNTHESIZED::s:s13DecodingErrorO","sourceOrigin":{"displayName":"LocalizedError.errorDescription","identifier":"s:10Foundation14LocalizedErrorP16errorDescriptionSSSgvp"},"target":"s:s13DecodingErrorO","targetFallback":"Swift.DecodingError"},{"kind":"memberOf","source":"s:Sb10FoundationE7exactlySbSgAA8NSNumberC_tcfc","target":"s:Sb","targetFallback":"Swift.Bool"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsEyxSgSScfc::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:)","identifier":"s:s17FixedWidthIntegerPsEyxSgSScfc"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SLsE2geoiySbx_xtFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"Comparable.>=(_:_:)","identifier":"s:SLsE2geoiySbx_xtFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:10Foundation14LocalizedErrorPAAE16errorDescriptionSSSgvp::SYNTHESIZED::s:s13EncodingErrorO","sourceOrigin":{"displayName":"LocalizedError.errorDescription","identifier":"s:10Foundation14LocalizedErrorP16errorDescriptionSSSgvp"},"target":"s:s13EncodingErrorO","targetFallback":"Swift.EncodingError"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.&*(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SLsE2geoiySbx_xtFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"Comparable.>=(_:_:)","identifier":"s:SLsE2geoiySbx_xtFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.&*(_:_:)","identifier":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:s22KeyedDecodingContainerV10FoundationE6decode_6forKeyAC20CodableConfigurationVyqd__Sgqd_0_GAIm_xtKAC013DecodableWithI0Rd__AC09EncodablekI0Rd__AC0bI9ProvidingRd_0_AC08EncodingiM0Rd_0_0bI0AcLPQyd_0_AncJPRtd__0nI0AcMPQyd_0_AscKPRtd__r0_lF","target":"s:s22KeyedDecodingContainerV","targetFallback":"Swift.KeyedDecodingContainer"},{"kind":"conformsTo","source":"s:SS10FoundationE8EncodingV","target":"s:SQ","targetFallback":"Swift.Equatable"},{"kind":"memberOf","source":"s:Sy10FoundationE9substring4withSSSnySS5IndexVG_tF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:Sy10FoundationE9substring2toS2S5IndexV_tF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:SLsE2leoiySbx_xtFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"Comparable.<=(_:_:)","identifier":"s:SLsE2leoiySbx_xtFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsEyxSgSScfc::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.init(_:)","identifier":"s:s17FixedWidthIntegerPsEyxSgSScfc"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"conformsTo","source":"s:s15CollectionOfOneV","swiftConstraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"target":"s:10Foundation15ContiguousBytesP"},{"kind":"memberOf","source":"s:SS10FoundationE8EncodingV","target":"s:SS","targetFallback":"Swift.String"},{"kind":"memberOf","source":"s:Si10FoundationEySiAA8NSNumberCcfc","target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SS10FoundationE8EncodingV9isoLatin2ACvpZ","target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:Sb10FoundationE10truncatingSbAA8NSNumberC_tcfc","target":"s:Sb","targetFallback":"Swift.Bool"},{"kind":"memberOf","source":"s:Sb10FoundationEySbAA8NSNumberCcfc","target":"s:Sb","targetFallback":"Swift.Bool"},{"kind":"conformsTo","source":"s:Sa","swiftConstraints":[{"kind":"conformance","lhs":"Element","rhs":"DecodableWithConfiguration","rhsPrecise":"s:10Foundation26DecodableWithConfigurationP"}],"target":"s:10Foundation26DecodableWithConfigurationP"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSryqd__G_tlF::SYNTHESIZED::s:Sa","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSryqd__G_tlF"},"target":"s:Sa","targetFallback":"Swift.Array"},{"kind":"memberOf","source":"s:s22KeyedEncodingContainerV10FoundationE15encodeIfPresent_6forKey13configurationyqd__Sg_x0B13ConfigurationQyd__tKAC013EncodableWithK0Rd__lF","target":"s:s22KeyedEncodingContainerV","targetFallback":"Swift.KeyedEncodingContainer"},{"kind":"memberOf","source":"s:Sy10FoundationE10components11separatedBySaySSGqd___tSyRd__lF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.&+=(_:_:)","identifier":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"conformsTo","source":"s:SS10FoundationE8EncodingV","target":"s:SH","targetFallback":"Swift.Hashable"},{"kind":"memberOf","source":"s:SS10FoundationE8EncodingV13nonLossyASCIIACvpZ","target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.init(clamping:)","identifier":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:)","identifier":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:)","identifier":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:)","identifier":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:Sf10FoundationEySfAA7CGFloatVcfc","target":"s:Sf","targetFallback":"Swift.Float"},{"kind":"memberOf","source":"s:Sd10FoundationEySdAA7CGFloatVcfc","target":"s:Sd","targetFallback":"Swift.Double"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSryqd__G_tlF::SYNTHESIZED::s:s15ContiguousArrayV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSryqd__G_tlF"},"target":"s:s15ContiguousArrayV","targetFallback":"Swift.ContiguousArray"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.init(clamping:)","identifier":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSryqd__G_tlF::SYNTHESIZED::s:SR","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSryqd__G_tlF"},"target":"s:SR","targetFallback":"Swift.UnsafeBufferPointer"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSryqd__G_tlF::SYNTHESIZED::s:s5SliceV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSryqd__G_tlF"},"target":"s:s5SliceV","targetFallback":"Swift.Slice"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.init(clamping:)","identifier":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.init(clamping:)","identifier":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.init(clamping:)","identifier":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSryqd__G_tlF::SYNTHESIZED::s:s10ArraySliceV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSryqd__G_tlF"},"target":"s:s10ArraySliceV","targetFallback":"Swift.ArraySlice"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSryqd__G_tlF::SYNTHESIZED::s:s15EmptyCollectionV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSryqd__G_tlF"},"target":"s:s15EmptyCollectionV","targetFallback":"Swift.EmptyCollection"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:)","identifier":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSw_SitF::SYNTHESIZED::s:Sa","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:count:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSw_SitF"},"target":"s:Sa","targetFallback":"Swift.Array"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.init(clamping:)","identifier":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:)","identifier":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSryqd__G_tlF::SYNTHESIZED::s:s8RepeatedV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSryqd__G_tlF"},"target":"s:s8RepeatedV","targetFallback":"Swift.Repeated"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.init(clamping:)","identifier":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.init(clamping:)","identifier":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:Sy10FoundationE10components11separatedBySaySSGAA12CharacterSetV_tF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:)","identifier":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.init(clamping:)","identifier":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:)","identifier":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:Sy10FoundationE33rangeOfComposedCharacterSequences3forSnySS5IndexVGqd___tSXRd__AE5BoundRtd__lF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSw_SitF::SYNTHESIZED::s:s15ContiguousArrayV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:count:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSw_SitF"},"target":"s:s15ContiguousArrayV","targetFallback":"Swift.ContiguousArray"},{"kind":"memberOf","source":"s:Si10FoundationEySiAA7CGFloatVcfc","target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"Comparable....(_:)","identifier":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSw_SitF::SYNTHESIZED::s:SW","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:count:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSw_SitF"},"target":"s:SW","targetFallback":"Swift.UnsafeRawBufferPointer"},{"kind":"memberOf","source":"s:SxsE2eeoiySbx_xtFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"Equatable.==(_:_:)","identifier":"s:SQ2eeoiySbx_xtFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"Comparable....(_:)","identifier":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSw_SitF::SYNTHESIZED::s:SR","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:count:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSw_SitF"},"target":"s:SR","targetFallback":"Swift.UnsafeBufferPointer"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:using:)","identifier":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSw_SitF::SYNTHESIZED::s:s10ArraySliceV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:count:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSw_SitF"},"target":"s:s10ArraySliceV","targetFallback":"Swift.ArraySlice"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSw_SitF::SYNTHESIZED::s:s15EmptyCollectionV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:count:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSw_SitF"},"target":"s:s15EmptyCollectionV","targetFallback":"Swift.EmptyCollection"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:using:)","identifier":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSw_SitF::SYNTHESIZED::s:s8RepeatedV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:count:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSw_SitF"},"target":"s:s8RepeatedV","targetFallback":"Swift.Repeated"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSw_SitF::SYNTHESIZED::s:s5SliceV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:count:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSw_SitF"},"target":"s:s5SliceV","targetFallback":"Swift.Slice"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:using:)","identifier":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:using:)","identifier":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SxsE2eeoiySbx_xtFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"Equatable.==(_:_:)","identifier":"s:SQ2eeoiySbx_xtFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"Comparable....(_:)","identifier":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:using:)","identifier":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:using:)","identifier":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"Comparable....(_:)","identifier":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9lastRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:s15ContiguousArrayV","sourceOrigin":{"displayName":"DataProtocol.lastRange(of:)","identifier":"s:10Foundation12DataProtocolPAAE9lastRange2ofSny5IndexQzGSgqd___tAaBRd__lF"},"target":"s:s15ContiguousArrayV","targetFallback":"Swift.ContiguousArray"},{"kind":"memberOf","source":"s:s22KeyedEncodingContainerV10FoundationE6encode_6forKey13configurationyqd___x0B13ConfigurationQyd__tKAC013EncodableWithI0Rd__lF","target":"s:s22KeyedEncodingContainerV","targetFallback":"Swift.KeyedEncodingContainer"},{"kind":"memberOf","source":"s:SxsE2eeoiySbx_xtFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"Equatable.==(_:_:)","identifier":"s:SQ2eeoiySbx_xtFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9lastRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:SW","sourceOrigin":{"displayName":"DataProtocol.lastRange(of:)","identifier":"s:10Foundation12DataProtocolPAAE9lastRange2ofSny5IndexQzGSgqd___tAaBRd__lF"},"target":"s:SW","targetFallback":"Swift.UnsafeRawBufferPointer"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9lastRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:s5SliceV","sourceOrigin":{"displayName":"DataProtocol.lastRange(of:)","identifier":"s:10Foundation12DataProtocolPAAE9lastRange2ofSny5IndexQzGSgqd___tAaBRd__lF"},"target":"s:s5SliceV","targetFallback":"Swift.Slice"},{"kind":"memberOf","source":"s:s5Int64V10FoundationEyAbC8NSNumberCcfc","target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9lastRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:SR","sourceOrigin":{"displayName":"DataProtocol.lastRange(of:)","identifier":"s:10Foundation12DataProtocolPAAE9lastRange2ofSny5IndexQzGSgqd___tAaBRd__lF"},"target":"s:SR","targetFallback":"Swift.UnsafeBufferPointer"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:)","identifier":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9lastRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:s15EmptyCollectionV","sourceOrigin":{"displayName":"DataProtocol.lastRange(of:)","identifier":"s:10Foundation12DataProtocolPAAE9lastRange2ofSny5IndexQzGSgqd___tAaBRd__lF"},"target":"s:s15EmptyCollectionV","targetFallback":"Swift.EmptyCollection"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9lastRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:s10ArraySliceV","sourceOrigin":{"displayName":"DataProtocol.lastRange(of:)","identifier":"s:10Foundation12DataProtocolPAAE9lastRange2ofSny5IndexQzGSgqd___tAaBRd__lF"},"target":"s:s10ArraySliceV","targetFallback":"Swift.ArraySlice"},{"kind":"memberOf","source":"s:SxsE2eeoiySbx_xtFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"Equatable.==(_:_:)","identifier":"s:SQ2eeoiySbx_xtFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9lastRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:s8RepeatedV","sourceOrigin":{"displayName":"DataProtocol.lastRange(of:)","identifier":"s:10Foundation12DataProtocolPAAE9lastRange2ofSny5IndexQzGSgqd___tAaBRd__lF"},"target":"s:s8RepeatedV","targetFallback":"Swift.Repeated"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:using:)","identifier":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"Comparable....(_:)","identifier":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:)","identifier":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:using:)","identifier":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9lastRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:Sa","sourceOrigin":{"displayName":"DataProtocol.lastRange(of:)","identifier":"s:10Foundation12DataProtocolPAAE9lastRange2ofSny5IndexQzGSgqd___tAaBRd__lF"},"target":"s:Sa","targetFallback":"Swift.Array"},{"kind":"memberOf","source":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"Comparable....(_:)","identifier":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:)","identifier":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:using:)","identifier":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:SxsE2eeoiySbx_xtFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"Equatable.==(_:_:)","identifier":"s:SQ2eeoiySbx_xtFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SR10Foundations5UInt8VRszlE15withUnsafeBytesyqd__qd__SWKXEKlF","sourceOrigin":{"displayName":"ContiguousBytes.withUnsafeBytes(_:)","identifier":"s:10Foundation15ContiguousBytesP010withUnsafeC0yqd__qd__SWKXEKlF"},"target":"s:SR","targetFallback":"Swift.UnsafeBufferPointer"},{"kind":"memberOf","source":"s:s5Int64V10FoundationEyAbC7CGFloatVcfc","target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.init(clamping:)","identifier":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SxsE2eeoiySbx_xtFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"Equatable.==(_:_:)","identifier":"s:SQ2eeoiySbx_xtFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"Comparable....(_:)","identifier":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSw_tF::SYNTHESIZED::s:s15ContiguousArrayV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSw_tF"},"target":"s:s15ContiguousArrayV","targetFallback":"Swift.ContiguousArray"},{"kind":"memberOf","source":"s:10Foundation14LocalizedErrorPAAE10helpAnchorSSSgvp::SYNTHESIZED::s:s13EncodingErrorO","sourceOrigin":{"displayName":"LocalizedError.helpAnchor","identifier":"s:10Foundation14LocalizedErrorP10helpAnchorSSSgvp"},"target":"s:s13EncodingErrorO","targetFallback":"Swift.EncodingError"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:using:)","identifier":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSw_tF::SYNTHESIZED::s:SW","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSw_tF"},"target":"s:SW","targetFallback":"Swift.UnsafeRawBufferPointer"},{"kind":"memberOf","source":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"Comparable....(_:)","identifier":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:10Foundation14LocalizedErrorPAAE10helpAnchorSSSgvp::SYNTHESIZED::s:s13DecodingErrorO","sourceOrigin":{"displayName":"LocalizedError.helpAnchor","identifier":"s:10Foundation14LocalizedErrorP10helpAnchorSSSgvp"},"target":"s:s13DecodingErrorO","targetFallback":"Swift.DecodingError"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:using:)","identifier":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:using:)","identifier":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSw_tF::SYNTHESIZED::s:s10ArraySliceV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSw_tF"},"target":"s:s10ArraySliceV","targetFallback":"Swift.ArraySlice"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSw_tF::SYNTHESIZED::s:s15EmptyCollectionV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSw_tF"},"target":"s:s15EmptyCollectionV","targetFallback":"Swift.EmptyCollection"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSw_tF::SYNTHESIZED::s:SR","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSw_tF"},"target":"s:SR","targetFallback":"Swift.UnsafeBufferPointer"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSw_tF::SYNTHESIZED::s:s8RepeatedV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSw_tF"},"target":"s:s8RepeatedV","targetFallback":"Swift.Repeated"},{"kind":"conformsTo","source":"s:s5SliceV","swiftConstraints":[{"kind":"conformance","lhs":"Base","rhs":"ContiguousBytes","rhsPrecise":"s:10Foundation15ContiguousBytesP"},{"kind":"conformance","lhs":"Base","rhs":"Collection","rhsPrecise":"s:Sl"}],"target":"s:10Foundation15ContiguousBytesP"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSw_tF::SYNTHESIZED::s:s5SliceV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSw_tF"},"target":"s:s5SliceV","targetFallback":"Swift.Slice"},{"kind":"memberOf","source":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"Comparable....(_:)","identifier":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"conformsTo","source":"s:s5SliceV","swiftConstraints":[{"kind":"conformance","lhs":"Base","rhs":"DataProtocol","rhsPrecise":"s:10Foundation12DataProtocolP"}],"target":"s:10Foundation12DataProtocolP"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSw_tF::SYNTHESIZED::s:Sa","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSw_tF"},"target":"s:Sa","targetFallback":"Swift.Array"},{"kind":"conformsTo","source":"s:Sa","swiftConstraints":[{"kind":"conformance","lhs":"Element","rhs":"EncodableWithConfiguration","rhsPrecise":"s:10Foundation26EncodableWithConfigurationP"}],"target":"s:10Foundation26EncodableWithConfigurationP"},{"kind":"memberOf","source":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"Comparable....(_:)","identifier":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"Comparable....(_:)","identifier":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:using:)","identifier":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:using:)","identifier":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"Comparable....(_:)","identifier":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:using:)","identifier":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"Comparable....(_:)","identifier":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"Comparable....(_:)","identifier":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:using:)","identifier":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:using:)","identifier":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:Sy10FoundationE22localizedStandardRange2ofSnySS5IndexVGSgqd___tSyRd__lF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:Sy10FoundationE12completePath4into13caseSensitive11matchesInto11filterTypesSiSpySSGSg_SbSpySaySSGGSgAISgtF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"Comparable....(_:)","identifier":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SS10FoundationE8EncodingV6symbolACvpZ","target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:using:)","identifier":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:Sy10FoundationE5range2of7optionsAB6localeSnySS5IndexVGSgqd___AA8NSStringC14CompareOptionsVAiA6LocaleVSgtSyRd__lF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"Comparable....(_:)","identifier":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s5Int64V10FoundationE7exactlyABSgAC8NSNumberC_tcfc","target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:using:)","identifier":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:Sa10FoundationAA26DecodableWithConfigurationRzlE4from13configurationSayxGs7Decoder_p_08DecodingD0QztKcfc","sourceOrigin":{"displayName":"DecodableWithConfiguration.init(from:configuration:)","identifier":"s:10Foundation26DecodableWithConfigurationP4from13configurationxs7Decoder_p_08DecodingD0QztKcfc"},"target":"s:Sa","targetFallback":"Swift.Array"},{"kind":"memberOf","source":"s:SS10FoundationE8EncodingV4utf8ACvpZ","target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"Comparable....(_:)","identifier":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:Su","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:using:)","identifier":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ"},"target":"s:Su","targetFallback":"Swift.UInt"},{"kind":"conformsTo","source":"s:SS10FoundationE8EncodingV","target":"s:s23CustomStringConvertibleP","targetFallback":"Swift.CustomStringConvertible"},{"kind":"conformsTo","source":"s:SW","target":"s:10Foundation12DataProtocolP"},{"kind":"memberOf","source":"s:SxsE2eeoiySbx_xtFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"Equatable.==(_:_:)","identifier":"s:SQ2eeoiySbx_xtFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:SS10FoundationE8EncodingV9isoLatin1ACvpZ","target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:Sy10FoundationE36decomposedStringWithCanonicalMappingSSvp","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:s5Int64V10FoundationE10truncatingAbC8NSNumberC_tcfc","target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s6UInt64V10FoundationEyAbC7CGFloatVcfc","target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:s6UInt32V10FoundationEyAbC7CGFloatVcfc","target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"Comparable....(_:)","identifier":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SxsE2eeoiySbx_xtFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"Equatable.==(_:_:)","identifier":"s:SQ2eeoiySbx_xtFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:Sa10Foundations5UInt8VRszlE7regionss15CollectionOfOneVySayACGGvp","sourceOrigin":{"displayName":"DataProtocol.regions","identifier":"s:10Foundation12DataProtocolP7regions7RegionsQzvp"},"target":"s:Sa","targetFallback":"Swift.Array"},{"kind":"memberOf","source":"s:Sy10FoundationE4data5using20allowLossyConversionAA4DataVSgSSAAE8EncodingV_SbtF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"Comparable....(_:)","identifier":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"Comparable...<(_:)","identifier":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"Comparable...<(_:)","identifier":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"Comparable...<(_:)","identifier":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"Comparable...<(_:)","identifier":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"Comparable...<(_:)","identifier":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"Comparable...<(_:)","identifier":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SxsE2eeoiySbx_xtFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"Equatable.==(_:_:)","identifier":"s:SQ2eeoiySbx_xtFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"Comparable...<(_:)","identifier":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ::SYNTHESIZED::s:Si","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:)","identifier":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ"},"target":"s:Si","targetFallback":"Swift.Int"},{"kind":"memberOf","source":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"Comparable...<(_:)","identifier":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:SR10Foundations5UInt8VRszlE7regionss15CollectionOfOneVySRyACGGvp","sourceOrigin":{"displayName":"DataProtocol.regions","identifier":"s:10Foundation12DataProtocolP7regions7RegionsQzvp"},"target":"s:SR","targetFallback":"Swift.UnsafeBufferPointer"},{"kind":"memberOf","source":"s:Sy10FoundationE7cString5usingSays4Int8VGSgSSAAE8EncodingV_tF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ::SYNTHESIZED::s:s5Int64V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:)","identifier":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ"},"target":"s:s5Int64V","targetFallback":"Swift.Int64"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ::SYNTHESIZED::s:s5Int16V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:)","identifier":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ"},"target":"s:s5Int16V","targetFallback":"Swift.Int16"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSryqd__G_SitlF::SYNTHESIZED::s:Sa","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:count:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSryqd__G_SitlF"},"target":"s:Sa","targetFallback":"Swift.Array"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ::SYNTHESIZED::s:s6UInt32V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:)","identifier":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ"},"target":"s:s6UInt32V","targetFallback":"Swift.UInt32"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ::SYNTHESIZED::s:s6UInt16V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:)","identifier":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ"},"target":"s:s6UInt16V","targetFallback":"Swift.UInt16"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ::SYNTHESIZED::s:s5Int32V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:)","identifier":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ"},"target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"memberOf","source":"s:Sy10FoundationE8containsySbqd__SyRd__lF","target":"s:Sy","targetFallback":"Swift.StringProtocol"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ::SYNTHESIZED::s:s4Int8V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:)","identifier":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ"},"target":"s:s4Int8V","targetFallback":"Swift.Int8"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSryqd__G_SitlF::SYNTHESIZED::s:s10ArraySliceV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:count:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSryqd__G_SitlF"},"target":"s:s10ArraySliceV","targetFallback":"Swift.ArraySlice"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSryqd__G_SitlF::SYNTHESIZED::s:s15EmptyCollectionV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:count:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSryqd__G_SitlF"},"target":"s:s15EmptyCollectionV","targetFallback":"Swift.EmptyCollection"},{"kind":"memberOf","source":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:s6UInt64V","sourceOrigin":{"displayName":"Comparable...<(_:)","identifier":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ"},"target":"s:s6UInt64V","targetFallback":"Swift.UInt64"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSryqd__G_SitlF::SYNTHESIZED::s:s8RepeatedV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:count:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSryqd__G_SitlF"},"target":"s:s8RepeatedV","targetFallback":"Swift.Repeated"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSryqd__G_SitlF::SYNTHESIZED::s:s5SliceV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:count:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSryqd__G_SitlF"},"target":"s:s5SliceV","targetFallback":"Swift.Slice"},{"kind":"memberOf","source":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ::SYNTHESIZED::s:s5UInt8V","sourceOrigin":{"displayName":"FixedWidthInteger.random(in:)","identifier":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ"},"target":"s:s5UInt8V","targetFallback":"Swift.UInt8"},{"kind":"memberOf","source":"s:SS10FoundationE8EncodingV11japaneseEUCACvpZ","target":"s:SS10FoundationE8EncodingV"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSryqd__G_SitlF::SYNTHESIZED::s:s15ContiguousArrayV","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:count:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSryqd__G_SitlF"},"target":"s:s15ContiguousArrayV","targetFallback":"Swift.ContiguousArray"},{"kind":"memberOf","source":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSryqd__G_SitlF::SYNTHESIZED::s:SR","sourceOrigin":{"displayName":"DataProtocol.copyBytes(to:count:)","identifier":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSryqd__G_SitlF"},"target":"s:SR","targetFallback":"Swift.UnsafeBufferPointer"},{"kind":"memberOf","source":"s:s5Int32V10FoundationEyAbC7CGFloatVcfc","target":"s:s5Int32V","targetFallback":"Swift.Int32"},{"kind":"conformsTo","source":"s:Sq","swiftConstraints":[{"kind":"conformance","lhs":"Wrapped","rhs":"DecodableWithConfiguration","rhsPrecise":"s:10Foundation26DecodableWithConfigurationP"}],"target":"s:10Foundation26DecodableWithConfigurationP"}],"symbols":[{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a half-open range that contains its lower bound but not its upper"},{"text":"bound."},{"text":""},{"text":"Use the half-open range operator (`..<`) to create a range of any type"},{"text":"that conforms to the `Comparable` protocol. This example creates a"},{"text":"`Range<Double>` from zero up to, but not including, 5.0."},{"text":""},{"text":"    let lessThanFive = 0.0..<5.0"},{"text":"    print(lessThanFive.contains(3.14))  // Prints \"true\""},{"text":"    print(lessThanFive.contains(5.0))   // Prints \"false\""},{"text":""},{"text":"- Parameters:"},{"text":"  - minimum: The lower bound for the range."},{"text":"  - maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `minimum <= maximum`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"},{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"..<(_:_:)"},"pathComponents":["UInt16","..<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3ggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":">>=(_:_:)"},"pathComponents":["Int32",">>=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"regions"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s15CollectionOfOneV","spelling":"CollectionOfOne"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:SR","spelling":"UnsafeBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","spelling":"UInt8"},{"kind":"text","spelling":">> { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SR10Foundations5UInt8VRszlE7regionss15CollectionOfOneVySRyACGGvp"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"regions"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s15CollectionOfOneV","spelling":"CollectionOfOne"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:SR","spelling":"UnsafeBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","spelling":"UInt8"},{"kind":"text","spelling":">>"}],"title":"regions"},"pathComponents":["UnsafeBufferPointer","regions"],"swiftExtension":{"constraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"contentsOf"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"url"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV","spelling":"URL"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"usedEncoding"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"docComment":{"lines":[{"text":"Produces a string created by reading data from a given URL"},{"text":"and returns by reference the encoding used to interpret the"},{"text":"data.  Errors are written into the inout `error` argument."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE10contentsOf12usedEncodingSSAA3URLVh_SSAAE0E0VztKcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"contentsOf"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV","spelling":"URL"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"usedEncoding"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"title":"init(contentsOf:usedEncoding:)"},"pathComponents":["String","init(contentsOf:usedEncoding:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withUnsafeBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:SW","spelling":"UnsafeRawBufferPointer"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:SW","spelling":"UnsafeRawBufferPointer"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"}],"name":"body"}],"returns":[{"kind":"typeIdentifier","spelling":"R"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s15CollectionOfOneV10Foundations5UInt8VRszlE15withUnsafeBytesyqd__qd__SWKXEKlF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withUnsafeBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","preciseIdentifier":"s:SW","spelling":"UnsafeRawBufferPointer"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"}],"title":"withUnsafeBytes(_:)"},"pathComponents":["CollectionOfOne","withUnsafeBytes(_:)"],"swiftExtension":{"constraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"parameters":[{"depth":0,"index":0,"name":"Element"},{"depth":1,"index":0,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking right shift operator (`&>>`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking right shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &>> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &>> 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&>>(_:_:)"},"pathComponents":["UInt32","&>>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right."},{"text":""},{"text":"The `>>` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a left shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*. An overshift results in `-1` for a"},{"text":"  negative value of `lhs` or `0` for a nonnegative value."},{"text":"- Using any other value for `rhs` performs a right shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted right by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x >> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x >> 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a left shift"},{"text":"using `abs(rhs)`."},{"text":""},{"text":"    let a = x >> -3"},{"text":"    // a == 240                       // 0b11110000"},{"text":"    let b = x << 3"},{"text":"    // b == 240                       // 0b11110000"},{"text":""},{"text":"Right shift operations on negative values \"fill in\" the high bits with"},{"text":"ones instead of zeros."},{"text":""},{"text":"    let q: Int8 = -30                 // 0b11100010"},{"text":"    let r = q >> 2"},{"text":"    // r == -8                        // 0b11111000"},{"text":""},{"text":"    let s = q >> 11"},{"text":"    // s == -1                        // 0b11111111"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":">>(_:_:)"},"pathComponents":["UInt",">>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","availability":[{"deprecated":{"major":4,"minor":0},"domain":"Swift","message":"Please use String slicing subscript with a 'partial range from' operator."}],"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"substring"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"index"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"docComment":{"lines":[{"text":"Returns a new string containing the characters of the"},{"text":"`String` from the one at a given index to the end."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"index"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"}],"internalName":"index","name":"from"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE9substring4fromS2S5IndexV_tF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"substring"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"substring(from:)"},"pathComponents":["StringProtocol","substring(from:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the sum of the two given values, wrapping the result in case of"},{"text":"any overflow."},{"text":""},{"text":"The overflow addition operator (`&+`) discards any bits that overflow the"},{"text":"fixed width of the integer type. In the following example, the sum of"},{"text":"`100` and `121` is greater than the maximum representable `Int8` value,"},{"text":"so the result is the partial value after discarding the overflowing"},{"text":"bits."},{"text":""},{"text":"    let x: Int8 = 10 &+ 21"},{"text":"    // x == 31"},{"text":"    let y: Int8 = 100 &+ 121"},{"text":"    // y == -35 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to add."},{"text":"  - rhs: The second value to add."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&+(_:_:)"},"pathComponents":["Int16","&+(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s6UInt64V10FoundationE7exactlyABSgAC8NSNumberC_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["UInt64","init(exactly:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1goiySbx_xtFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["Int",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"decomposedStringWithCompatibilityMapping"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A string created by normalizing the string's contents using Form KD."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE40decomposedStringWithCompatibilityMappingSSvp"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"decomposedStringWithCompatibilityMapping"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"decomposedStringWithCompatibilityMapping"},"pathComponents":["StringProtocol","decomposedStringWithCompatibilityMapping"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s6UInt32V10FoundationE7exactlyABSgAC8NSNumberC_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["UInt32","init(exactly:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"name":"count"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSryqd__G_SitlF::SYNTHESIZED::s:SR"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:count:)"},"pathComponents":["UnsafeBufferPointer","copyBytes(to:count:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"DestinationType"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSryqd__G_tlF::SYNTHESIZED::s:s8RepeatedV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:)"},"pathComponents":["Repeated","copyBytes(to:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"DestinationType"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is less than that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"less-than operator (`<`), even if the two instances are of different"},{"text":"types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1loiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<(_:_:)"},"pathComponents":["Int64","<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is greater than that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"greater-than operator (`>`), even if the two instances are of different"},{"text":"types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1goiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["Int32",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"regions"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s15EmptyCollectionV","spelling":"EmptyCollection"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","spelling":"Data"},{"kind":"text","spelling":"> { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s15EmptyCollectionV10Foundations5UInt8VRszlE7regionsAByAC4DataVGvp"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"regions"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s15EmptyCollectionV","spelling":"EmptyCollection"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","spelling":"Data"},{"kind":"text","spelling":">"}],"title":"regions"},"pathComponents":["EmptyCollection","regions"],"swiftExtension":{"constraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the difference of the two given values, wrapping the result in"},{"text":"case of any overflow."},{"text":""},{"text":"The overflow subtraction operator (`&-`) discards any bits that overflow"},{"text":"the fixed width of the integer type. In the following example, the"},{"text":"difference of `10` and `21` is less than zero, the minimum representable"},{"text":"`UInt` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    let x: UInt8 = 21 &- 10"},{"text":"    // x == 11"},{"text":"    let y: UInt8 = 10 &- 21"},{"text":"    // y == 245 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A numeric value."},{"text":"  - rhs: The value to subtract from `lhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&-(_:_:)"},"pathComponents":["UInt16","&-(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is greater than or equal to that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"greater-than-or-equal-to operator (`>=`), even if the two instances are"},{"text":"of different types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2geoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["UInt32",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Subtracts the second value from the first and stores the difference in the"},{"text":"left-hand-side variable, wrapping any overflow."},{"text":""},{"text":"The masking subtraction assignment operator (`&-=`) silently wraps any"},{"text":"overflow that occurs during the operation. In the following example, the"},{"text":"difference of `10` and `21` is less than zero, the minimum representable"},{"text":"`UInt` value, so the result is the result is the partial value after"},{"text":"discarding the overflowing bits."},{"text":""},{"text":"    var x: Int8 = 21"},{"text":"    x &-= 10"},{"text":"    // x == 11"},{"text":"    var y: UInt8 = 10"},{"text":"    y &-= 21"},{"text":"    // y == 245 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A numeric value."},{"text":"  - rhs: The value to subtract from `lhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&-=(_:_:)"},"pathComponents":["Int8","&-=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is less than or equal to that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"less-than-or-equal-to operator (`<=`), even if the two instances are of"},{"text":"different types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2leoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["UInt","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SG","spelling":"RandomNumberGenerator"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range, using the given"},{"text":"generator as a source for randomness."},{"text":""},{"text":"Use this method to generate an integer within a specific range when you"},{"text":"are using a custom random number generator. This example creates three"},{"text":"new values in the range `1..<100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1..<100, using: &myGenerator))"},{"text":"    }"},{"text":"    // Prints \"7\""},{"text":"    // Prints \"44\""},{"text":"    // Prints \"21\""},{"text":""},{"text":"- Note: The algorithm used to create random values may change in a future"},{"text":"  version of Swift. If you're passing a generator that results in the"},{"text":"  same sequence of integer values each time you run your program, that"},{"text":"  sequence may change when your program is compiled using a different"},{"text":"  version of Swift."},{"text":""},{"text":"- Parameters:"},{"text":"  - range: The range in which to create a random value."},{"text":"    `range` must not be empty."},{"text":"  - generator: The random number generator to use when creating the"},{"text":"    new random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"},{"declarationFragments":[{"kind":"identifier","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"generator","name":"using"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:using:)"},"pathComponents":["UInt8","random(in:using:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"RandomNumberGenerator","rhsPrecise":"s:SG"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range extending upward from a lower bound."},{"text":""},{"text":"Use the postfix range operator (postfix `...`) to create a partial range"},{"text":"of any type that conforms to the `Comparable` protocol. This example"},{"text":"creates a `PartialRangeFrom<Double>` instance that includes any value"},{"text":"greater than or equal to `5.0`."},{"text":""},{"text":"    let atLeastFive = 5.0..."},{"text":""},{"text":"    atLeastFive.contains(4.0)     // false"},{"text":"    atLeastFive.contains(5.0)     // true"},{"text":"    atLeastFive.contains(6.0)     // true"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the partial range's lower bound up to the end"},{"text":"of the collection."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[3...])"},{"text":"    // Prints \"[40, 50, 60, 70]\""},{"text":""},{"text":"- Parameter minimum: The lower bound for the range."},{"text":""},{"text":"- Precondition: `minimum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:)"},"pathComponents":["UInt8","...(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"text"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"radix"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" = 10) "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"docComment":{"lines":[{"text":"Creates a new integer value from the given string and radix."},{"text":""},{"text":"The string passed as `text` may begin with a plus or minus sign character"},{"text":"(`+` or `-`), followed by one or more numeric digits (`0-9`) or letters"},{"text":"(`a-z` or `A-Z`). Parsing of the string is case insensitive."},{"text":""},{"text":"    let x = Int(\"123\")"},{"text":"    // x == 123"},{"text":""},{"text":"    let y = Int(\"-123\", radix: 8)"},{"text":"    // y == -83"},{"text":"    let y = Int(\"+123\", radix: 8)"},{"text":"    // y == +83"},{"text":""},{"text":"    let z = Int(\"07b\", radix: 16)"},{"text":"    // z == 123"},{"text":""},{"text":"If `text` is in an invalid format or contains characters that are out of"},{"text":"bounds for the given `radix`, or if the value it denotes in the given"},{"text":"`radix` is not representable, the result is `nil`. For example, the"},{"text":"following conversions result in `nil`:"},{"text":""},{"text":"    Int(\" 100\")                       // Includes whitespace"},{"text":"    Int(\"21-50\")                      // Invalid format"},{"text":"    Int(\"ff6600\")                     // Characters out of bounds"},{"text":"    Int(\"zzzzzzzzzzzzz\", radix: 36)   // Out of range"},{"text":""},{"text":"- Parameters:"},{"text":"  - text: The ASCII representation of a number in the radix passed as"},{"text":"    `radix`."},{"text":"  - radix: The radix, or base, to use for converting `text` to an integer"},{"text":"    value. `radix` must be in the range `2...36`. The default is 10."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"radix"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":")"}],"title":"init(_:radix:)"},"pathComponents":["Int16","init(_:radix:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"S","rhs":"StringProtocol","rhsPrecise":"s:Sy"}],"parameters":[{"depth":1,"index":0,"name":"S"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a closed range that contains both of its bounds."},{"text":""},{"text":"Use the closed range operator (`...`) to create a closed range of any type"},{"text":"that conforms to the `Comparable` protocol. This example creates a"},{"text":"`ClosedRange<Character>` from \"a\" up to, and including, \"z\"."},{"text":""},{"text":"    let lowercase = \"a\"...\"z\""},{"text":"    print(lowercase.contains(\"z\"))"},{"text":"    // Prints \"true\""},{"text":""},{"text":"- Parameters:"},{"text":"  - minimum: The lower bound for the range."},{"text":"  - maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `minimum <= maximum`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"},{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:_:)"},"pathComponents":["Int16","...(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3ggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":">>=(_:_:)"},"pathComponents":["UInt64",">>=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Adds two values and stores the result in the left-hand-side variable,"},{"text":"wrapping any overflow."},{"text":""},{"text":"The masking addition assignment operator (`&+=`) silently wraps any"},{"text":"overflow that occurs during the operation. In the following example, the"},{"text":"sum of `100` and `121` is greater than the maximum representable `Int8`"},{"text":"value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    var x: Int8 = 10"},{"text":"    x &+= 21"},{"text":"    // x == 31"},{"text":"    var y: Int8 = 100"},{"text":"    y &+= 121"},{"text":"    // y == -35 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to add."},{"text":"  - rhs: The second value to add."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&+=(_:_:)"},"pathComponents":["UInt16","&+=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"contentsOf"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"url"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV","spelling":"URL"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE10contentsOfSSAA3URLVh_tKcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"contentsOf"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV","spelling":"URL"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"title":"init(contentsOf:)"},"pathComponents":["String","init(contentsOf:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is less than or equal to that of the second argument."},{"text":""},{"text":"This is the default implementation of the less-than-or-equal-to"},{"text":"operator (`<=`) for any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE2leoiySbx_xtFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["Int8","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"deprecated":{"major":4},"domain":"Swift","renamed":"init(truncating:)"}],"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Sb10FoundationEySbAA8NSNumberCcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Bool","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"decode"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"forKey"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"key"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV","spelling":"KeyedDecodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation26DecodableWithConfigurationP","spelling":"DecodableWithConfiguration"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"_"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":".Type"}],"name":""},{"declarationFragments":[{"kind":"identifier","spelling":"key"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV","spelling":"KeyedDecodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"}],"internalName":"key","name":"forKey"},{"declarationFragments":[{"kind":"identifier","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"}],"name":"configuration"}],"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s22KeyedDecodingContainerV10FoundationE6decode_6forKey13configurationqd__qd__m_x0B13ConfigurationQyd__tKAC013DecodableWithI0Rd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"decode"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"forKey"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV","spelling":"KeyedDecodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}],"title":"decode(_:forKey:configuration:)"},"pathComponents":["KeyedDecodingContainer","decode(_:forKey:configuration:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"K","rhs":"CodingKey","rhsPrecise":"s:s9CodingKeyP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"K","rhs":"CodingKey","rhsPrecise":"s:s9CodingKeyP"},{"kind":"conformance","lhs":"T","rhs":"DecodableWithConfiguration","rhsPrecise":"s:10Foundation26DecodableWithConfigurationP"}],"parameters":[{"depth":0,"index":0,"name":"K"},{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"utf16"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE8EncodingV5utf16ACvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"utf16"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"title":"utf16"},"pathComponents":["String","Encoding","utf16"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is greater than that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"greater-than operator (`>`), even if the two instances are of different"},{"text":"types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1goiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["UInt64",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"utf16BigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE8EncodingV14utf16BigEndianACvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"utf16BigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"title":"utf16BigEndian"},"pathComponents":["String","Encoding","utf16BigEndian"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}],"docComment":{"lines":[{"text":"Creates a new value equal to zero."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsExycfc::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}],"title":"init()"},"pathComponents":["Int8","init()"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"enumerateLines"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"invoking"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"body"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":", "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","spelling":"Void"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Enumerates all the lines in a string."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":", "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","spelling":"Void"}],"internalName":"body","name":"invoking"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE14enumerateLines8invokingyySS_Sbztc_tF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"enumerateLines"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"invoking"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":", "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","spelling":"Void"},{"kind":"text","spelling":")"}],"title":"enumerateLines(invoking:)"},"pathComponents":["StringProtocol","enumerateLines(invoking:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"name":"count"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSw_SitF::SYNTHESIZED::s:s8RepeatedV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:count:)"},"pathComponents":["Repeated","copyBytes(to:count:)"],"swiftExtension":{"extendedModule":"Foundation"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the sum of the two given values, wrapping the result in case of"},{"text":"any overflow."},{"text":""},{"text":"The overflow addition operator (`&+`) discards any bits that overflow the"},{"text":"fixed width of the integer type. In the following example, the sum of"},{"text":"`100` and `121` is greater than the maximum representable `Int8` value,"},{"text":"so the result is the partial value after discarding the overflowing"},{"text":"bits."},{"text":""},{"text":"    let x: Int8 = 10 &+ 21"},{"text":"    // x == 31"},{"text":"    let y: Int8 = 100 &+ 121"},{"text":"    // y == -35 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to add."},{"text":"  - rhs: The second value to add."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&+(_:_:)"},"pathComponents":["UInt16","&+(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"contentsOfFile"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"path"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE14contentsOfFileS2Sh_tKcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"contentsOfFile"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"title":"init(contentsOfFile:)"},"pathComponents":["String","init(contentsOfFile:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9lastRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:s8RepeatedV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"lastRange(of:)"},"pathComponents":["Repeated","lastRange(of:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"D"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the difference of the two given values, wrapping the result in"},{"text":"case of any overflow."},{"text":""},{"text":"The overflow subtraction operator (`&-`) discards any bits that overflow"},{"text":"the fixed width of the integer type. In the following example, the"},{"text":"difference of `10` and `21` is less than zero, the minimum representable"},{"text":"`UInt` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    let x: UInt8 = 21 &- 10"},{"text":"    // x == 11"},{"text":"    let y: UInt8 = 10 &- 21"},{"text":"    // y == 245 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A numeric value."},{"text":"  - rhs: The value to subtract from `lhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&-(_:_:)"},"pathComponents":["Int16","&-(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a half-open range that contains its lower bound but not its upper"},{"text":"bound."},{"text":""},{"text":"Use the half-open range operator (`..<`) to create a range of any type"},{"text":"that conforms to the `Comparable` protocol. This example creates a"},{"text":"`Range<Double>` from zero up to, but not including, 5.0."},{"text":""},{"text":"    let lessThanFive = 0.0..<5.0"},{"text":"    print(lessThanFive.contains(3.14))  // Prints \"true\""},{"text":"    print(lessThanFive.contains(5.0))   // Prints \"false\""},{"text":""},{"text":"- Parameters:"},{"text":"  - minimum: The lower bound for the range."},{"text":"  - maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `minimum <= maximum`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"},{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"..<(_:_:)"},"pathComponents":["Int16","..<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is greater than or equal to that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"greater-than-or-equal-to operator (`>=`), even if the two instances are"},{"text":"of different types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2geoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["Int32",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is less than or equal to that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"less-than-or-equal-to operator (`<=`), even if the two instances are of"},{"text":"different types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2leoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["Int64","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"truncating"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Sb10FoundationE10truncatingSbAA8NSNumberC_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"truncating"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(truncating:)"},"pathComponents":["Bool","init(truncating:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range."},{"text":""},{"text":"Use this method to generate an integer within a specific range. This"},{"text":"example creates three new values in the range `1..<100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1..<100))"},{"text":"    }"},{"text":"    // Prints \"53\""},{"text":"    // Prints \"64\""},{"text":"    // Prints \"5\""},{"text":""},{"text":"This method is equivalent to calling the version that takes a generator,"},{"text":"passing in the system's default random generator."},{"text":""},{"text":"- Parameter range: The range in which to create a random value."},{"text":"  `range` must not be empty."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:)"},"pathComponents":["UInt8","random(in:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking right shift operator (`&>>`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking right shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &>> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &>> 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&>>(_:_:)"},"pathComponents":["UInt64","&>>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"clamping"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance with the representable value that's closest to the"},{"text":"given integer."},{"text":""},{"text":"If the value passed as `source` is greater than the maximum representable"},{"text":"value in this type, the result is the type's `max` value. If `source` is"},{"text":"less than the smallest representable value in this type, the result is"},{"text":"the type's `min` value."},{"text":""},{"text":"In this example, `x` is initialized as an `Int8` instance by clamping"},{"text":"`500` to the range `-128...127`, and `y` is initialized as a `UInt`"},{"text":"instance by clamping `-500` to the range `0...UInt.max`."},{"text":""},{"text":"    let x = Int8(clamping: 500)"},{"text":"    // x == 127"},{"text":"    // x == Int8.max"},{"text":""},{"text":"    let y = UInt(clamping: -500)"},{"text":"    // y == 0"},{"text":""},{"text":"- Parameter source: An integer to convert to this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"clamping"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"init(clamping:)"},"pathComponents":["UInt8","init(clamping:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"fastestEncoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The fastest encoding to which the string can be converted without loss"},{"text":"of information."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE15fastestEncodingSSAAE0C0Vvp"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"fastestEncoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"title":"fastestEncoding"},"pathComponents":["StringProtocol","fastestEncoding"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedCaseInsensitiveContains"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the given string is non-empty"},{"text":"and contained within this string by case-insensitive, non-literal"},{"text":"search, taking into account the current locale."},{"text":""},{"text":"Locale-independent case-insensitive operation, and other needs, can be"},{"text":"achieved by calling `range(of:options:range:locale:)`."},{"text":""},{"text":"Equivalent to:"},{"text":""},{"text":"    range(of: other, options: .caseInsensitiveSearch,"},{"text":"          locale: Locale.current) != nil"}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"other"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE32localizedCaseInsensitiveContainsySbqd__SyRd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedCaseInsensitiveContains"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"localizedCaseInsensitiveContains(_:)"},"pathComponents":["StringProtocol","localizedCaseInsensitiveContains(_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is greater than or equal to that of the second argument."},{"text":""},{"text":"This is the default implementation of the greater-than-or-equal-to operator"},{"text":"(`>=`) for any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."},{"text":"- Returns: `true` if `lhs` is greater than or equal to `rhs`; otherwise,"},{"text":"  `false`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE2geoiySbx_xtFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["Int8",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates a new integer value from the given string."},{"text":""},{"text":"The string passed as `description` may begin with a plus or minus sign"},{"text":"character (`+` or `-`), followed by one or more numeric digits (`0-9`)."},{"text":""},{"text":"    let x = Int(\"123\")"},{"text":"    // x == 123"},{"text":""},{"text":"If `description` is in an invalid format, or if the value it denotes in"},{"text":"base 10 is not representable, the result is `nil`. For example, the"},{"text":"following conversions result in `nil`:"},{"text":""},{"text":"    Int(\" 100\")                       // Includes whitespace"},{"text":"    Int(\"21-50\")                      // Invalid format"},{"text":"    Int(\"ff6600\")                     // Characters out of bounds"},{"text":"    Int(\"10000000000000000000000000\") // Out of range"},{"text":""},{"text":"- Parameter description: The ASCII representation of a number."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsEyxSgSScfc::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Int8","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the given integer."},{"text":""},{"text":"Use this initializer to convert from another integer type when you know"},{"text":"the value is within the bounds of this type. Passing a value that can't"},{"text":"be represented in this type results in a runtime error."},{"text":""},{"text":"In the following example, the constant `y` is successfully created from"},{"text":"`x`, an `Int` instance with a value of `100`. Because the `Int8` type"},{"text":"can represent `127` at maximum, the attempt to create `z` with a value"},{"text":"of `1000` results in a runtime error."},{"text":""},{"text":"    let x = 100"},{"text":"    let y = Int8(x)"},{"text":"    // y == 100"},{"text":"    let z = Int8(x * 10)"},{"text":"    // Error: Not enough bits to represent the given value"},{"text":""},{"text":"- Parameter source: A value to convert to this type of integer. The value"},{"text":"  passed as `source` must be representable in this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["UInt16","init(_:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"},{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"getCString"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"buffer"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" ["},{"kind":"typeIdentifier","preciseIdentifier":"s:s5CChara","spelling":"CChar"},{"kind":"text","spelling":"], "},{"kind":"externalParam","spelling":"maxLength"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Converts the `String`'s content to a given encoding and"},{"text":"stores them in a buffer."},{"text":"- Note: will store a maximum of `min(buffer.count, maxLength)` bytes."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"buffer"},{"kind":"text","spelling":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:s5CChara","spelling":"CChar"},{"kind":"text","spelling":"]"}],"name":"buffer"},{"declarationFragments":[{"kind":"identifier","spelling":"maxLength"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"name":"maxLength"},{"declarationFragments":[{"kind":"identifier","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"name":"encoding"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE10getCString_9maxLength8encodingSbSays4Int8VGz_SiSSAAE8EncodingVtF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"getCString"},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" ["},{"kind":"typeIdentifier","preciseIdentifier":"s:s5CChara","spelling":"CChar"},{"kind":"text","spelling":"], "},{"kind":"externalParam","spelling":"maxLength"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"getCString(_:maxLength:encoding:)"},"pathComponents":["StringProtocol","getCString(_:maxLength:encoding:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is less than that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"less-than operator (`<`), even if the two instances are of different"},{"text":"types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1loiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<(_:_:)"},"pathComponents":["UInt","<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the product of the two given values, wrapping the result in case"},{"text":"of any overflow."},{"text":""},{"text":"The overflow multiplication operator (`&*`) discards any bits that"},{"text":"overflow the fixed width of the integer type. In the following example,"},{"text":"the product of `10` and `50` is greater than the maximum representable"},{"text":"`Int8` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    let x: Int8 = 10 &* 5"},{"text":"    // x == 50"},{"text":"    let y: Int8 = 10 &* 50"},{"text":"    // y == -12 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to multiply."},{"text":"  - rhs: The second value to multiply."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&*(_:_:)"},"pathComponents":["Int8","&*(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is greater than that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"greater-than operator (`>`), even if the two instances are of different"},{"text":"types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1goiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["UInt32",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"}],"internalName":"ptr","name":"to"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSw_tF::SYNTHESIZED::s:s8RepeatedV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:)"},"pathComponents":["Repeated","copyBytes(to:)"],"swiftExtension":{"extendedModule":"Foundation"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"contentsOf"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"url"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV","spelling":"URL"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"encoding"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"enc"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"docComment":{"lines":[{"text":"Produces a string created by reading data from a given URL"},{"text":"interpreted using a given encoding.  Errors are written into the"},{"text":"inout `error` argument."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE10contentsOf8encodingSSAA3URLVh_SSAAE8EncodingVtKcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"contentsOf"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV","spelling":"URL"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"title":"init(contentsOf:encoding:)"},"pathComponents":["String","init(contentsOf:encoding:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range up to, and including, its upper bound."},{"text":""},{"text":"Use the prefix closed range operator (prefix `...`) to create a partial"},{"text":"range of any type that conforms to the `Comparable` protocol. This"},{"text":"example creates a `PartialRangeThrough<Double>` instance that includes"},{"text":"any value less than or equal to `5.0`."},{"text":""},{"text":"    let throughFive = ...5.0"},{"text":""},{"text":"    throughFive.contains(4.0)     // true"},{"text":"    throughFive.contains(5.0)     // true"},{"text":"    throughFive.contains(6.0)     // false"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the start of the collection up to, and"},{"text":"including, the partial range's upper bound."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[...3])"},{"text":"    // Prints \"[10, 20, 30, 40]\""},{"text":""},{"text":"- Parameter maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `maximum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:)"},"pathComponents":["UInt8","...(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"},{"declarationFragments":[{"kind":"identifier","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"y"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SxsE2eeoiySbx_xtFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"==(_:_:)"},"pathComponents":["UInt8","==(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"text"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"radix"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" = 10) "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"docComment":{"lines":[{"text":"Creates a new integer value from the given string and radix."},{"text":""},{"text":"The string passed as `text` may begin with a plus or minus sign character"},{"text":"(`+` or `-`), followed by one or more numeric digits (`0-9`) or letters"},{"text":"(`a-z` or `A-Z`). Parsing of the string is case insensitive."},{"text":""},{"text":"    let x = Int(\"123\")"},{"text":"    // x == 123"},{"text":""},{"text":"    let y = Int(\"-123\", radix: 8)"},{"text":"    // y == -83"},{"text":"    let y = Int(\"+123\", radix: 8)"},{"text":"    // y == +83"},{"text":""},{"text":"    let z = Int(\"07b\", radix: 16)"},{"text":"    // z == 123"},{"text":""},{"text":"If `text` is in an invalid format or contains characters that are out of"},{"text":"bounds for the given `radix`, or if the value it denotes in the given"},{"text":"`radix` is not representable, the result is `nil`. For example, the"},{"text":"following conversions result in `nil`:"},{"text":""},{"text":"    Int(\" 100\")                       // Includes whitespace"},{"text":"    Int(\"21-50\")                      // Invalid format"},{"text":"    Int(\"ff6600\")                     // Characters out of bounds"},{"text":"    Int(\"zzzzzzzzzzzzz\", radix: 36)   // Out of range"},{"text":""},{"text":"- Parameters:"},{"text":"  - text: The ASCII representation of a number in the radix passed as"},{"text":"    `radix`."},{"text":"  - radix: The radix, or base, to use for converting `text` to an integer"},{"text":"    value. `radix` must be in the range `2...36`. The default is 10."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"radix"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":")"}],"title":"init(_:radix:)"},"pathComponents":["UInt16","init(_:radix:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"S","rhs":"StringProtocol","rhsPrecise":"s:Sy"}],"parameters":[{"depth":1,"index":0,"name":"S"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3ggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":">>=(_:_:)"},"pathComponents":["UInt32",">>=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"macOSRoman"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE8EncodingV10macOSRomanACvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"macOSRoman"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"title":"macOSRoman"},"pathComponents":["String","Encoding","macOSRoman"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isSigned"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A Boolean value indicating whether this type is a signed integer type."},{"text":""},{"text":"This property is always `true` for signed integer types."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZsE8isSignedSbvpZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isSigned"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"isSigned"},"pathComponents":["Int","isSigned"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking right shift operator (`&>>`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking right shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &>> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &>> 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&>>(_:_:)"},"pathComponents":["Int32","&>>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"from"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPA2A15ContiguousBytesRzrlE04copyE02to4fromySryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexSlRtzr0_lF::SYNTHESIZED::s:SW"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":")"}],"title":"copyBytes(to:from:)"},"pathComponents":["UnsafeRawBufferPointer","copyBytes(to:from:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"ContiguousBytes","rhsPrecise":"s:10Foundation15ContiguousBytesP"}],"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"ContiguousBytes","rhsPrecise":"s:10Foundation15ContiguousBytesP"},{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"DestinationType"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Adds two values and stores the result in the left-hand-side variable,"},{"text":"wrapping any overflow."},{"text":""},{"text":"The masking addition assignment operator (`&+=`) silently wraps any"},{"text":"overflow that occurs during the operation. In the following example, the"},{"text":"sum of `100` and `121` is greater than the maximum representable `Int8`"},{"text":"value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    var x: Int8 = 10"},{"text":"    x &+= 21"},{"text":"    // x == 31"},{"text":"    var y: Int8 = 100"},{"text":"    y &+= 121"},{"text":"    // y == -35 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to add."},{"text":"  - rhs: The second value to add."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&+=(_:_:)"},"pathComponents":["Int16","&+=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is greater than or equal to that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"greater-than-or-equal-to operator (`>=`), even if the two instances are"},{"text":"of different types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2geoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["UInt64",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SG","spelling":"RandomNumberGenerator"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range, using the given"},{"text":"generator as a source for randomness."},{"text":""},{"text":"Use this method to generate an integer within a specific range when you"},{"text":"are using a custom random number generator. This example creates three"},{"text":"new values in the range `1...100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1...100, using: &myGenerator))"},{"text":"    }"},{"text":"    // Prints \"7\""},{"text":"    // Prints \"44\""},{"text":"    // Prints \"21\""},{"text":""},{"text":"- Parameters:"},{"text":"  - range: The range in which to create a random value."},{"text":"  - generator: The random number generator to use when creating the"},{"text":"    new random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"},{"declarationFragments":[{"kind":"identifier","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"generator","name":"using"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:using:)"},"pathComponents":["UInt8","random(in:using:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"RandomNumberGenerator","rhsPrecise":"s:SG"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Sb10FoundationE7exactlySbSgAA8NSNumberC_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["Bool","init(exactly:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right."},{"text":""},{"text":"The `>>` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a left shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*. An overshift results in `-1` for a"},{"text":"  negative value of `lhs` or `0` for a nonnegative value."},{"text":"- Using any other value for `rhs` performs a right shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted right by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x >> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x >> 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a left shift"},{"text":"using `abs(rhs)`."},{"text":""},{"text":"    let a = x >> -3"},{"text":"    // a == 240                       // 0b11110000"},{"text":"    let b = x << 3"},{"text":"    // b == 240                       // 0b11110000"},{"text":""},{"text":"Right shift operations on negative values \"fill in\" the high bits with"},{"text":"ones instead of zeros."},{"text":""},{"text":"    let q: Int8 = -30                 // 0b11100010"},{"text":"    let r = q >> 2"},{"text":"    // r == -8                        // 0b11111000"},{"text":""},{"text":"    let s = q >> 11"},{"text":"    // s == -1                        // 0b11111111"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":">>(_:_:)"},"pathComponents":["Int32",">>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a closed range that contains both of its bounds."},{"text":""},{"text":"Use the closed range operator (`...`) to create a closed range of any type"},{"text":"that conforms to the `Comparable` protocol. This example creates a"},{"text":"`ClosedRange<Character>` from \"a\" up to, and including, \"z\"."},{"text":""},{"text":"    let lowercase = \"a\"...\"z\""},{"text":"    print(lowercase.contains(\"z\"))"},{"text":"    // Prints \"true\""},{"text":""},{"text":"- Parameters:"},{"text":"  - minimum: The lower bound for the range."},{"text":"  - maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `minimum <= maximum`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"},{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:_:)"},"pathComponents":["UInt16","...(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"}],"internalName":"ptr","name":"to"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSw_tF::SYNTHESIZED::s:SR"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:)"},"pathComponents":["UnsafeBufferPointer","copyBytes(to:)"],"swiftExtension":{"extendedModule":"Foundation"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2neoiySbx_xtFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"!=(_:_:)"},"pathComponents":["Int","!=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is less than or equal to that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"less-than-or-equal-to operator (`<=`), even if the two instances are of"},{"text":"different types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2leoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["UInt64","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking right shift operator (`&>>`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking right shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &>> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &>> 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&>>(_:_:)"},"pathComponents":["Int64","&>>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"decodeIfPresent"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"C"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"forKey"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"key"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV","spelling":"KeyedDecodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":".Type) "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation26DecodableWithConfigurationP","spelling":"DecodableWithConfiguration"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation30DecodingConfigurationProvidingP","spelling":"DecodingConfigurationProviding"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"_"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":".Type"}],"name":""},{"declarationFragments":[{"kind":"identifier","spelling":"key"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV","spelling":"KeyedDecodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"}],"internalName":"key","name":"forKey"},{"declarationFragments":[{"kind":"identifier","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":".Type"}],"name":"configuration"}],"returns":[{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s22KeyedDecodingContainerV10FoundationE15decodeIfPresent_6forKey13configurationqd__Sgqd__m_xqd_0_mtKAC26DecodableWithConfigurationRd__AC0bM9ProvidingRd_0_0bM0Qyd_0_AJRtd__r0_lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"decodeIfPresent"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"C"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"forKey"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV","spelling":"KeyedDecodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":".Type) "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"?"}],"title":"decodeIfPresent(_:forKey:configuration:)"},"pathComponents":["KeyedDecodingContainer","decodeIfPresent(_:forKey:configuration:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"K","rhs":"CodingKey","rhsPrecise":"s:s9CodingKeyP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"K","rhs":"CodingKey","rhsPrecise":"s:s9CodingKeyP"},{"kind":"conformance","lhs":"T","rhs":"DecodableWithConfiguration","rhsPrecise":"s:10Foundation26DecodableWithConfigurationP"},{"kind":"conformance","lhs":"C","rhs":"DecodingConfigurationProviding","rhsPrecise":"s:10Foundation30DecodingConfigurationProvidingP"},{"kind":"sameType","lhs":"T.DecodingConfiguration","rhs":"C.DecodingConfiguration"}],"parameters":[{"depth":0,"index":0,"name":"K"},{"depth":1,"index":0,"name":"T"},{"depth":1,"index":1,"name":"C"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3ggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":">>=(_:_:)"},"pathComponents":["UInt",">>=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right."},{"text":""},{"text":"The `>>` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a left shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*. An overshift results in `-1` for a"},{"text":"  negative value of `lhs` or `0` for a nonnegative value."},{"text":"- Using any other value for `rhs` performs a right shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted right by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x >> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x >> 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a left shift"},{"text":"using `abs(rhs)`."},{"text":""},{"text":"    let a = x >> -3"},{"text":"    // a == 240                       // 0b11110000"},{"text":"    let b = x << 3"},{"text":"    // b == 240                       // 0b11110000"},{"text":""},{"text":"Right shift operations on negative values \"fill in\" the high bits with"},{"text":"ones instead of zeros."},{"text":""},{"text":"    let q: Int8 = -30                 // 0b11100010"},{"text":"    let r = q >> 2"},{"text":"    // r == -8                        // 0b11111000"},{"text":""},{"text":"    let s = q >> 11"},{"text":"    // s == -1                        // 0b11111111"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":">>(_:_:)"},"pathComponents":["Int64",">>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"hash"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"An unsigned integer that can be used as a hash table address."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE4hashSivp"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"hash"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"hash"},"pathComponents":["StringProtocol","hash"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"format"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"arguments"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7CVarArgP","spelling":"CVarArg"},{"kind":"text","spelling":"...)"}],"docComment":{"lines":[{"text":"Returns a `String` object initialized by using a given"},{"text":"format string as a template into which the remaining argument"},{"text":"values are substituted."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE6format_S2Sh_s7CVarArg_pdtcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"format"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7CVarArgP","spelling":"CVarArg"},{"kind":"text","spelling":"...)"}],"title":"init(format:_:)"},"pathComponents":["String","init(format:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"iso2022JP"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE8EncodingV9iso2022JPACvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"iso2022JP"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"title":"iso2022JP"},"pathComponents":["String","Encoding","iso2022JP"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Subtracts the second value from the first and stores the difference in the"},{"text":"left-hand-side variable, wrapping any overflow."},{"text":""},{"text":"The masking subtraction assignment operator (`&-=`) silently wraps any"},{"text":"overflow that occurs during the operation. In the following example, the"},{"text":"difference of `10` and `21` is less than zero, the minimum representable"},{"text":"`UInt` value, so the result is the result is the partial value after"},{"text":"discarding the overflowing bits."},{"text":""},{"text":"    var x: Int8 = 21"},{"text":"    x &-= 10"},{"text":"    // x == 11"},{"text":"    var y: UInt8 = 10"},{"text":"    y &-= 21"},{"text":"    // y == 245 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A numeric value."},{"text":"  - rhs: The value to subtract from `lhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&-=(_:_:)"},"pathComponents":["Int16","&-=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is less than that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"less-than operator (`<`), even if the two instances are of different"},{"text":"types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1loiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<(_:_:)"},"pathComponents":["UInt32","<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"decoder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","spelling":"Decoder"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Wrapped"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Sq10FoundationAA26DecodableWithConfigurationRzlE4from13configurationxSgs7Decoder_p_08DecodingD0QztKcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","spelling":"Decoder"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Wrapped"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"title":"init(from:configuration:)"},"pathComponents":["Optional","init(from:configuration:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Wrapped","rhs":"DecodableWithConfiguration","rhsPrecise":"s:10Foundation26DecodableWithConfigurationP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Wrapped","rhs":"DecodableWithConfiguration","rhsPrecise":"s:10Foundation26DecodableWithConfigurationP"}],"parameters":[{"depth":0,"index":0,"name":"Wrapped"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is greater than that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"greater-than operator (`>`), even if the two instances are of different"},{"text":"types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1goiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["UInt",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range up to, but not including, its upper bound."},{"text":""},{"text":"Use the prefix half-open range operator (prefix `..<`) to create a"},{"text":"partial range of any type that conforms to the `Comparable` protocol."},{"text":"This example creates a `PartialRangeUpTo<Double>` instance that includes"},{"text":"any value less than `5.0`."},{"text":""},{"text":"    let upToFive = ..<5.0"},{"text":""},{"text":"    upToFive.contains(3.14)       // true"},{"text":"    upToFive.contains(6.28)       // false"},{"text":"    upToFive.contains(5.0)        // false"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the start of the collection up to, but not"},{"text":"including, the partial range's upper bound."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[..<3])"},{"text":"    // Prints \"[10, 20, 30]\""},{"text":""},{"text":"- Parameter maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `maximum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"..<(_:)"},"pathComponents":["UInt8","..<(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the sum of the two given values, wrapping the result in case of"},{"text":"any overflow."},{"text":""},{"text":"The overflow addition operator (`&+`) discards any bits that overflow the"},{"text":"fixed width of the integer type. In the following example, the sum of"},{"text":"`100` and `121` is greater than the maximum representable `Int8` value,"},{"text":"so the result is the partial value after discarding the overflowing"},{"text":"bits."},{"text":""},{"text":"    let x: Int8 = 10 &+ 21"},{"text":"    // x == 31"},{"text":"    let y: Int8 = 100 &+ 121"},{"text":"    // y == -35 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to add."},{"text":"  - rhs: The second value to add."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&+(_:_:)"},"pathComponents":["Int8","&+(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"format"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"arguments"},{"kind":"text","spelling":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:s7CVarArgP","spelling":"CVarArg"},{"kind":"text","spelling":"])"}],"docComment":{"lines":[{"text":"Returns a `String` object initialized by using a given"},{"text":"format string as a template into which the remaining argument"},{"text":"values are substituted according to the user's default locale."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE6format9argumentsS2Sh_Says7CVarArg_pGhtcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"format"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"arguments"},{"kind":"text","spelling":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:s7CVarArgP","spelling":"CVarArg"},{"kind":"text","spelling":"])"}],"title":"init(format:arguments:)"},"pathComponents":["String","init(format:arguments:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a closed range that contains both of its bounds."},{"text":""},{"text":"Use the closed range operator (`...`) to create a closed range of any type"},{"text":"that conforms to the `Comparable` protocol. This example creates a"},{"text":"`ClosedRange<Character>` from \"a\" up to, and including, \"z\"."},{"text":""},{"text":"    let lowercase = \"a\"...\"z\""},{"text":"    print(lowercase.contains(\"z\"))"},{"text":"    // Prints \"true\""},{"text":""},{"text":"- Parameters:"},{"text":"  - minimum: The lower bound for the range."},{"text":"  - maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `minimum <= maximum`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"},{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:_:)"},"pathComponents":["Int8","...(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is less than or equal to that of the second argument."},{"text":""},{"text":"This is the default implementation of the less-than-or-equal-to"},{"text":"operator (`<=`) for any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE2leoiySbx_xtFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["Int16","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9lastRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:SR"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"lastRange(of:)"},"pathComponents":["UnsafeBufferPointer","lastRange(of:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"D"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range."},{"text":""},{"text":"Use this method to generate an integer within a specific range. This"},{"text":"example creates three new values in the range `1...100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1...100))"},{"text":"    }"},{"text":"    // Prints \"53\""},{"text":"    // Prints \"64\""},{"text":"    // Prints \"5\""},{"text":""},{"text":"This method is equivalent to calling `random(in:using:)`, passing in the"},{"text":"system's default random generator."},{"text":""},{"text":"- Parameter range: The range in which to create a random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:)"},"pathComponents":["UInt8","random(in:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"regions"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s15CollectionOfOneV","spelling":"CollectionOfOne"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:SW","spelling":"UnsafeRawBufferPointer"},{"kind":"text","spelling":"> { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SW10FoundationE7regionss15CollectionOfOneVySWGvp"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"regions"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s15CollectionOfOneV","spelling":"CollectionOfOne"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:SW","spelling":"UnsafeRawBufferPointer"},{"kind":"text","spelling":">"}],"title":"regions"},"pathComponents":["UnsafeRawBufferPointer","regions"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is greater than or equal to that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"greater-than-or-equal-to operator (`>=`), even if the two instances are"},{"text":"of different types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2geoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["Int64",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"text"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"radix"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" = 10) "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"docComment":{"lines":[{"text":"Creates a new integer value from the given string and radix."},{"text":""},{"text":"The string passed as `text` may begin with a plus or minus sign character"},{"text":"(`+` or `-`), followed by one or more numeric digits (`0-9`) or letters"},{"text":"(`a-z` or `A-Z`). Parsing of the string is case insensitive."},{"text":""},{"text":"    let x = Int(\"123\")"},{"text":"    // x == 123"},{"text":""},{"text":"    let y = Int(\"-123\", radix: 8)"},{"text":"    // y == -83"},{"text":"    let y = Int(\"+123\", radix: 8)"},{"text":"    // y == +83"},{"text":""},{"text":"    let z = Int(\"07b\", radix: 16)"},{"text":"    // z == 123"},{"text":""},{"text":"If `text` is in an invalid format or contains characters that are out of"},{"text":"bounds for the given `radix`, or if the value it denotes in the given"},{"text":"`radix` is not representable, the result is `nil`. For example, the"},{"text":"following conversions result in `nil`:"},{"text":""},{"text":"    Int(\" 100\")                       // Includes whitespace"},{"text":"    Int(\"21-50\")                      // Invalid format"},{"text":"    Int(\"ff6600\")                     // Characters out of bounds"},{"text":"    Int(\"zzzzzzzzzzzzz\", radix: 36)   // Out of range"},{"text":""},{"text":"- Parameters:"},{"text":"  - text: The ASCII representation of a number in the radix passed as"},{"text":"    `radix`."},{"text":"  - radix: The radix, or base, to use for converting `text` to an integer"},{"text":"    value. `radix` must be in the range `2...36`. The default is 10."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"radix"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":")"}],"title":"init(_:radix:)"},"pathComponents":["Int8","init(_:radix:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"S","rhs":"StringProtocol","rhsPrecise":"s:Sy"}],"parameters":[{"depth":1,"index":0,"name":"S"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is less than or equal to that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"less-than-or-equal-to operator (`<=`), even if the two instances are of"},{"text":"different types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2leoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["Int32","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right."},{"text":""},{"text":"The `>>` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a left shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*. An overshift results in `-1` for a"},{"text":"  negative value of `lhs` or `0` for a nonnegative value."},{"text":"- Using any other value for `rhs` performs a right shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted right by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x >> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x >> 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a left shift"},{"text":"using `abs(rhs)`."},{"text":""},{"text":"    let a = x >> -3"},{"text":"    // a == 240                       // 0b11110000"},{"text":"    let b = x << 3"},{"text":"    // b == 240                       // 0b11110000"},{"text":""},{"text":"Right shift operations on negative values \"fill in\" the high bits with"},{"text":"ones instead of zeros."},{"text":""},{"text":"    let q: Int8 = -30                 // 0b11100010"},{"text":"    let r = q >> 2"},{"text":"    // r == -8                        // 0b11111000"},{"text":""},{"text":"    let s = q >> 11"},{"text":"    // s == -1                        // 0b11111111"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":">>(_:_:)"},"pathComponents":["UInt64",">>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}],"docComment":{"lines":[{"text":"Creates a new value equal to zero."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsExycfc::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}],"title":"init()"},"pathComponents":["Int16","init()"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"windowsCP1250"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE8EncodingV13windowsCP1250ACvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"windowsCP1250"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"title":"windowsCP1250"},"pathComponents":["String","Encoding","windowsCP1250"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the product of the two given values, wrapping the result in case"},{"text":"of any overflow."},{"text":""},{"text":"The overflow multiplication operator (`&*`) discards any bits that"},{"text":"overflow the fixed width of the integer type. In the following example,"},{"text":"the product of `10` and `50` is greater than the maximum representable"},{"text":"`Int8` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    let x: Int8 = 10 &* 5"},{"text":"    // x == 50"},{"text":"    let y: Int8 = 10 &* 50"},{"text":"    // y == -12 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to multiply."},{"text":"  - rhs: The second value to multiply."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&*(_:_:)"},"pathComponents":["UInt16","&*(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withUnsafeBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:SW","spelling":"UnsafeRawBufferPointer"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:SW","spelling":"UnsafeRawBufferPointer"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"}],"name":"body"}],"returns":[{"kind":"typeIdentifier","spelling":"R"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SR10Foundations5UInt8VRszlE15withUnsafeBytesyqd__qd__SWKXEKlF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withUnsafeBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","preciseIdentifier":"s:SW","spelling":"UnsafeRawBufferPointer"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"}],"title":"withUnsafeBytes(_:)"},"pathComponents":["UnsafeBufferPointer","withUnsafeBytes(_:)"],"swiftExtension":{"constraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"parameters":[{"depth":0,"index":0,"name":"Element"},{"depth":1,"index":0,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE10firstRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:SW"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"firstRange(of:in:)"},"pathComponents":["UnsafeRawBufferPointer","firstRange(of:in:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"D"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withUnsafeBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:SW","spelling":"UnsafeRawBufferPointer"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:SW","spelling":"UnsafeRawBufferPointer"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"}],"name":"body"}],"returns":[{"kind":"typeIdentifier","spelling":"R"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s15EmptyCollectionV10Foundations5UInt8VRszlE15withUnsafeBytesyqd__qd__SWKXEKlF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withUnsafeBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","preciseIdentifier":"s:SW","spelling":"UnsafeRawBufferPointer"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"}],"title":"withUnsafeBytes(_:)"},"pathComponents":["EmptyCollection","withUnsafeBytes(_:)"],"swiftExtension":{"constraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"parameters":[{"depth":0,"index":0,"name":"Element"},{"depth":1,"index":0,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is greater than or equal to that of the second argument."},{"text":""},{"text":"This is the default implementation of the greater-than-or-equal-to operator"},{"text":"(`>=`) for any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."},{"text":"- Returns: `true` if `lhs` is greater than or equal to `rhs`; otherwise,"},{"text":"  `false`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE2geoiySbx_xtFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["UInt16",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates a new integer value from the given string."},{"text":""},{"text":"The string passed as `description` may begin with a plus or minus sign"},{"text":"character (`+` or `-`), followed by one or more numeric digits (`0-9`)."},{"text":""},{"text":"    let x = Int(\"123\")"},{"text":"    // x == 123"},{"text":""},{"text":"If `description` is in an invalid format, or if the value it denotes in"},{"text":"base 10 is not representable, the result is `nil`. For example, the"},{"text":"following conversions result in `nil`:"},{"text":""},{"text":"    Int(\" 100\")                       // Includes whitespace"},{"text":"    Int(\"21-50\")                      // Invalid format"},{"text":"    Int(\"ff6600\")                     // Characters out of bounds"},{"text":"    Int(\"10000000000000000000000000\") // Out of range"},{"text":""},{"text":"- Parameter description: The ASCII representation of a number."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsEyxSgSScfc::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["UInt16","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"regions"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s15CollectionOfOneV","spelling":"CollectionOfOne"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s10ArraySliceV","spelling":"ArraySlice"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","spelling":"UInt8"},{"kind":"text","spelling":">> { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s10ArraySliceV10Foundations5UInt8VRszlE7regionss15CollectionOfOneVyAByAEGGvp"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"regions"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s15CollectionOfOneV","spelling":"CollectionOfOne"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s10ArraySliceV","spelling":"ArraySlice"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","spelling":"UInt8"},{"kind":"text","spelling":">>"}],"title":"regions"},"pathComponents":["ArraySlice","regions"],"swiftExtension":{"constraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the difference of the two given values, wrapping the result in"},{"text":"case of any overflow."},{"text":""},{"text":"The overflow subtraction operator (`&-`) discards any bits that overflow"},{"text":"the fixed width of the integer type. In the following example, the"},{"text":"difference of `10` and `21` is less than zero, the minimum representable"},{"text":"`UInt` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    let x: UInt8 = 21 &- 10"},{"text":"    // x == 11"},{"text":"    let y: UInt8 = 10 &- 21"},{"text":"    // y == 245 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A numeric value."},{"text":"  - rhs: The value to subtract from `lhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&-(_:_:)"},"pathComponents":["Int8","&-(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Subtracts the second value from the first and stores the difference in the"},{"text":"left-hand-side variable, wrapping any overflow."},{"text":""},{"text":"The masking subtraction assignment operator (`&-=`) silently wraps any"},{"text":"overflow that occurs during the operation. In the following example, the"},{"text":"difference of `10` and `21` is less than zero, the minimum representable"},{"text":"`UInt` value, so the result is the result is the partial value after"},{"text":"discarding the overflowing bits."},{"text":""},{"text":"    var x: Int8 = 21"},{"text":"    x &-= 10"},{"text":"    // x == 11"},{"text":"    var y: UInt8 = 10"},{"text":"    y &-= 21"},{"text":"    // y == 245 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A numeric value."},{"text":"  - rhs: The value to subtract from `lhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&-=(_:_:)"},"pathComponents":["UInt16","&-=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"deprecated":{"major":4},"domain":"Swift","renamed":"init(truncating:)"}],"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s6UInt32V10FoundationEyAbC8NSNumberCcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["UInt32","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is less than that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"less-than operator (`<`), even if the two instances are of different"},{"text":"types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1loiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<(_:_:)"},"pathComponents":["UInt64","<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"cString"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SP","spelling":"UnsafePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5CChara","spelling":"CChar"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"encoding"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"enc"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Produces a string containing the bytes in a given C array,"},{"text":"interpreted according to a given encoding."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE7cString8encodingSSSgSPys4Int8VG_SSAAE8EncodingVtcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"cString"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SP","spelling":"UnsafePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5CChara","spelling":"CChar"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":")"}],"title":"init(cString:encoding:)"},"pathComponents":["String","init(cString:encoding:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"truncating"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s6UInt16V10FoundationE10truncatingAbC8NSNumberC_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"truncating"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(truncating:)"},"pathComponents":["UInt16","init(truncating:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"encode"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"encoder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP","spelling":"Encoder"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Wrapped"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"EncodingConfiguration"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"encoder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP","spelling":"Encoder"}],"internalName":"encoder","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Wrapped"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"EncodingConfiguration"}],"name":"configuration"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sq10FoundationAA26EncodableWithConfigurationRzlE6encode2to13configurationys7Encoder_p_08EncodingD0QztKF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"encode"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP","spelling":"Encoder"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Wrapped"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"EncodingConfiguration"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"title":"encode(to:configuration:)"},"pathComponents":["Optional","encode(to:configuration:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Wrapped","rhs":"EncodableWithConfiguration","rhsPrecise":"s:10Foundation26EncodableWithConfigurationP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Wrapped","rhs":"EncodableWithConfiguration","rhsPrecise":"s:10Foundation26EncodableWithConfigurationP"}],"parameters":[{"depth":0,"index":0,"name":"Wrapped"}]}},{"accessLevel":"public","availability":[{"deprecated":{"major":4},"domain":"Swift","renamed":"init(truncating:)"}],"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s6UInt16V10FoundationEyAbC8NSNumberCcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["UInt16","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"deprecated":{"major":4,"minor":0},"domain":"Swift","message":"Please use String slicing subscript with a 'partial range upto' operator."}],"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"substring"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"index"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"docComment":{"lines":[{"text":"Returns a new string containing the characters of the"},{"text":"`String` up to, but not including, the one at a given index."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"index"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"}],"internalName":"index","name":"to"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE9substring2toS2S5IndexV_tF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"substring"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"substring(to:)"},"pathComponents":["StringProtocol","substring(to:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"name":"count"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSw_SitF::SYNTHESIZED::s:SR"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:count:)"},"pathComponents":["UnsafeBufferPointer","copyBytes(to:count:)"],"swiftExtension":{"extendedModule":"Foundation"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lengthOfBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"docComment":{"lines":[{"text":"Returns the number of bytes required to store the"},{"text":"`String` in a given encoding."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"internalName":"encoding","name":"using"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE13lengthOfBytes5usingSiSSAAE8EncodingV_tF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lengthOfBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"lengthOfBytes(using:)"},"pathComponents":["StringProtocol","lengthOfBytes(using:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2leoiySbx_xtFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["Int","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a half-open range that contains its lower bound but not its upper"},{"text":"bound."},{"text":""},{"text":"Use the half-open range operator (`..<`) to create a range of any type"},{"text":"that conforms to the `Comparable` protocol. This example creates a"},{"text":"`Range<Double>` from zero up to, but not including, 5.0."},{"text":""},{"text":"    let lessThanFive = 0.0..<5.0"},{"text":"    print(lessThanFive.contains(3.14))  // Prints \"true\""},{"text":"    print(lessThanFive.contains(5.0))   // Prints \"false\""},{"text":""},{"text":"- Parameters:"},{"text":"  - minimum: The lower bound for the range."},{"text":"  - maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `minimum <= maximum`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"},{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"..<(_:_:)"},"pathComponents":["Int8","..<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is greater than or equal to that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"greater-than-or-equal-to operator (`>=`), even if the two instances are"},{"text":"of different types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2geoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["UInt",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"decode"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"C"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"forKey"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"key"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV","spelling":"KeyedDecodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":".Type) "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation26DecodableWithConfigurationP","spelling":"DecodableWithConfiguration"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation30DecodingConfigurationProvidingP","spelling":"DecodingConfigurationProviding"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"_"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":".Type"}],"name":""},{"declarationFragments":[{"kind":"identifier","spelling":"key"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV","spelling":"KeyedDecodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"}],"internalName":"key","name":"forKey"},{"declarationFragments":[{"kind":"identifier","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":".Type"}],"name":"configuration"}],"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s22KeyedDecodingContainerV10FoundationE6decode_6forKey13configurationqd__qd__m_xqd_0_mtKAC26DecodableWithConfigurationRd__AC0bK9ProvidingRd_0_0bK0Qyd_0_AIRtd__r0_lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"decode"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"C"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"forKey"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV","spelling":"KeyedDecodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":".Type) "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}],"title":"decode(_:forKey:configuration:)"},"pathComponents":["KeyedDecodingContainer","decode(_:forKey:configuration:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"K","rhs":"CodingKey","rhsPrecise":"s:s9CodingKeyP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"K","rhs":"CodingKey","rhsPrecise":"s:s9CodingKeyP"},{"kind":"conformance","lhs":"T","rhs":"DecodableWithConfiguration","rhsPrecise":"s:10Foundation26DecodableWithConfigurationP"},{"kind":"conformance","lhs":"C","rhs":"DecodingConfigurationProviding","rhsPrecise":"s:10Foundation30DecodingConfigurationProvidingP"},{"kind":"sameType","lhs":"T.DecodingConfiguration","rhs":"C.DecodingConfiguration"}],"parameters":[{"depth":0,"index":0,"name":"K"},{"depth":1,"index":0,"name":"T"},{"depth":1,"index":1,"name":"C"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is less than or equal to that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"less-than-or-equal-to operator (`<=`), even if the two instances are of"},{"text":"different types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2leoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["UInt32","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"integerLiteral"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc::SYNTHESIZED::s:Si"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"integerLiteral"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(integerLiteral:)"},"pathComponents":["Int","init(integerLiteral:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"_ExpressibleByBuiltinIntegerLiteral","rhsPrecise":"s:s35_ExpressibleByBuiltinIntegerLiteralP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"_ExpressibleByBuiltinIntegerLiteral","rhsPrecise":"s:s35_ExpressibleByBuiltinIntegerLiteralP"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the product of the two given values, wrapping the result in case"},{"text":"of any overflow."},{"text":""},{"text":"The overflow multiplication operator (`&*`) discards any bits that"},{"text":"overflow the fixed width of the integer type. In the following example,"},{"text":"the product of `10` and `50` is greater than the maximum representable"},{"text":"`Int8` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    let x: Int8 = 10 &* 5"},{"text":"    // x == 50"},{"text":"    let y: Int8 = 10 &* 50"},{"text":"    // y == -12 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to multiply."},{"text":"  - rhs: The second value to multiply."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&*(_:_:)"},"pathComponents":["Int16","&*(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}],"docComment":{"lines":[{"text":"Creates a new value equal to zero."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsExycfc::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}],"title":"init()"},"pathComponents":["UInt16","init()"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is less than that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"less-than operator (`<`), even if the two instances are of different"},{"text":"types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1loiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<(_:_:)"},"pathComponents":["Int32","<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s6UInt16V10FoundationE7exactlyABSgAC8NSNumberC_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["UInt16","init(exactly:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is greater than that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"greater-than operator (`>`), even if the two instances are of different"},{"text":"types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1goiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["Int64",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","availability":[{"deprecated":{"major":4},"domain":"Swift","renamed":"init(truncating:)"}],"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s6UInt64V10FoundationEyAbC8NSNumberCcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["UInt64","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is greater than or equal to that of the second argument."},{"text":""},{"text":"This is the default implementation of the greater-than-or-equal-to operator"},{"text":"(`>=`) for any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."},{"text":"- Returns: `true` if `lhs` is greater than or equal to `rhs`; otherwise,"},{"text":"  `false`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE2geoiySbx_xtFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["Int16",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"truncating"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s6UInt32V10FoundationE10truncatingAbC8NSNumberC_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"truncating"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(truncating:)"},"pathComponents":["UInt32","init(truncating:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","spelling":"Data"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Returns a `String` initialized by converting given `data` into"},{"text":"Unicode characters using a given `encoding`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE4data8encodingSSSgAA4DataVh_SSAAE8EncodingVtcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","spelling":"Data"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":")"}],"title":"init(data:encoding:)"},"pathComponents":["String","init(data:encoding:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates a new integer value from the given string."},{"text":""},{"text":"The string passed as `description` may begin with a plus or minus sign"},{"text":"character (`+` or `-`), followed by one or more numeric digits (`0-9`)."},{"text":""},{"text":"    let x = Int(\"123\")"},{"text":"    // x == 123"},{"text":""},{"text":"If `description` is in an invalid format, or if the value it denotes in"},{"text":"base 10 is not representable, the result is `nil`. For example, the"},{"text":"following conversions result in `nil`:"},{"text":""},{"text":"    Int(\" 100\")                       // Includes whitespace"},{"text":"    Int(\"21-50\")                      // Invalid format"},{"text":"    Int(\"ff6600\")                     // Characters out of bounds"},{"text":"    Int(\"10000000000000000000000000\") // Out of range"},{"text":""},{"text":"- Parameter description: The ASCII representation of a number."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsEyxSgSScfc::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Int16","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is less than or equal to that of the second argument."},{"text":""},{"text":"This is the default implementation of the less-than-or-equal-to"},{"text":"operator (`<=`) for any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE2leoiySbx_xtFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["UInt16","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right."},{"text":""},{"text":"The `>>` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a left shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*. An overshift results in `-1` for a"},{"text":"  negative value of `lhs` or `0` for a nonnegative value."},{"text":"- Using any other value for `rhs` performs a right shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted right by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x >> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x >> 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a left shift"},{"text":"using `abs(rhs)`."},{"text":""},{"text":"    let a = x >> -3"},{"text":"    // a == 240                       // 0b11110000"},{"text":"    let b = x << 3"},{"text":"    // b == 240                       // 0b11110000"},{"text":""},{"text":"Right shift operations on negative values \"fill in\" the high bits with"},{"text":"ones instead of zeros."},{"text":""},{"text":"    let q: Int8 = -30                 // 0b11100010"},{"text":"    let r = q >> 2"},{"text":"    // r == -8                        // 0b11111000"},{"text":""},{"text":"    let s = q >> 11"},{"text":"    // s == -1                        // 0b11111111"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":">>(_:_:)"},"pathComponents":["UInt32",">>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9lastRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:SW"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"lastRange(of:in:)"},"pathComponents":["UnsafeRawBufferPointer","lastRange(of:in:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"D"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSryqd__G_tlF::SYNTHESIZED::s:SR"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:)"},"pathComponents":["UnsafeBufferPointer","copyBytes(to:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"DestinationType"}]}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"attrStrSlice"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5SliceV","spelling":"Slice"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation16AttributedStringV","spelling":"AttributedString"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation16AttributedStringV13CharacterViewV","spelling":"CharacterView"},{"kind":"text","spelling":">)"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationEySSs5SliceVyAA16AttributedStringV13CharacterViewVGcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5SliceV","spelling":"Slice"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation16AttributedStringV","spelling":"AttributedString"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation16AttributedStringV13CharacterViewV","spelling":"CharacterView"},{"kind":"text","spelling":">)"}],"title":"init(_:)"},"pathComponents":["String","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"name":"count"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSryqd__G_SitlF::SYNTHESIZED::s:s8RepeatedV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:count:)"},"pathComponents":["Repeated","copyBytes(to:count:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"DestinationType"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Adds two values and stores the result in the left-hand-side variable,"},{"text":"wrapping any overflow."},{"text":""},{"text":"The masking addition assignment operator (`&+=`) silently wraps any"},{"text":"overflow that occurs during the operation. In the following example, the"},{"text":"sum of `100` and `121` is greater than the maximum representable `Int8`"},{"text":"value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    var x: Int8 = 10"},{"text":"    x &+= 21"},{"text":"    // x == 31"},{"text":"    var y: Int8 = 100"},{"text":"    y &+= 121"},{"text":"    // y == -35 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to add."},{"text":"  - rhs: The second value to add."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&+=(_:_:)"},"pathComponents":["Int8","&+=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3ggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":">>=(_:_:)"},"pathComponents":["Int64",">>=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2geoiySbx_xtFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["Int",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking right shift operator (`&>>`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking right shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &>> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &>> 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&>>(_:_:)"},"pathComponents":["UInt","&>>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withUnsafeBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:SW","spelling":"UnsafeRawBufferPointer"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:SW","spelling":"UnsafeRawBufferPointer"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"}],"name":"body"}],"returns":[{"kind":"typeIdentifier","spelling":"R"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sr10Foundations5UInt8VRszlE15withUnsafeBytesyqd__qd__SWKXEKlF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withUnsafeBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","preciseIdentifier":"s:SW","spelling":"UnsafeRawBufferPointer"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"}],"title":"withUnsafeBytes(_:)"},"pathComponents":["UnsafeMutableBufferPointer","withUnsafeBytes(_:)"],"swiftExtension":{"constraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"parameters":[{"depth":0,"index":0,"name":"Element"},{"depth":1,"index":0,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"truncating"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s6UInt64V10FoundationE10truncatingAbC8NSNumberC_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"truncating"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(truncating:)"},"pathComponents":["UInt64","init(truncating:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedCaseInsensitiveCompare"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"aString"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation16ComparisonResultO","spelling":"ComparisonResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"docComment":{"lines":[{"text":"Compares the string and the given string using a case-insensitive,"},{"text":"localized, comparison."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"aString"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"aString"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation16ComparisonResultO","spelling":"ComparisonResult"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE31localizedCaseInsensitiveCompareyAA16ComparisonResultOqd__SyRd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedCaseInsensitiveCompare"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation16ComparisonResultO","spelling":"ComparisonResult"}],"title":"localizedCaseInsensitiveCompare(_:)"},"pathComponents":["StringProtocol","localizedCaseInsensitiveCompare(_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withUnsafeBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:SW","spelling":"UnsafeRawBufferPointer"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:SW","spelling":"UnsafeRawBufferPointer"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"}],"name":"body"}],"returns":[{"kind":"typeIdentifier","spelling":"R"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SW10FoundationE15withUnsafeBytesyxxSWKXEKlF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withUnsafeBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","preciseIdentifier":"s:SW","spelling":"UnsafeRawBufferPointer"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"}],"title":"withUnsafeBytes(_:)"},"pathComponents":["UnsafeRawBufferPointer","withUnsafeBytes(_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":0,"index":0,"name":"R"}]}},{"accessLevel":"public","availability":[{"deprecated":{"major":4,"minor":0},"domain":"Swift","message":"Please use String slicing subscript."}],"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"substring"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"aRange"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"docComment":{"lines":[{"text":"Returns a string object containing the characters of the"},{"text":"`String` that lie within a given range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"aRange"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">"}],"internalName":"aRange","name":"with"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE9substring4withSSSnySS5IndexVG_tF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"substring"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"substring(with:)"},"pathComponents":["StringProtocol","substring(with:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"windowsCP1254"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE8EncodingV13windowsCP1254ACvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"windowsCP1254"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"title":"windowsCP1254"},"pathComponents":["String","Encoding","windowsCP1254"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2leoiySbx_xtFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["UInt","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is greater than or equal to that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"greater-than-or-equal-to operator (`>=`), even if the two instances are"},{"text":"of different types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2geoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["Int",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"integerLiteral"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc::SYNTHESIZED::s:Su"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"integerLiteral"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(integerLiteral:)"},"pathComponents":["UInt","init(integerLiteral:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"_ExpressibleByBuiltinIntegerLiteral","rhsPrecise":"s:s35_ExpressibleByBuiltinIntegerLiteralP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"_ExpressibleByBuiltinIntegerLiteral","rhsPrecise":"s:s35_ExpressibleByBuiltinIntegerLiteralP"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"completePath"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"outputName"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":">? = nil, "},{"kind":"externalParam","spelling":"caseSensitive"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"matchesInto"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"outputArray"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"]>? = nil, "},{"kind":"externalParam","spelling":"filterTypes"},{"kind":"text","spelling":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"]? = nil) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"docComment":{"lines":[{"text":"Interprets the string as a path in the file system and"},{"text":"attempts to perform filename completion, returning a numeric"},{"text":"value that indicates whether a match was possible, and by"},{"text":"reference the longest path that matches the string."},{"text":""},{"text":"- Returns: The actual number of matching paths."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"outputName"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":">?"}],"internalName":"outputName","name":"into"},{"declarationFragments":[{"kind":"identifier","spelling":"caseSensitive"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"name":"caseSensitive"},{"declarationFragments":[{"kind":"identifier","spelling":"outputArray"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"]>?"}],"internalName":"outputArray","name":"matchesInto"},{"declarationFragments":[{"kind":"identifier","spelling":"filterTypes"},{"kind":"text","spelling":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"]?"}],"name":"filterTypes"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE12completePath4into13caseSensitive11matchesInto11filterTypesSiSpySSGSg_SbSpySaySSGGSgAISgtF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"completePath"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":">?, "},{"kind":"externalParam","spelling":"caseSensitive"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"matchesInto"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"]>?, "},{"kind":"externalParam","spelling":"filterTypes"},{"kind":"text","spelling":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"]?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"completePath(into:caseSensitive:matchesInto:filterTypes:)"},"pathComponents":["StringProtocol","completePath(into:caseSensitive:matchesInto:filterTypes:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range up to, and including, its upper bound."},{"text":""},{"text":"Use the prefix closed range operator (prefix `...`) to create a partial"},{"text":"range of any type that conforms to the `Comparable` protocol. This"},{"text":"example creates a `PartialRangeThrough<Double>` instance that includes"},{"text":"any value less than or equal to `5.0`."},{"text":""},{"text":"    let throughFive = ...5.0"},{"text":""},{"text":"    throughFive.contains(4.0)     // true"},{"text":"    throughFive.contains(5.0)     // true"},{"text":"    throughFive.contains(6.0)     // false"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the start of the collection up to, and"},{"text":"including, the partial range's upper bound."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[...3])"},{"text":"    // Prints \"[10, 20, 30, 40]\""},{"text":""},{"text":"- Parameter maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `maximum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:)"},"pathComponents":["Int16","...(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"},{"declarationFragments":[{"kind":"identifier","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"y"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SxsE2eeoiySbx_xtFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"==(_:_:)"},"pathComponents":["Int16","==(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"magnitude"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The magnitude of this value."},{"text":""},{"text":"Every unsigned integer is its own magnitude, so for any value `x`,"},{"text":"`x == x.magnitude`."},{"text":""},{"text":"The global `abs(_:)` function provides more familiar syntax when you need"},{"text":"to find an absolute value. In addition, because `abs(_:)` always returns"},{"text":"a value of the same type, even in a generic context, using the function"},{"text":"instead of the `magnitude` property is encouraged."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUsE9magnitudexvp::SYNTHESIZED::s:Su"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"magnitude"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"magnitude"},"pathComponents":["UInt","magnitude"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SG","spelling":"RandomNumberGenerator"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range, using the given"},{"text":"generator as a source for randomness."},{"text":""},{"text":"Use this method to generate an integer within a specific range when you"},{"text":"are using a custom random number generator. This example creates three"},{"text":"new values in the range `1..<100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1..<100, using: &myGenerator))"},{"text":"    }"},{"text":"    // Prints \"7\""},{"text":"    // Prints \"44\""},{"text":"    // Prints \"21\""},{"text":""},{"text":"- Note: The algorithm used to create random values may change in a future"},{"text":"  version of Swift. If you're passing a generator that results in the"},{"text":"  same sequence of integer values each time you run your program, that"},{"text":"  sequence may change when your program is compiled using a different"},{"text":"  version of Swift."},{"text":""},{"text":"- Parameters:"},{"text":"  - range: The range in which to create a random value."},{"text":"    `range` must not be empty."},{"text":"  - generator: The random number generator to use when creating the"},{"text":"    new random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"},{"declarationFragments":[{"kind":"identifier","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"generator","name":"using"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:using:)"},"pathComponents":["UInt16","random(in:using:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"RandomNumberGenerator","rhsPrecise":"s:SG"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Adds two values and stores the result in the left-hand-side variable,"},{"text":"wrapping any overflow."},{"text":""},{"text":"The masking addition assignment operator (`&+=`) silently wraps any"},{"text":"overflow that occurs during the operation. In the following example, the"},{"text":"sum of `100` and `121` is greater than the maximum representable `Int8`"},{"text":"value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    var x: Int8 = 10"},{"text":"    x &+= 21"},{"text":"    // x == 31"},{"text":"    var y: Int8 = 100"},{"text":"    y &+= 121"},{"text":"    // y == -35 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to add."},{"text":"  - rhs: The second value to add."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&+=(_:_:)"},"pathComponents":["UInt8","&+=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"advanced"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"n"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a value that is offset the specified distance from this value."},{"text":""},{"text":"Use the `advanced(by:)` method in generic code to offset a value by a"},{"text":"specified distance. If you're working directly with numeric values, use"},{"text":"the addition operator (`+`) instead of this method."},{"text":""},{"text":"For a value `x`, a distance `n`, and a value `y = x.advanced(by: n)`,"},{"text":"`x.distance(to: y) == n`."},{"text":""},{"text":"- Parameter n: The distance to advance this value."},{"text":"- Returns: A value that is offset from this value by `n`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"n"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"internalName":"n","name":"by"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE8advanced2byxSi_tF::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"advanced"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"advanced(by:)"},"pathComponents":["UInt32","advanced(by:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SG","spelling":"RandomNumberGenerator"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range, using the given"},{"text":"generator as a source for randomness."},{"text":""},{"text":"Use this method to generate an integer within a specific range when you"},{"text":"are using a custom random number generator. This example creates three"},{"text":"new values in the range `1...100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1...100, using: &myGenerator))"},{"text":"    }"},{"text":"    // Prints \"7\""},{"text":"    // Prints \"44\""},{"text":"    // Prints \"21\""},{"text":""},{"text":"- Parameters:"},{"text":"  - range: The range in which to create a random value."},{"text":"  - generator: The random number generator to use when creating the"},{"text":"    new random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"},{"declarationFragments":[{"kind":"identifier","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"generator","name":"using"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:using:)"},"pathComponents":["Int16","random(in:using:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"RandomNumberGenerator","rhsPrecise":"s:SG"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range extending upward from a lower bound."},{"text":""},{"text":"Use the postfix range operator (postfix `...`) to create a partial range"},{"text":"of any type that conforms to the `Comparable` protocol. This example"},{"text":"creates a `PartialRangeFrom<Double>` instance that includes any value"},{"text":"greater than or equal to `5.0`."},{"text":""},{"text":"    let atLeastFive = 5.0..."},{"text":""},{"text":"    atLeastFive.contains(4.0)     // false"},{"text":"    atLeastFive.contains(5.0)     // true"},{"text":"    atLeastFive.contains(6.0)     // true"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the partial range's lower bound up to the end"},{"text":"of the collection."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[3...])"},{"text":"    // Prints \"[40, 50, 60, 70]\""},{"text":""},{"text":"- Parameter minimum: The lower bound for the range."},{"text":""},{"text":"- Precondition: `minimum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:)"},"pathComponents":["UInt16","...(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"aString"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"options"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"mask"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE14CompareOptionsa","spelling":"CompareOptions"},{"kind":"text","spelling":" = [], "},{"kind":"externalParam","spelling":"range"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"searchRange"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? = nil, "},{"kind":"externalParam","spelling":"locale"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV","spelling":"Locale"},{"kind":"text","spelling":"? = nil) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"docComment":{"lines":[{"text":"Finds and returns the range of the first occurrence of a"},{"text":"given string within a given range of the `String`, subject to"},{"text":"given options, using the specified locale, if any."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"aString"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"aString","name":"of"},{"declarationFragments":[{"kind":"identifier","spelling":"mask"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE14CompareOptionsa","spelling":"CompareOptions"}],"internalName":"mask","name":"options"},{"declarationFragments":[{"kind":"identifier","spelling":"searchRange"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"internalName":"searchRange","name":"range"},{"declarationFragments":[{"kind":"identifier","spelling":"locale"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV","spelling":"Locale"},{"kind":"text","spelling":"?"}],"name":"locale"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE5range2of7optionsAB6localeSnySS5IndexVGSgqd___AA8NSStringC14CompareOptionsVAiA6LocaleVSgtSyRd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"options"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE14CompareOptionsa","spelling":"CompareOptions"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?, "},{"kind":"externalParam","spelling":"locale"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV","spelling":"Locale"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"range(of:options:range:locale:)"},"pathComponents":["StringProtocol","range(of:options:range:locale:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"from"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexRtzr0_lF::SYNTHESIZED::s:SW"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:from:)"},"pathComponents":["UnsafeRawBufferPointer","copyBytes(to:from:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"DestinationType"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2geoiySbx_xtFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["UInt",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isSigned"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A Boolean value indicating whether this type is a signed integer type."},{"text":""},{"text":"This property is always `true` for signed integer types."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZsE8isSignedSbvpZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isSigned"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"isSigned"},"pathComponents":["Int32","isSigned"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2neoiySbx_xtFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"!=(_:_:)"},"pathComponents":["Int64","!=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"distance"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"docComment":{"lines":[{"text":"Returns the distance from this value to the given value, expressed as a"},{"text":"stride."},{"text":""},{"text":"For two values `x` and `y`, and a distance `n = x.distance(to: y)`,"},{"text":"`x.advanced(by: n) == y`."},{"text":""},{"text":"- Parameter other: The value to calculate the distance to."},{"text":"- Returns: The distance from this value to `other`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"other","name":"to"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE8distance2toSix_tF::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"distance"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"distance(to:)"},"pathComponents":["UInt32","distance(to:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking right shift operator (`&>>`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking right shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &>> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &>> 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&>>(_:_:)"},"pathComponents":["Int","&>>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"encodeIfPresent"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"t"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"forKey"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"key"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedEncodingContainerV","spelling":"KeyedEncodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"EncodingConfiguration"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation26EncodableWithConfigurationP","spelling":"EncodableWithConfiguration"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"t"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"?"}],"name":"t"},{"declarationFragments":[{"kind":"identifier","spelling":"key"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedEncodingContainerV","spelling":"KeyedEncodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"}],"internalName":"key","name":"forKey"},{"declarationFragments":[{"kind":"identifier","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"EncodingConfiguration"}],"name":"configuration"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s22KeyedEncodingContainerV10FoundationE15encodeIfPresent_6forKey13configurationyqd__Sg_x0B13ConfigurationQyd__tKAC013EncodableWithK0Rd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"encodeIfPresent"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"forKey"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedEncodingContainerV","spelling":"KeyedEncodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"EncodingConfiguration"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"title":"encodeIfPresent(_:forKey:configuration:)"},"pathComponents":["KeyedEncodingContainer","encodeIfPresent(_:forKey:configuration:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"K","rhs":"CodingKey","rhsPrecise":"s:s9CodingKeyP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"K","rhs":"CodingKey","rhsPrecise":"s:s9CodingKeyP"},{"kind":"conformance","lhs":"T","rhs":"EncodableWithConfiguration","rhsPrecise":"s:10Foundation26EncodableWithConfigurationP"}],"parameters":[{"depth":0,"index":0,"name":"K"},{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the difference of the two given values, wrapping the result in"},{"text":"case of any overflow."},{"text":""},{"text":"The overflow subtraction operator (`&-`) discards any bits that overflow"},{"text":"the fixed width of the integer type. In the following example, the"},{"text":"difference of `10` and `21` is less than zero, the minimum representable"},{"text":"`UInt` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    let x: UInt8 = 21 &- 10"},{"text":"    // x == 11"},{"text":"    let y: UInt8 = 10 &- 21"},{"text":"    // y == 245 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A numeric value."},{"text":"  - rhs: The value to subtract from `lhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&-(_:_:)"},"pathComponents":["UInt8","&-(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"cocoaString"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSStringC","spelling":"NSString"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationEySSAA8NSStringCcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSStringC","spelling":"NSString"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["String","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range."},{"text":""},{"text":"Use this method to generate an integer within a specific range. This"},{"text":"example creates three new values in the range `1..<100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1..<100))"},{"text":"    }"},{"text":"    // Prints \"53\""},{"text":"    // Prints \"64\""},{"text":"    // Prints \"5\""},{"text":""},{"text":"This method is equivalent to calling the version that takes a generator,"},{"text":"passing in the system's default random generator."},{"text":""},{"text":"- Parameter range: The range in which to create a random value."},{"text":"  `range` must not be empty."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:)"},"pathComponents":["Int16","random(in:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a half-open range that contains its lower bound but not its upper"},{"text":"bound."},{"text":""},{"text":"Use the half-open range operator (`..<`) to create a range of any type"},{"text":"that conforms to the `Comparable` protocol. This example creates a"},{"text":"`Range<Double>` from zero up to, but not including, 5.0."},{"text":""},{"text":"    let lessThanFive = 0.0..<5.0"},{"text":"    print(lessThanFive.contains(3.14))  // Prints \"true\""},{"text":"    print(lessThanFive.contains(5.0))   // Prints \"false\""},{"text":""},{"text":"- Parameters:"},{"text":"  - minimum: The lower bound for the range."},{"text":"  - maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `minimum <= maximum`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"},{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"..<(_:_:)"},"pathComponents":["UInt8","..<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"clamping"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance with the representable value that's closest to the"},{"text":"given integer."},{"text":""},{"text":"If the value passed as `source` is greater than the maximum representable"},{"text":"value in this type, the result is the type's `max` value. If `source` is"},{"text":"less than the smallest representable value in this type, the result is"},{"text":"the type's `min` value."},{"text":""},{"text":"In this example, `x` is initialized as an `Int8` instance by clamping"},{"text":"`500` to the range `-128...127`, and `y` is initialized as a `UInt`"},{"text":"instance by clamping `-500` to the range `0...UInt.max`."},{"text":""},{"text":"    let x = Int8(clamping: 500)"},{"text":"    // x == 127"},{"text":"    // x == Int8.max"},{"text":""},{"text":"    let y = UInt(clamping: -500)"},{"text":"    // y == 0"},{"text":""},{"text":"- Parameter source: An integer to convert to this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"clamping"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"init(clamping:)"},"pathComponents":["Int16","init(clamping:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1goiySbx_xtFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["UInt32",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SG","spelling":"RandomNumberGenerator"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range, using the given"},{"text":"generator as a source for randomness."},{"text":""},{"text":"Use this method to generate an integer within a specific range when you"},{"text":"are using a custom random number generator. This example creates three"},{"text":"new values in the range `1..<100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1..<100, using: &myGenerator))"},{"text":"    }"},{"text":"    // Prints \"7\""},{"text":"    // Prints \"44\""},{"text":"    // Prints \"21\""},{"text":""},{"text":"- Note: The algorithm used to create random values may change in a future"},{"text":"  version of Swift. If you're passing a generator that results in the"},{"text":"  same sequence of integer values each time you run your program, that"},{"text":"  sequence may change when your program is compiled using a different"},{"text":"  version of Swift."},{"text":""},{"text":"- Parameters:"},{"text":"  - range: The range in which to create a random value."},{"text":"    `range` must not be empty."},{"text":"  - generator: The random number generator to use when creating the"},{"text":"    new random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"},{"declarationFragments":[{"kind":"identifier","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"generator","name":"using"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:using:)"},"pathComponents":["Int16","random(in:using:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"RandomNumberGenerator","rhsPrecise":"s:SG"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"text"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"radix"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" = 10) "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"docComment":{"lines":[{"text":"Creates a new integer value from the given string and radix."},{"text":""},{"text":"The string passed as `text` may begin with a plus or minus sign character"},{"text":"(`+` or `-`), followed by one or more numeric digits (`0-9`) or letters"},{"text":"(`a-z` or `A-Z`). Parsing of the string is case insensitive."},{"text":""},{"text":"    let x = Int(\"123\")"},{"text":"    // x == 123"},{"text":""},{"text":"    let y = Int(\"-123\", radix: 8)"},{"text":"    // y == -83"},{"text":"    let y = Int(\"+123\", radix: 8)"},{"text":"    // y == +83"},{"text":""},{"text":"    let z = Int(\"07b\", radix: 16)"},{"text":"    // z == 123"},{"text":""},{"text":"If `text` is in an invalid format or contains characters that are out of"},{"text":"bounds for the given `radix`, or if the value it denotes in the given"},{"text":"`radix` is not representable, the result is `nil`. For example, the"},{"text":"following conversions result in `nil`:"},{"text":""},{"text":"    Int(\" 100\")                       // Includes whitespace"},{"text":"    Int(\"21-50\")                      // Invalid format"},{"text":"    Int(\"ff6600\")                     // Characters out of bounds"},{"text":"    Int(\"zzzzzzzzzzzzz\", radix: 36)   // Out of range"},{"text":""},{"text":"- Parameters:"},{"text":"  - text: The ASCII representation of a number in the radix passed as"},{"text":"    `radix`."},{"text":"  - radix: The radix, or base, to use for converting `text` to an integer"},{"text":"    value. `radix` must be in the range `2...36`. The default is 10."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"radix"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":")"}],"title":"init(_:radix:)"},"pathComponents":["UInt8","init(_:radix:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"S","rhs":"StringProtocol","rhsPrecise":"s:Sy"}],"parameters":[{"depth":1,"index":0,"name":"S"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range extending upward from a lower bound."},{"text":""},{"text":"Use the postfix range operator (postfix `...`) to create a partial range"},{"text":"of any type that conforms to the `Comparable` protocol. This example"},{"text":"creates a `PartialRangeFrom<Double>` instance that includes any value"},{"text":"greater than or equal to `5.0`."},{"text":""},{"text":"    let atLeastFive = 5.0..."},{"text":""},{"text":"    atLeastFive.contains(4.0)     // false"},{"text":"    atLeastFive.contains(5.0)     // true"},{"text":"    atLeastFive.contains(6.0)     // true"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the partial range's lower bound up to the end"},{"text":"of the collection."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[3...])"},{"text":"    // Prints \"[40, 50, 60, 70]\""},{"text":""},{"text":"- Parameter minimum: The lower bound for the range."},{"text":""},{"text":"- Precondition: `minimum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:)"},"pathComponents":["Int16","...(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range up to, and including, its upper bound."},{"text":""},{"text":"Use the prefix closed range operator (prefix `...`) to create a partial"},{"text":"range of any type that conforms to the `Comparable` protocol. This"},{"text":"example creates a `PartialRangeThrough<Double>` instance that includes"},{"text":"any value less than or equal to `5.0`."},{"text":""},{"text":"    let throughFive = ...5.0"},{"text":""},{"text":"    throughFive.contains(4.0)     // true"},{"text":"    throughFive.contains(5.0)     // true"},{"text":"    throughFive.contains(6.0)     // false"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the start of the collection up to, and"},{"text":"including, the partial range's upper bound."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[...3])"},{"text":"    // Prints \"[10, 20, 30, 40]\""},{"text":""},{"text":"- Parameter maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `maximum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:)"},"pathComponents":["UInt16","...(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range."},{"text":""},{"text":"Use this method to generate an integer within a specific range. This"},{"text":"example creates three new values in the range `1...100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1...100))"},{"text":"    }"},{"text":"    // Prints \"53\""},{"text":"    // Prints \"64\""},{"text":"    // Prints \"5\""},{"text":""},{"text":"This method is equivalent to calling `random(in:using:)`, passing in the"},{"text":"system's default random generator."},{"text":""},{"text":"- Parameter range: The range in which to create a random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:)"},"pathComponents":["Int8","random(in:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"advanced"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"n"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a value that is offset the specified distance from this value."},{"text":""},{"text":"Use the `advanced(by:)` method in generic code to offset a value by a"},{"text":"specified distance. If you're working directly with numeric values, use"},{"text":"the addition operator (`+`) instead of this method."},{"text":""},{"text":"For a value `x`, a distance `n`, and a value `y = x.advanced(by: n)`,"},{"text":"`x.distance(to: y) == n`."},{"text":""},{"text":"- Parameter n: The distance to advance this value."},{"text":"- Returns: A value that is offset from this value by `n`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"n"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"internalName":"n","name":"by"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE8advanced2byxSi_tF::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"advanced"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"advanced(by:)"},"pathComponents":["UInt64","advanced(by:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"},{"declarationFragments":[{"kind":"identifier","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"y"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SxsE2eeoiySbx_xtFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"==(_:_:)"},"pathComponents":["UInt16","==(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is greater than that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"greater-than operator (`>`), even if the two instances are of different"},{"text":"types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1goiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["Int",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"rangeOfComposedCharacterSequences"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"for"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS5IndexV","spelling":"Index"}],"docComment":{"lines":[{"text":"Returns the range in the string of the composed character"},{"text":"sequences for a given range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"for"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE33rangeOfComposedCharacterSequences3forSnySS5IndexVGqd___tSXRd__AE5BoundRtd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"rangeOfComposedCharacterSequences"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"for"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">"}],"title":"rangeOfComposedCharacterSequences(for:)"},"pathComponents":["StringProtocol","rangeOfComposedCharacterSequences(for:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"R.Bound","rhs":"String.Index","rhsPrecise":"s:SS5IndexV"}],"parameters":[{"depth":1,"index":0,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"components"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"separatedBy"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"separator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12CharacterSetV","spelling":"CharacterSet"},{"kind":"text","spelling":") -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"]"}],"docComment":{"lines":[{"text":"Returns an array containing substrings from the string"},{"text":"that have been divided by characters in the given set."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"separator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12CharacterSetV","spelling":"CharacterSet"}],"internalName":"separator","name":"separatedBy"}],"returns":[{"kind":"text","spelling":"["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"]"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE10components11separatedBySaySSGAA12CharacterSetV_tF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"components"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"separatedBy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12CharacterSetV","spelling":"CharacterSet"},{"kind":"text","spelling":") -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"]"}],"title":"components(separatedBy:)"},"pathComponents":["StringProtocol","components(separatedBy:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a closed range that contains both of its bounds."},{"text":""},{"text":"Use the closed range operator (`...`) to create a closed range of any type"},{"text":"that conforms to the `Comparable` protocol. This example creates a"},{"text":"`ClosedRange<Character>` from \"a\" up to, and including, \"z\"."},{"text":""},{"text":"    let lowercase = \"a\"...\"z\""},{"text":"    print(lowercase.contains(\"z\"))"},{"text":"    // Prints \"true\""},{"text":""},{"text":"- Parameters:"},{"text":"  - minimum: The lower bound for the range."},{"text":"  - maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `minimum <= maximum`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"},{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:_:)"},"pathComponents":["UInt8","...(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1goiySbx_xtFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["Int32",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SG","spelling":"RandomNumberGenerator"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range, using the given"},{"text":"generator as a source for randomness."},{"text":""},{"text":"Use this method to generate an integer within a specific range when you"},{"text":"are using a custom random number generator. This example creates three"},{"text":"new values in the range `1...100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1...100, using: &myGenerator))"},{"text":"    }"},{"text":"    // Prints \"7\""},{"text":"    // Prints \"44\""},{"text":"    // Prints \"21\""},{"text":""},{"text":"- Parameters:"},{"text":"  - range: The range in which to create a random value."},{"text":"  - generator: The random number generator to use when creating the"},{"text":"    new random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"},{"declarationFragments":[{"kind":"identifier","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"generator","name":"using"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:using:)"},"pathComponents":["UInt16","random(in:using:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"RandomNumberGenerator","rhsPrecise":"s:SG"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2geoiySbx_xtFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["Int64",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2neoiySbx_xtFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"!=(_:_:)"},"pathComponents":["UInt","!=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the given integer."},{"text":""},{"text":"Use this initializer to convert from another integer type when you know"},{"text":"the value is within the bounds of this type. Passing a value that can't"},{"text":"be represented in this type results in a runtime error."},{"text":""},{"text":"In the following example, the constant `y` is successfully created from"},{"text":"`x`, an `Int` instance with a value of `100`. Because the `Int8` type"},{"text":"can represent `127` at maximum, the attempt to create `z` with a value"},{"text":"of `1000` results in a runtime error."},{"text":""},{"text":"    let x = 100"},{"text":"    let y = Int8(x)"},{"text":"    // y == 100"},{"text":"    let z = Int8(x * 10)"},{"text":"    // Error: Not enough bits to represent the given value"},{"text":""},{"text":"- Parameter source: A value to convert to this type of integer. The value"},{"text":"  passed as `source` must be representable in this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["UInt8","init(_:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"},{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"distance"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"docComment":{"lines":[{"text":"Returns the distance from this value to the given value, expressed as a"},{"text":"stride."},{"text":""},{"text":"For two values `x` and `y`, and a distance `n = x.distance(to: y)`,"},{"text":"`x.advanced(by: n) == y`."},{"text":""},{"text":"- Parameter other: The value to calculate the distance to."},{"text":"- Returns: The distance from this value to `other`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"other","name":"to"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE8distance2toSix_tF::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"distance"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"distance(to:)"},"pathComponents":["Int32","distance(to:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"format"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"locale"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV","spelling":"Locale"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"args"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7CVarArgP","spelling":"CVarArg"},{"kind":"text","spelling":"...)"}],"docComment":{"lines":[{"text":"Returns a `String` object initialized by using a given"},{"text":"format string as a template into which the remaining argument"},{"text":"values are substituted according to given locale information."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE6format6locale_S2Sh_AA6LocaleVSghs7CVarArg_pdtcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"format"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"locale"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV","spelling":"Locale"},{"kind":"text","spelling":"?, "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7CVarArgP","spelling":"CVarArg"},{"kind":"text","spelling":"...)"}],"title":"init(format:locale:_:)"},"pathComponents":["String","init(format:locale:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3ggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":">>=(_:_:)"},"pathComponents":["Int",">>=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"components"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"separatedBy"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"separator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"] "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"separator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"separator","name":"separatedBy"}],"returns":[{"kind":"text","spelling":"["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"]"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE10components11separatedBySaySSGqd___tSyRd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"components"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"separatedBy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"]"}],"title":"components(separatedBy:)"},"pathComponents":["StringProtocol","components(separatedBy:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1goiySbx_xtFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["UInt64",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"utf32BigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE8EncodingV14utf32BigEndianACvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"utf32BigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"title":"utf32BigEndian"},"pathComponents":["String","Encoding","utf32BigEndian"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range."},{"text":""},{"text":"Use this method to generate an integer within a specific range. This"},{"text":"example creates three new values in the range `1..<100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1..<100))"},{"text":"    }"},{"text":"    // Prints \"53\""},{"text":"    // Prints \"64\""},{"text":"    // Prints \"5\""},{"text":""},{"text":"This method is equivalent to calling the version that takes a generator,"},{"text":"passing in the system's default random generator."},{"text":""},{"text":"- Parameter range: The range in which to create a random value."},{"text":"  `range` must not be empty."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:)"},"pathComponents":["UInt16","random(in:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"advanced"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"n"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a value that is offset the specified distance from this value."},{"text":""},{"text":"Use the `advanced(by:)` method in generic code to offset a value by a"},{"text":"specified distance. If you're working directly with numeric values, use"},{"text":"the addition operator (`+`) instead of this method."},{"text":""},{"text":"For a value `x`, a distance `n`, and a value `y = x.advanced(by: n)`,"},{"text":"`x.distance(to: y) == n`."},{"text":""},{"text":"- Parameter n: The distance to advance this value."},{"text":"- Returns: A value that is offset from this value by `n`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"n"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"internalName":"n","name":"by"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE8advanced2byxSi_tF::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"advanced"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"advanced(by:)"},"pathComponents":["Int32","advanced(by:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"clamping"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance with the representable value that's closest to the"},{"text":"given integer."},{"text":""},{"text":"If the value passed as `source` is greater than the maximum representable"},{"text":"value in this type, the result is the type's `max` value. If `source` is"},{"text":"less than the smallest representable value in this type, the result is"},{"text":"the type's `min` value."},{"text":""},{"text":"In this example, `x` is initialized as an `Int8` instance by clamping"},{"text":"`500` to the range `-128...127`, and `y` is initialized as a `UInt`"},{"text":"instance by clamping `-500` to the range `0...UInt.max`."},{"text":""},{"text":"    let x = Int8(clamping: 500)"},{"text":"    // x == 127"},{"text":"    // x == Int8.max"},{"text":""},{"text":"    let y = UInt(clamping: -500)"},{"text":"    // y == 0"},{"text":""},{"text":"- Parameter source: An integer to convert to this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"clamping"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"init(clamping:)"},"pathComponents":["UInt16","init(clamping:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"encode"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"t"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"forKey"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"key"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedEncodingContainerV","spelling":"KeyedEncodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"EncodingConfiguration"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation26EncodableWithConfigurationP","spelling":"EncodableWithConfiguration"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"t"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"t"},{"declarationFragments":[{"kind":"identifier","spelling":"key"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedEncodingContainerV","spelling":"KeyedEncodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"}],"internalName":"key","name":"forKey"},{"declarationFragments":[{"kind":"identifier","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"EncodingConfiguration"}],"name":"configuration"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s22KeyedEncodingContainerV10FoundationE6encode_6forKey13configurationyqd___x0B13ConfigurationQyd__tKAC013EncodableWithI0Rd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"encode"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"forKey"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedEncodingContainerV","spelling":"KeyedEncodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"EncodingConfiguration"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"title":"encode(_:forKey:configuration:)"},"pathComponents":["KeyedEncodingContainer","encode(_:forKey:configuration:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"K","rhs":"CodingKey","rhsPrecise":"s:s9CodingKeyP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"K","rhs":"CodingKey","rhsPrecise":"s:s9CodingKeyP"},{"kind":"conformance","lhs":"T","rhs":"EncodableWithConfiguration","rhsPrecise":"s:10Foundation26EncodableWithConfigurationP"}],"parameters":[{"depth":0,"index":0,"name":"K"},{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the given integer, if it can be represented"},{"text":"exactly."},{"text":""},{"text":"If the value passed as `source` is not representable exactly, the result"},{"text":"is `nil`. In the following example, the constant `x` is successfully"},{"text":"created from a value of `100`, while the attempt to initialize the"},{"text":"constant `y` from `1_000` fails because the `Int8` type can represent"},{"text":"`127` at maximum:"},{"text":""},{"text":"    let x = Int8(exactly: 100)"},{"text":"    // x == Optional(100)"},{"text":"    let y = Int8(exactly: 1_000)"},{"text":"    // y == nil"},{"text":""},{"text":"- Parameter source: A value to convert to this type of integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc::SYNTHESIZED::s:Su"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["UInt","init(exactly:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"},{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the sum of the two given values, wrapping the result in case of"},{"text":"any overflow."},{"text":""},{"text":"The overflow addition operator (`&+`) discards any bits that overflow the"},{"text":"fixed width of the integer type. In the following example, the sum of"},{"text":"`100` and `121` is greater than the maximum representable `Int8` value,"},{"text":"so the result is the partial value after discarding the overflowing"},{"text":"bits."},{"text":""},{"text":"    let x: Int8 = 10 &+ 21"},{"text":"    // x == 31"},{"text":"    let y: Int8 = 100 &+ 121"},{"text":"    // y == -35 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to add."},{"text":"  - rhs: The second value to add."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&+(_:_:)"},"pathComponents":["UInt8","&+(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range up to, but not including, its upper bound."},{"text":""},{"text":"Use the prefix half-open range operator (prefix `..<`) to create a"},{"text":"partial range of any type that conforms to the `Comparable` protocol."},{"text":"This example creates a `PartialRangeUpTo<Double>` instance that includes"},{"text":"any value less than `5.0`."},{"text":""},{"text":"    let upToFive = ..<5.0"},{"text":""},{"text":"    upToFive.contains(3.14)       // true"},{"text":"    upToFive.contains(6.28)       // false"},{"text":"    upToFive.contains(5.0)        // false"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the start of the collection up to, but not"},{"text":"including, the partial range's upper bound."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[..<3])"},{"text":"    // Prints \"[10, 20, 30]\""},{"text":""},{"text":"- Parameter maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `maximum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"..<(_:)"},"pathComponents":["Int8","..<(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE10firstRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:SR"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"firstRange(of:)"},"pathComponents":["UnsafeBufferPointer","firstRange(of:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"D"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2leoiySbx_xtFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["Int64","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"distance"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"docComment":{"lines":[{"text":"Returns the distance from this value to the given value, expressed as a"},{"text":"stride."},{"text":""},{"text":"For two values `x` and `y`, and a distance `n = x.distance(to: y)`,"},{"text":"`x.advanced(by: n) == y`."},{"text":""},{"text":"- Parameter other: The value to calculate the distance to."},{"text":"- Returns: The distance from this value to `other`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"other","name":"to"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE8distance2toSix_tF::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"distance"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"distance(to:)"},"pathComponents":["UInt64","distance(to:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"format"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"locale"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV","spelling":"Locale"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"arguments"},{"kind":"text","spelling":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:s7CVarArgP","spelling":"CVarArg"},{"kind":"text","spelling":"])"}],"docComment":{"lines":[{"text":"Returns a `String` object initialized by using a given"},{"text":"format string as a template into which the remaining argument"},{"text":"values are substituted according to given locale information."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE6format6locale9argumentsS2Sh_AA6LocaleVSghSays7CVarArg_pGhtcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"format"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"locale"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV","spelling":"Locale"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"arguments"},{"kind":"text","spelling":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:s7CVarArgP","spelling":"CVarArg"},{"kind":"text","spelling":"])"}],"title":"init(format:locale:arguments:)"},"pathComponents":["String","init(format:locale:arguments:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"integerLiteral"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"integerLiteral"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(integerLiteral:)"},"pathComponents":["Int64","init(integerLiteral:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"_ExpressibleByBuiltinIntegerLiteral","rhsPrecise":"s:s35_ExpressibleByBuiltinIntegerLiteralP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"_ExpressibleByBuiltinIntegerLiteral","rhsPrecise":"s:s35_ExpressibleByBuiltinIntegerLiteralP"}]}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"container"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation18AttributeContainerV","spelling":"AttributeContainer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"including"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"scope"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":".Type) "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation14AttributeScopeP","spelling":"AttributeScope"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SD10FoundationAA18NSAttributedStringC3KeyVRszypRs_rlE_9includingSDyAEypGAA18AttributeContainerV_qd__mtKcAA0F5ScopeRd__lufc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation18AttributeContainerV","spelling":"AttributeContainer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"including"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":".Type) "},{"kind":"keyword","spelling":"throws"}],"title":"init(_:including:)"},"pathComponents":["Dictionary","init(_:including:)"],"swiftExtension":{"constraints":[{"kind":"sameType","lhs":"Key","rhs":"NSAttributedString.Key","rhsPrecise":"s:10Foundation18NSAttributedStringC3KeyV"},{"kind":"sameType","lhs":"Value","rhs":"Any"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"sameType","lhs":"Key","rhs":"NSAttributedString.Key","rhsPrecise":"s:10Foundation18NSAttributedStringC3KeyV"},{"kind":"sameType","lhs":"Value","rhs":"Any"},{"kind":"conformance","lhs":"S","rhs":"AttributeScope","rhsPrecise":"s:10Foundation14AttributeScopeP"}],"parameters":[{"depth":0,"index":0,"name":"Key"},{"depth":0,"index":1,"name":"Value"},{"depth":1,"index":0,"name":"S"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"cString"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":") -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:s5CChara","spelling":"CChar"},{"kind":"text","spelling":"]?"}],"docComment":{"lines":[{"text":"Returns a representation of the string as a C string"},{"text":"using a given encoding."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"internalName":"encoding","name":"using"}],"returns":[{"kind":"text","spelling":"["},{"kind":"typeIdentifier","preciseIdentifier":"s:s5CChara","spelling":"CChar"},{"kind":"text","spelling":"]?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE7cString5usingSays4Int8VGSgSSAAE8EncodingV_tF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"cString"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":") -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:s5CChara","spelling":"CChar"},{"kind":"text","spelling":"]?"}],"title":"cString(using:)"},"pathComponents":["StringProtocol","cString(using:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"integerLiteral"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"integerLiteral"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(integerLiteral:)"},"pathComponents":["Int32","init(integerLiteral:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"_ExpressibleByBuiltinIntegerLiteral","rhsPrecise":"s:s35_ExpressibleByBuiltinIntegerLiteralP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"_ExpressibleByBuiltinIntegerLiteral","rhsPrecise":"s:s35_ExpressibleByBuiltinIntegerLiteralP"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2geoiySbx_xtFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["UInt64",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2leoiySbx_xtFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["Int32","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"docComment":{"lines":[{"text":"Returns `true` iff `other` is non-empty and contained within"},{"text":"`self` by case-sensitive, non-literal search."},{"text":""},{"text":"Equivalent to `self.rangeOfString(other) != nil`"}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"other"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE8containsySbqd__SyRd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"contains(_:)"},"pathComponents":["StringProtocol","contains(_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the product of the two given values, wrapping the result in case"},{"text":"of any overflow."},{"text":""},{"text":"The overflow multiplication operator (`&*`) discards any bits that"},{"text":"overflow the fixed width of the integer type. In the following example,"},{"text":"the product of `10` and `50` is greater than the maximum representable"},{"text":"`Int8` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    let x: Int8 = 10 &* 5"},{"text":"    // x == 50"},{"text":"    let y: Int8 = 10 &* 50"},{"text":"    // y == -12 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to multiply."},{"text":"  - rhs: The second value to multiply."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&*(_:_:)"},"pathComponents":["UInt8","&*(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates a new integer value from the given string."},{"text":""},{"text":"The string passed as `description` may begin with a plus or minus sign"},{"text":"character (`+` or `-`), followed by one or more numeric digits (`0-9`)."},{"text":""},{"text":"    let x = Int(\"123\")"},{"text":"    // x == 123"},{"text":""},{"text":"If `description` is in an invalid format, or if the value it denotes in"},{"text":"base 10 is not representable, the result is `nil`. For example, the"},{"text":"following conversions result in `nil`:"},{"text":""},{"text":"    Int(\" 100\")                       // Includes whitespace"},{"text":"    Int(\"21-50\")                      // Invalid format"},{"text":"    Int(\"ff6600\")                     // Characters out of bounds"},{"text":"    Int(\"10000000000000000000000000\") // Out of range"},{"text":""},{"text":"- Parameter description: The ASCII representation of a number."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsEyxSgSScfc::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["UInt8","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is greater than or equal to that of the second argument."},{"text":""},{"text":"This is the default implementation of the greater-than-or-equal-to operator"},{"text":"(`>=`) for any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."},{"text":"- Returns: `true` if `lhs` is greater than or equal to `rhs`; otherwise,"},{"text":"  `false`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE2geoiySbx_xtFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["UInt8",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the given integer, if it can be represented"},{"text":"exactly."},{"text":""},{"text":"If the value passed as `source` is not representable exactly, the result"},{"text":"is `nil`. In the following example, the constant `x` is successfully"},{"text":"created from a value of `100`, while the attempt to initialize the"},{"text":"constant `y` from `1_000` fails because the `Int8` type can represent"},{"text":"`127` at maximum:"},{"text":""},{"text":"    let x = Int8(exactly: 100)"},{"text":"    // x == Optional(100)"},{"text":"    let y = Int8(exactly: 1_000)"},{"text":"    // y == nil"},{"text":""},{"text":"- Parameter source: A value to convert to this type of integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["UInt32","init(exactly:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"},{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SG","spelling":"RandomNumberGenerator"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range, using the given"},{"text":"generator as a source for randomness."},{"text":""},{"text":"Use this method to generate an integer within a specific range when you"},{"text":"are using a custom random number generator. This example creates three"},{"text":"new values in the range `1...100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1...100, using: &myGenerator))"},{"text":"    }"},{"text":"    // Prints \"7\""},{"text":"    // Prints \"44\""},{"text":"    // Prints \"21\""},{"text":""},{"text":"- Parameters:"},{"text":"  - range: The range in which to create a random value."},{"text":"  - generator: The random number generator to use when creating the"},{"text":"    new random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"},{"declarationFragments":[{"kind":"identifier","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"generator","name":"using"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:using:)"},"pathComponents":["Int8","random(in:using:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"RandomNumberGenerator","rhsPrecise":"s:SG"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE10firstRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:s8RepeatedV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"firstRange(of:)"},"pathComponents":["Repeated","firstRange(of:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"D"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"advanced"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"n"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a value that is offset the specified distance from this value."},{"text":""},{"text":"Use the `advanced(by:)` method in generic code to offset a value by a"},{"text":"specified distance. If you're working directly with numeric values, use"},{"text":"the addition operator (`+`) instead of this method."},{"text":""},{"text":"For a value `x`, a distance `n`, and a value `y = x.advanced(by: n)`,"},{"text":"`x.distance(to: y) == n`."},{"text":""},{"text":"- Parameter n: The distance to advance this value."},{"text":"- Returns: A value that is offset from this value by `n`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"n"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"internalName":"n","name":"by"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE8advanced2byxSi_tF::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"advanced"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"advanced(by:)"},"pathComponents":["Int64","advanced(by:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range."},{"text":""},{"text":"Use this method to generate an integer within a specific range. This"},{"text":"example creates three new values in the range `1...100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1...100))"},{"text":"    }"},{"text":"    // Prints \"53\""},{"text":"    // Prints \"64\""},{"text":"    // Prints \"5\""},{"text":""},{"text":"This method is equivalent to calling `random(in:using:)`, passing in the"},{"text":"system's default random generator."},{"text":""},{"text":"- Parameter range: The range in which to create a random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:)"},"pathComponents":["UInt16","random(in:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range up to, and including, its upper bound."},{"text":""},{"text":"Use the prefix closed range operator (prefix `...`) to create a partial"},{"text":"range of any type that conforms to the `Comparable` protocol. This"},{"text":"example creates a `PartialRangeThrough<Double>` instance that includes"},{"text":"any value less than or equal to `5.0`."},{"text":""},{"text":"    let throughFive = ...5.0"},{"text":""},{"text":"    throughFive.contains(4.0)     // true"},{"text":"    throughFive.contains(5.0)     // true"},{"text":"    throughFive.contains(6.0)     // false"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the start of the collection up to, and"},{"text":"including, the partial range's upper bound."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[...3])"},{"text":"    // Prints \"[10, 20, 30, 40]\""},{"text":""},{"text":"- Parameter maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `maximum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:)"},"pathComponents":["Int8","...(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"},{"declarationFragments":[{"kind":"identifier","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"y"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SxsE2eeoiySbx_xtFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"==(_:_:)"},"pathComponents":["Int8","==(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range up to, but not including, its upper bound."},{"text":""},{"text":"Use the prefix half-open range operator (prefix `..<`) to create a"},{"text":"partial range of any type that conforms to the `Comparable` protocol."},{"text":"This example creates a `PartialRangeUpTo<Double>` instance that includes"},{"text":"any value less than `5.0`."},{"text":""},{"text":"    let upToFive = ..<5.0"},{"text":""},{"text":"    upToFive.contains(3.14)       // true"},{"text":"    upToFive.contains(6.28)       // false"},{"text":"    upToFive.contains(5.0)        // false"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the start of the collection up to, but not"},{"text":"including, the partial range's upper bound."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[..<3])"},{"text":"    // Prints \"[10, 20, 30]\""},{"text":""},{"text":"- Parameter maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `maximum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"..<(_:)"},"pathComponents":["UInt16","..<(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2neoiySbx_xtFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"!=(_:_:)"},"pathComponents":["UInt32","!=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"distance"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"docComment":{"lines":[{"text":"Returns the distance from this value to the given value, expressed as a"},{"text":"stride."},{"text":""},{"text":"For two values `x` and `y`, and a distance `n = x.distance(to: y)`,"},{"text":"`x.advanced(by: n) == y`."},{"text":""},{"text":"- Parameter other: The value to calculate the distance to."},{"text":"- Returns: The distance from this value to `other`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"other","name":"to"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE8distance2toSix_tF::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"distance"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"distance(to:)"},"pathComponents":["Int64","distance(to:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2leoiySbx_xtFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["UInt64","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"integerLiteral"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"integerLiteral"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(integerLiteral:)"},"pathComponents":["UInt64","init(integerLiteral:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"_ExpressibleByBuiltinIntegerLiteral","rhsPrecise":"s:s35_ExpressibleByBuiltinIntegerLiteralP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"_ExpressibleByBuiltinIntegerLiteral","rhsPrecise":"s:s35_ExpressibleByBuiltinIntegerLiteralP"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2geoiySbx_xtFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["Int32",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"allowLossyConversion"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" = false) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","spelling":"Data"},{"kind":"text","spelling":"?"}],"docComment":{"lines":[{"text":"Returns a `Data` containing a representation of"},{"text":"the `String` encoded using a given encoding."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"internalName":"encoding","name":"using"},{"declarationFragments":[{"kind":"identifier","spelling":"allowLossyConversion"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"name":"allowLossyConversion"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","spelling":"Data"},{"kind":"text","spelling":"?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE4data5using20allowLossyConversionAA4DataVSgSSAAE8EncodingV_SbtF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"allowLossyConversion"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","spelling":"Data"},{"kind":"text","spelling":"?"}],"title":"data(using:allowLossyConversion:)"},"pathComponents":["StringProtocol","data(using:allowLossyConversion:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1goiySbx_xtFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["Int64",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"clamping"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance with the representable value that's closest to the"},{"text":"given integer."},{"text":""},{"text":"If the value passed as `source` is greater than the maximum representable"},{"text":"value in this type, the result is the type's `max` value. If `source` is"},{"text":"less than the smallest representable value in this type, the result is"},{"text":"the type's `min` value."},{"text":""},{"text":"In this example, `x` is initialized as an `Int8` instance by clamping"},{"text":"`500` to the range `-128...127`, and `y` is initialized as a `UInt`"},{"text":"instance by clamping `-500` to the range `0...UInt.max`."},{"text":""},{"text":"    let x = Int8(clamping: 500)"},{"text":"    // x == 127"},{"text":"    // x == Int8.max"},{"text":""},{"text":"    let y = UInt(clamping: -500)"},{"text":"    // y == 0"},{"text":""},{"text":"- Parameter source: An integer to convert to this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"clamping"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"init(clamping:)"},"pathComponents":["Int8","init(clamping:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"magnitude"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The magnitude of this value."},{"text":""},{"text":"Every unsigned integer is its own magnitude, so for any value `x`,"},{"text":"`x == x.magnitude`."},{"text":""},{"text":"The global `abs(_:)` function provides more familiar syntax when you need"},{"text":"to find an absolute value. In addition, because `abs(_:)` always returns"},{"text":"a value of the same type, even in a generic context, using the function"},{"text":"instead of the `magnitude` property is encouraged."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUsE9magnitudexvp::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"magnitude"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"magnitude"},"pathComponents":["UInt64","magnitude"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"utf32"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE8EncodingV5utf32ACvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"utf32"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"title":"utf32"},"pathComponents":["String","Encoding","utf32"]},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"from"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSw_qd__tSXRd__5BoundQyd__5IndexRtzlF::SYNTHESIZED::s:SW"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:from:)"},"pathComponents":["UnsafeRawBufferPointer","copyBytes(to:from:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range."},{"text":""},{"text":"Use this method to generate an integer within a specific range. This"},{"text":"example creates three new values in the range `1..<100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1..<100))"},{"text":"    }"},{"text":"    // Prints \"53\""},{"text":"    // Prints \"64\""},{"text":"    // Prints \"5\""},{"text":""},{"text":"This method is equivalent to calling the version that takes a generator,"},{"text":"passing in the system's default random generator."},{"text":""},{"text":"- Parameter range: The range in which to create a random value."},{"text":"  `range` must not be empty."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:)"},"pathComponents":["Int8","random(in:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"container"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation18AttributeContainerV","spelling":"AttributeContainer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"including"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"scope"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","spelling":"KeyPath"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation15AttributeScopesO","spelling":"AttributeScopes"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":".Type>) "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation14AttributeScopeP","spelling":"AttributeScope"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SD10FoundationAA18NSAttributedStringC3KeyVRszypRs_rlE_9includingSDyAEypGAA18AttributeContainerV_s0D4PathCyAA0F6ScopesOqd__mGtKcAA0F5ScopeRd__lufc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation18AttributeContainerV","spelling":"AttributeContainer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"including"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","spelling":"KeyPath"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation15AttributeScopesO","spelling":"AttributeScopes"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":".Type>) "},{"kind":"keyword","spelling":"throws"}],"title":"init(_:including:)"},"pathComponents":["Dictionary","init(_:including:)"],"swiftExtension":{"constraints":[{"kind":"sameType","lhs":"Key","rhs":"NSAttributedString.Key","rhsPrecise":"s:10Foundation18NSAttributedStringC3KeyV"},{"kind":"sameType","lhs":"Value","rhs":"Any"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"sameType","lhs":"Key","rhs":"NSAttributedString.Key","rhsPrecise":"s:10Foundation18NSAttributedStringC3KeyV"},{"kind":"sameType","lhs":"Value","rhs":"Any"},{"kind":"conformance","lhs":"S","rhs":"AttributeScope","rhsPrecise":"s:10Foundation14AttributeScopeP"}],"parameters":[{"depth":0,"index":0,"name":"Key"},{"depth":0,"index":1,"name":"Value"},{"depth":1,"index":0,"name":"S"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is less than that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"less-than operator (`<`), even if the two instances are of different"},{"text":"types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1loiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<(_:_:)"},"pathComponents":["Int","<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is less than or equal to that of the second argument."},{"text":""},{"text":"This is the default implementation of the less-than-or-equal-to"},{"text":"operator (`<=`) for any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE2leoiySbx_xtFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["UInt8","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"decomposedStringWithCanonicalMapping"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A string created by normalizing the string's contents using Form D."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE36decomposedStringWithCanonicalMappingSSvp"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"decomposedStringWithCanonicalMapping"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"decomposedStringWithCanonicalMapping"},"pathComponents":["StringProtocol","decomposedStringWithCanonicalMapping"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1goiySbx_xtFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["UInt",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"utf16LittleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE8EncodingV17utf16LittleEndianACvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"utf16LittleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"title":"utf16LittleEndian"},"pathComponents":["String","Encoding","utf16LittleEndian"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range extending upward from a lower bound."},{"text":""},{"text":"Use the postfix range operator (postfix `...`) to create a partial range"},{"text":"of any type that conforms to the `Comparable` protocol. This example"},{"text":"creates a `PartialRangeFrom<Double>` instance that includes any value"},{"text":"greater than or equal to `5.0`."},{"text":""},{"text":"    let atLeastFive = 5.0..."},{"text":""},{"text":"    atLeastFive.contains(4.0)     // false"},{"text":"    atLeastFive.contains(5.0)     // true"},{"text":"    atLeastFive.contains(6.0)     // true"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the partial range's lower bound up to the end"},{"text":"of the collection."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[3...])"},{"text":"    // Prints \"[40, 50, 60, 70]\""},{"text":""},{"text":"- Parameter minimum: The lower bound for the range."},{"text":""},{"text":"- Precondition: `minimum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:)"},"pathComponents":["Int8","...(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"resetBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"in"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation19MutableDataProtocolPAAE10resetBytes2inyqd___tSXRd__5BoundQyd__5IndexRtzlF::SYNTHESIZED::s:Sa"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"resetBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":")"}],"title":"resetBytes(in:)"},"pathComponents":["Array","resetBytes(in:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SG","spelling":"RandomNumberGenerator"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range, using the given"},{"text":"generator as a source for randomness."},{"text":""},{"text":"Use this method to generate an integer within a specific range when you"},{"text":"are using a custom random number generator. This example creates three"},{"text":"new values in the range `1..<100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1..<100, using: &myGenerator))"},{"text":"    }"},{"text":"    // Prints \"7\""},{"text":"    // Prints \"44\""},{"text":"    // Prints \"21\""},{"text":""},{"text":"- Note: The algorithm used to create random values may change in a future"},{"text":"  version of Swift. If you're passing a generator that results in the"},{"text":"  same sequence of integer values each time you run your program, that"},{"text":"  sequence may change when your program is compiled using a different"},{"text":"  version of Swift."},{"text":""},{"text":"- Parameters:"},{"text":"  - range: The range in which to create a random value."},{"text":"    `range` must not be empty."},{"text":"  - generator: The random number generator to use when creating the"},{"text":"    new random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"},{"declarationFragments":[{"kind":"identifier","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"generator","name":"using"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:using:)"},"pathComponents":["Int8","random(in:using:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"RandomNumberGenerator","rhsPrecise":"s:SG"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range."},{"text":""},{"text":"Use this method to generate an integer within a specific range. This"},{"text":"example creates three new values in the range `1...100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1...100))"},{"text":"    }"},{"text":"    // Prints \"53\""},{"text":"    // Prints \"64\""},{"text":"    // Prints \"5\""},{"text":""},{"text":"This method is equivalent to calling `random(in:using:)`, passing in the"},{"text":"system's default random generator."},{"text":""},{"text":"- Parameter range: The range in which to create a random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:)"},"pathComponents":["Int16","random(in:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the given integer, if it can be represented"},{"text":"exactly."},{"text":""},{"text":"If the value passed as `source` is not representable exactly, the result"},{"text":"is `nil`. In the following example, the constant `x` is successfully"},{"text":"created from a value of `100`, while the attempt to initialize the"},{"text":"constant `y` from `1_000` fails because the `Int8` type can represent"},{"text":"`127` at maximum:"},{"text":""},{"text":"    let x = Int8(exactly: 100)"},{"text":"    // x == Optional(100)"},{"text":"    let y = Int8(exactly: 1_000)"},{"text":"    // y == nil"},{"text":""},{"text":"- Parameter source: A value to convert to this type of integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["UInt64","init(exactly:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"},{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}],"docComment":{"lines":[{"text":"Creates a new value equal to zero."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsExycfc::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}],"title":"init()"},"pathComponents":["UInt8","init()"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2neoiySbx_xtFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"!=(_:_:)"},"pathComponents":["Int32","!=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isSigned"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A Boolean value indicating whether this type is a signed integer type."},{"text":""},{"text":"This property is always `true` for signed integer types."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZsE8isSignedSbvpZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isSigned"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"isSigned"},"pathComponents":["Int64","isSigned"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"distance"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"docComment":{"lines":[{"text":"Returns the distance from this value to the given value, expressed as a"},{"text":"stride."},{"text":""},{"text":"For two values `x` and `y`, and a distance `n = x.distance(to: y)`,"},{"text":"`x.advanced(by: n) == y`."},{"text":""},{"text":"- Parameter other: The value to calculate the distance to."},{"text":"- Returns: The distance from this value to `other`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"other","name":"to"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE8distance2toSix_tF::SYNTHESIZED::s:Su"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"distance"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"distance(to:)"},"pathComponents":["UInt","distance(to:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right."},{"text":""},{"text":"The `>>` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a left shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*. An overshift results in `-1` for a"},{"text":"  negative value of `lhs` or `0` for a nonnegative value."},{"text":"- Using any other value for `rhs` performs a right shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted right by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x >> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x >> 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a left shift"},{"text":"using `abs(rhs)`."},{"text":""},{"text":"    let a = x >> -3"},{"text":"    // a == 240                       // 0b11110000"},{"text":"    let b = x << 3"},{"text":"    // b == 240                       // 0b11110000"},{"text":""},{"text":"Right shift operations on negative values \"fill in\" the high bits with"},{"text":"ones instead of zeros."},{"text":""},{"text":"    let q: Int8 = -30                 // 0b11100010"},{"text":"    let r = q >> 2"},{"text":"    // r == -8                        // 0b11111000"},{"text":""},{"text":"    let s = q >> 11"},{"text":"    // s == -1                        // 0b11111111"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":">>(_:_:)"},"pathComponents":["Int",">>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2geoiySbx_xtFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["UInt32",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"advanced"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"n"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a value that is offset the specified distance from this value."},{"text":""},{"text":"Use the `advanced(by:)` method in generic code to offset a value by a"},{"text":"specified distance. If you're working directly with numeric values, use"},{"text":"the addition operator (`+`) instead of this method."},{"text":""},{"text":"For a value `x`, a distance `n`, and a value `y = x.advanced(by: n)`,"},{"text":"`x.distance(to: y) == n`."},{"text":""},{"text":"- Parameter n: The distance to advance this value."},{"text":"- Returns: A value that is offset from this value by `n`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"n"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"internalName":"n","name":"by"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE8advanced2byxSi_tF::SYNTHESIZED::s:Su"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"advanced"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"advanced(by:)"},"pathComponents":["UInt","advanced(by:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":11}},{"domain":"iOS","introduced":{"major":9,"minor":0}}],"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedStandardRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"string"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"docComment":{"lines":[{"text":"Finds and returns the range of the first occurrence of a given string,"},{"text":"taking the current locale into account.  Returns `nil` if the string was"},{"text":"not found."},{"text":""},{"text":"This is the most appropriate method for doing user-level string searches,"},{"text":"similar to how searches are done generally in the system.  The search is"},{"text":"locale-aware, case and diacritic insensitive.  The exact list of search"},{"text":"options applied may change over time."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"string"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"string","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE22localizedStandardRange2ofSnySS5IndexVGSgqd___tSyRd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedStandardRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"localizedStandardRange(of:)"},"pathComponents":["StringProtocol","localizedStandardRange(of:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"resetBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"in"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation19MutableDataProtocolPAAE10resetBytes2inyqd___tSXRd__5BoundQyd__5IndexRtzlF::SYNTHESIZED::s:s15ContiguousArrayV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"resetBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":")"}],"title":"resetBytes(in:)"},"pathComponents":["ContiguousArray","resetBytes(in:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"magnitude"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The magnitude of this value."},{"text":""},{"text":"Every unsigned integer is its own magnitude, so for any value `x`,"},{"text":"`x == x.magnitude`."},{"text":""},{"text":"The global `abs(_:)` function provides more familiar syntax when you need"},{"text":"to find an absolute value. In addition, because `abs(_:)` always returns"},{"text":"a value of the same type, even in a generic context, using the function"},{"text":"instead of the `magnitude` property is encouraged."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUsE9magnitudexvp::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"magnitude"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"magnitude"},"pathComponents":["UInt32","magnitude"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"integerLiteral"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"integerLiteral"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(integerLiteral:)"},"pathComponents":["UInt32","init(integerLiteral:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"_ExpressibleByBuiltinIntegerLiteral","rhsPrecise":"s:s35_ExpressibleByBuiltinIntegerLiteralP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"_ExpressibleByBuiltinIntegerLiteral","rhsPrecise":"s:s35_ExpressibleByBuiltinIntegerLiteralP"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is less than or equal to that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"less-than-or-equal-to operator (`<=`), even if the two instances are of"},{"text":"different types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2leoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["Int","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2leoiySbx_xtFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["UInt32","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2neoiySbx_xtFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"!=(_:_:)"},"pathComponents":["UInt64","!=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Subtracts the second value from the first and stores the difference in the"},{"text":"left-hand-side variable, wrapping any overflow."},{"text":""},{"text":"The masking subtraction assignment operator (`&-=`) silently wraps any"},{"text":"overflow that occurs during the operation. In the following example, the"},{"text":"difference of `10` and `21` is less than zero, the minimum representable"},{"text":"`UInt` value, so the result is the result is the partial value after"},{"text":"discarding the overflowing bits."},{"text":""},{"text":"    var x: Int8 = 21"},{"text":"    x &-= 10"},{"text":"    // x == 11"},{"text":"    var y: UInt8 = 10"},{"text":"    y &-= 21"},{"text":"    // y == 245 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A numeric value."},{"text":"  - rhs: The value to subtract from `lhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&-=(_:_:)"},"pathComponents":["UInt8","&-=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range up to, but not including, its upper bound."},{"text":""},{"text":"Use the prefix half-open range operator (prefix `..<`) to create a"},{"text":"partial range of any type that conforms to the `Comparable` protocol."},{"text":"This example creates a `PartialRangeUpTo<Double>` instance that includes"},{"text":"any value less than `5.0`."},{"text":""},{"text":"    let upToFive = ..<5.0"},{"text":""},{"text":"    upToFive.contains(3.14)       // true"},{"text":"    upToFive.contains(6.28)       // false"},{"text":"    upToFive.contains(5.0)        // false"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the start of the collection up to, but not"},{"text":"including, the partial range's upper bound."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[..<3])"},{"text":"    // Prints \"[10, 20, 30]\""},{"text":""},{"text":"- Parameter maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `maximum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"..<(_:)"},"pathComponents":["Int16","..<(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"regions"},{"kind":"text","spelling":": ["},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Regions"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"SubSequence"},{"kind":"text","spelling":"] { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s5SliceV10FoundationAC12DataProtocolRzrlE7regionsSay7Regions_7Element11SubSequenceSlQZGvp"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"regions"},{"kind":"text","spelling":": ["},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Regions"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"SubSequence"},{"kind":"text","spelling":"]"}],"title":"regions"},"pathComponents":["Slice","regions"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Base","rhs":"DataProtocol","rhsPrecise":"s:10Foundation12DataProtocolP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"truncating"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s5Int32V10FoundationE10truncatingAbC8NSNumberC_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"truncating"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(truncating:)"},"pathComponents":["Int32","init(truncating:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SB","spelling":"BinaryFloatingPoint"}],"docComment":{"lines":[{"text":"Creates an integer from the given floating-point value, rounding toward"},{"text":"zero. Any fractional part of the value passed as `source` is removed."},{"text":""},{"text":"    let x = Int(21.5)"},{"text":"    // x == 21"},{"text":"    let y = Int(-21.5)"},{"text":"    // y == -21"},{"text":""},{"text":"If `source` is outside the bounds of this type after rounding toward"},{"text":"zero, a runtime error may occur."},{"text":""},{"text":"    let z = UInt(-21.5)"},{"text":"    // Error: ...outside the representable range"},{"text":""},{"text":"- Parameter source: A floating-point value to convert to an integer."},{"text":"  `source` must be representable in this type after rounding toward"},{"text":"  zero."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["UInt64","init(_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryFloatingPoint","rhsPrecise":"s:SB"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"littleEndian"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates an integer from its little-endian representation, changing the"},{"text":"byte order if necessary."},{"text":""},{"text":"- Parameter value: A value to use as the little-endian representation of"},{"text":"  the new integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(littleEndian:)"},"pathComponents":["UInt32","init(littleEndian:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bitWidth"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The number of bits in the binary representation of this value."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE03bitB0Sivp::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bitWidth"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"bitWidth"},"pathComponents":["UInt32","bitWidth"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isSigned"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A Boolean value indicating whether this type is a signed integer type."},{"text":""},{"text":"This property is always `false` for unsigned integer types."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUsE8isSignedSbvpZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isSigned"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"isSigned"},"pathComponents":["UInt32","isSigned"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9lastRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:s8RepeatedV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"lastRange(of:in:)"},"pathComponents":["Repeated","lastRange(of:in:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"D"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking left shift operator (`&<<`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking left shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &<< 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &<< 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&<<(_:_:)"},"pathComponents":["Int","&<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The maximum representable integer in this type."},{"text":""},{"text":"For unsigned integer types, this value is `(2 ** bitWidth) - 1`, where"},{"text":"`**` is exponentiation."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUss17FixedWidthIntegerRzrlE3maxxvpZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"max"},"pathComponents":["UInt8","max"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:SS10FoundationE8EncodingV"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"!=(_:_:)"},"pathComponents":["String","Encoding","!=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right."},{"text":""},{"text":"The `>>` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a left shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*. An overshift results in `-1` for a"},{"text":"  negative value of `lhs` or `0` for a nonnegative value."},{"text":"- Using any other value for `rhs` performs a right shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted right by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x >> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x >> 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a left shift"},{"text":"using `abs(rhs)`."},{"text":""},{"text":"    let a = x >> -3"},{"text":"    // a == 240                       // 0b11110000"},{"text":"    let b = x << 3"},{"text":"    // b == 240                       // 0b11110000"},{"text":""},{"text":"Right shift operations on negative values \"fill in\" the high bits with"},{"text":"ones instead of zeros."},{"text":""},{"text":"    let q: Int8 = -30                 // 0b11100010"},{"text":"    let r = q >> 2"},{"text":"    // r == -8                        // 0b11111000"},{"text":""},{"text":"    let s = q >> 11"},{"text":"    // s == -1                        // 0b11111111"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":">>(_:_:)"},"pathComponents":["UInt32",">>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"RHS"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise AND operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise AND operation results in a value that has each bit set to `1`"},{"text":"where *both* of its arguments have that bit set to `1`. For example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x & y             // 0b00000100"},{"text":"    // z == 4"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1aoiyxx_xtFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&(_:_:)"},"pathComponents":["Int64","&(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":11}},{"domain":"iOS","introduced":{"major":9,"minor":0}}],"declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedCapitalized"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A capitalized representation of the string that is produced"},{"text":"using the current locale."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE20localizedCapitalizedSSvp"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedCapitalized"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"localizedCapitalized"},"pathComponents":["StringProtocol","localizedCapitalized"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"quotientAndRemainder"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"dividingBy"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> (quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Returns the quotient and remainder of this value divided by the given"},{"text":"value."},{"text":""},{"text":"Use this method to calculate the quotient and remainder of a division at"},{"text":"the same time."},{"text":""},{"text":"    let x = 1_000_000"},{"text":"    let (q, r) = x.quotientAndRemainder(dividingBy: 933)"},{"text":"    // q == 1071"},{"text":"    // r == 757"},{"text":""},{"text":"- Parameter rhs: The value to divide this value by."},{"text":"- Returns: A tuple containing the quotient and remainder of this value"},{"text":"  divided by `rhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"rhs","name":"dividingBy"}],"returns":[{"kind":"text","spelling":"(quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF::SYNTHESIZED::s:Su"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"quotientAndRemainder"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"dividingBy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> (quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"quotientAndRemainder(dividingBy:)"},"pathComponents":["UInt","quotientAndRemainder(dividingBy:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"getParagraphStart"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"start"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"end"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"contentsEnd"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"for"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS5IndexV","spelling":"Index"}],"docComment":{"lines":[{"text":"Returns by reference the beginning of the first paragraph"},{"text":"and the end of the last paragraph touched by the given range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"start"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">"}],"name":"start"},{"declarationFragments":[{"kind":"identifier","spelling":"end"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">"}],"name":"end"},{"declarationFragments":[{"kind":"identifier","spelling":"contentsEnd"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">"}],"name":"contentsEnd"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"for"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE17getParagraphStart_3end11contentsEnd3forySpySS5IndexVG_A2Hqd__tSXRd__AG5BoundRtd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"getParagraphStart"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"end"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"contentsEnd"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"for"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":")"}],"title":"getParagraphStart(_:end:contentsEnd:for:)"},"pathComponents":["StringProtocol","getParagraphStart(_:end:contentsEnd:for:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"R.Bound","rhs":"String.Index","rhsPrecise":"s:SS5IndexV"}],"parameters":[{"depth":1,"index":0,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Multiplies two values and stores the result in the left-hand-side"},{"text":"variable, wrapping any overflow."},{"text":""},{"text":"The masking multiplication assignment operator (`&*=`) silently wraps"},{"text":"any overflow that occurs during the operation. In the following example,"},{"text":"the product of `10` and `50` is greater than the maximum representable"},{"text":"`Int8` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    var x: Int8 = 10"},{"text":"    x &*= 5"},{"text":"    // x == 50"},{"text":"    var y: Int8 = 10"},{"text":"    y &*= 50"},{"text":"    // y == -12 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to multiply."},{"text":"  - rhs: The second value to multiply."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&*=(_:_:)"},"pathComponents":["Int32","&*=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left."},{"text":""},{"text":"The `<<` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a right shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*, resulting in zero."},{"text":"- Using any other value for `rhs` performs a left shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted left by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x << 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x << 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a right shift"},{"text":"with `abs(rhs)`."},{"text":""},{"text":"    let a = x << -3"},{"text":"    // a == 3                         // 0b00000011"},{"text":"    let b = x >> 3"},{"text":"    // b == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"<<(_:_:)"},"pathComponents":["UInt64","<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"RHS"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width, and stores the result in the left-hand-side variable."},{"text":""},{"text":"The `&<<=` operator performs a *masking shift*, where the value used as"},{"text":"`rhs` is masked to produce a value in the range `0..<lhs.bitWidth`. The"},{"text":"shift is performed using this masked value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    var x: UInt8 = 30                 // 0b00011110"},{"text":"    x &<<= 2"},{"text":"    // x == 120                       // 0b01111000"},{"text":""},{"text":"However, if you pass `19` as `rhs`, the method first bitmasks `rhs` to"},{"text":"`3`, and then uses that masked value as the number of bits to shift `lhs`."},{"text":""},{"text":"    var y: UInt8 = 30                 // 0b00011110"},{"text":"    y &<<= 19"},{"text":"    // y == 240                       // 0b11110000"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"&<<=(_:_:)"},"pathComponents":["UInt","&<<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","availability":[{"deprecated":{"major":4},"domain":"Swift","renamed":"init(truncating:)"}],"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s5Int32V10FoundationEyAbC8NSNumberCcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Int32","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"|"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise OR operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise OR operation results in a value that has each bit set to `1`"},{"text":"where *one or both* of its arguments have that bit set to `1`. For"},{"text":"example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x | y             // 0b00001111"},{"text":"    // z == 15"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1ooiyxx_xtFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"|"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"|(_:_:)"},"pathComponents":["UInt","|(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"CompareOptions"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSStringC","spelling":"NSString"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSStringC14CompareOptionsV","spelling":"CompareOptions"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE14CompareOptionsa"},"kind":{"displayName":"Type Alias","identifier":"swift.typealias"},"names":{"navigator":[{"kind":"identifier","spelling":"CompareOptions"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"CompareOptions"}],"title":"String.CompareOptions"},"pathComponents":["String","CompareOptions"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"bigEndian"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates an integer from its big-endian representation, changing the byte"},{"text":"order if necessary."},{"text":""},{"text":"- Parameter value: A value to use as the big-endian representation of the"},{"text":"  new integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc::SYNTHESIZED::s:Su"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(bigEndian:)"},"pathComponents":["UInt","init(bigEndian:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"^"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise XOR operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise XOR operation, also known as an exclusive OR operation, results"},{"text":"in a value that has each bit set to `1` where *one or the other but not"},{"text":"both* of its arguments had that bit set to `1`. For example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x ^ y             // 0b00001011"},{"text":"    // z == 11"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1xoiyxx_xtFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"^"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"^(_:_:)"},"pathComponents":["UInt","^(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The minimum representable integer in this type."},{"text":""},{"text":"For unsigned integer types, this value is always `0`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUss17FixedWidthIntegerRzrlE3minxvpZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"min"},"pathComponents":["UInt8","min"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s5Int32V10FoundationE7exactlyABSgAC8NSNumberC_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["Int32","init(exactly:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The big-endian representation of this integer."},{"text":""},{"text":"If necessary, the byte order of this value is reversed from the typical"},{"text":"byte order of this integer type. On a big-endian platform, for any"},{"text":"integer `x`, `x == x.bigEndian`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE9bigEndianxvp::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"bigEndian"},"pathComponents":["Int64","bigEndian"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"operand"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the additive inverse of the specified value."},{"text":""},{"text":"The negation operator (prefix `-`) returns the additive inverse of its"},{"text":"argument."},{"text":""},{"text":"    let x = 21"},{"text":"    let y = -x"},{"text":"    // y == -21"},{"text":""},{"text":"The resulting value must be representable in the same type as the"},{"text":"argument. In particular, negating a signed, fixed-width integer type's"},{"text":"minimum results in a value that cannot be represented."},{"text":""},{"text":"    let z = -Int8.min"},{"text":"    // Overflow error"},{"text":""},{"text":"- Returns: The additive inverse of the argument."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"operand"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"operand"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s13SignedNumericPsE1sopyxxFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"-(_:)"},"pathComponents":["Int16","-(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is greater than that of the second argument."},{"text":""},{"text":"This is the default implementation of the greater-than operator (`>`) for"},{"text":"any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE1goiySbx_xtFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["UInt8",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SB","spelling":"BinaryFloatingPoint"}],"docComment":{"lines":[{"text":"Creates an integer from the given floating-point value, rounding toward"},{"text":"zero. Any fractional part of the value passed as `source` is removed."},{"text":""},{"text":"    let x = Int(21.5)"},{"text":"    // x == 21"},{"text":"    let y = Int(-21.5)"},{"text":"    // y == -21"},{"text":""},{"text":"If `source` is outside the bounds of this type after rounding toward"},{"text":"zero, a runtime error may occur."},{"text":""},{"text":"    let z = UInt(-21.5)"},{"text":"    // Error: ...outside the representable range"},{"text":""},{"text":"- Parameter source: A floating-point value to convert to an integer."},{"text":"  `source` must be representable in this type after rounding toward"},{"text":"  zero."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Int32","init(_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryFloatingPoint","rhsPrecise":"s:SB"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the given integer, if it can be represented"},{"text":"exactly."},{"text":""},{"text":"If the value passed as `source` is not representable exactly, the result"},{"text":"is `nil`. In the following example, the constant `x` is successfully"},{"text":"created from a value of `100`, while the attempt to initialize the"},{"text":"constant `y` from `1_000` fails because the `Int8` type can represent"},{"text":"`127` at maximum:"},{"text":""},{"text":"    let x = Int8(exactly: 100)"},{"text":"    // x == Optional(100)"},{"text":"    let y = Int8(exactly: 1_000)"},{"text":"    // y == nil"},{"text":""},{"text":"- Parameter source: A value to convert to this type of integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc::SYNTHESIZED::s:Si"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["Int","init(exactly:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"},{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isMultiple"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"other","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZss17FixedWidthIntegerRzrlE10isMultiple2ofSbx_tF::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isMultiple"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"isMultiple(of:)"},"pathComponents":["Int64","isMultiple(of:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the two given values are"},{"text":"equal."},{"text":""},{"text":"You can check the equality of instances of any `BinaryInteger` types"},{"text":"using the equal-to operator (`==`). For example, you can test whether"},{"text":"the first `UInt8` value in a string's UTF-8 encoding is equal to the"},{"text":"first `UInt32` value in its Unicode scalar view:"},{"text":""},{"text":"    let gameName = \"Red Light, Green Light\""},{"text":"    if let firstUTF8 = gameName.utf8.first,"},{"text":"        let firstScalar = gameName.unicodeScalars.first?.value {"},{"text":"        print(\"First code values are equal: \\(firstUTF8 == firstScalar)\")"},{"text":"    }"},{"text":"    // Prints \"First code values are equal: true\""},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"==(_:_:)"},"pathComponents":["Int","==(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"truncatingIfNeeded"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the bit pattern of the given instance by"},{"text":"truncating or sign-extending if needed to fit this type."},{"text":""},{"text":"When the bit width of `T` (the type of `source`) is equal to or greater"},{"text":"than this type's bit width, the result is the truncated"},{"text":"least-significant bits of `source`. For example, when converting a"},{"text":"16-bit value to an 8-bit type, only the lower 8 bits of `source` are"},{"text":"used."},{"text":""},{"text":"    let p: Int16 = -500"},{"text":"    // 'p' has a binary representation of 11111110_00001100"},{"text":"    let q = Int8(truncatingIfNeeded: p)"},{"text":"    // q == 12"},{"text":"    // 'q' has a binary representation of 00001100"},{"text":""},{"text":"When the bit width of `T` is less than this type's bit width, the result"},{"text":"is *sign-extended* to fill the remaining bits. That is, if `source` is"},{"text":"negative, the result is padded with ones; otherwise, the result is"},{"text":"padded with zeros."},{"text":""},{"text":"    let u: Int8 = 21"},{"text":"    // 'u' has a binary representation of 00010101"},{"text":"    let v = Int16(truncatingIfNeeded: u)"},{"text":"    // v == 21"},{"text":"    // 'v' has a binary representation of 00000000_00010101"},{"text":""},{"text":"    let w: Int8 = -21"},{"text":"    // 'w' has a binary representation of 11101011"},{"text":"    let x = Int16(truncatingIfNeeded: w)"},{"text":"    // x == -21"},{"text":"    // 'x' has a binary representation of 11111111_11101011"},{"text":"    let y = UInt16(truncatingIfNeeded: w)"},{"text":"    // y == 65515"},{"text":"    // 'y' has a binary representation of 11111111_11101011"},{"text":""},{"text":"- Parameter source: An integer to convert to this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc::SYNTHESIZED::s:Si"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"truncatingIfNeeded"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(truncatingIfNeeded:)"},"pathComponents":["Int","init(truncatingIfNeeded:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The little-endian representation of this integer."},{"text":""},{"text":"If necessary, the byte order of this value is reversed from the typical"},{"text":"byte order of this integer type. On a little-endian platform, for any"},{"text":"integer `x`, `x == x.littleEndian`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE12littleEndianxvp::SYNTHESIZED::s:Su"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"littleEndian"},"pathComponents":["UInt","littleEndian"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Multiplies two values and stores the result in the left-hand-side"},{"text":"variable, wrapping any overflow."},{"text":""},{"text":"The masking multiplication assignment operator (`&*=`) silently wraps"},{"text":"any overflow that occurs during the operation. In the following example,"},{"text":"the product of `10` and `50` is greater than the maximum representable"},{"text":"`Int8` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    var x: Int8 = 10"},{"text":"    x &*= 5"},{"text":"    // x == 50"},{"text":"    var y: Int8 = 10"},{"text":"    y &*= 50"},{"text":"    // y == -12 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to multiply."},{"text":"  - rhs: The second value to multiply."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&*=(_:_:)"},"pathComponents":["UInt64","&*=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left."},{"text":""},{"text":"The `<<` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a right shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*, resulting in zero."},{"text":"- Using any other value for `rhs` performs a left shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted left by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x << 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x << 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a right shift"},{"text":"with `abs(rhs)`."},{"text":""},{"text":"    let a = x << -3"},{"text":"    // a == 3                         // 0b00000011"},{"text":"    let b = x >> 3"},{"text":"    // b == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"<<(_:_:)"},"pathComponents":["Int32","<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"RHS"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SB","spelling":"BinaryFloatingPoint"}],"docComment":{"lines":[{"text":"Creates an integer from the given floating-point value, if it can be"},{"text":"represented exactly."},{"text":""},{"text":"If the value passed as `source` is not representable exactly, the result"},{"text":"is `nil`. In the following example, the constant `x` is successfully"},{"text":"created from a value of `21.0`, while the attempt to initialize the"},{"text":"constant `y` from `21.5` fails:"},{"text":""},{"text":"    let x = Int(exactly: 21.0)"},{"text":"    // x == Optional(21)"},{"text":"    let y = Int(exactly: 21.5)"},{"text":"    // y == nil"},{"text":""},{"text":"- Parameter source: A floating-point value to convert to an integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc::SYNTHESIZED::s:Su"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["UInt","init(exactly:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryFloatingPoint","rhsPrecise":"s:SB"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"zero"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The zero value."},{"text":""},{"text":"Zero is the identity element for addition. For any value,"},{"text":"`x + .zero == x` and `.zero + x == x`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"zero"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"zero"},"pathComponents":["Int8","zero"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"ExpressibleByIntegerLiteral","rhsPrecise":"s:s27ExpressibleByIntegerLiteralP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE10firstRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:s8RepeatedV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"firstRange(of:in:)"},"pathComponents":["Repeated","firstRange(of:in:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"D"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3lleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"<<=(_:_:)"},"pathComponents":["Int","<<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE2peoiyyxz_xtFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"+=(_:_:)"},"pathComponents":["UInt8","+=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"getLineStart"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"start"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"end"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"contentsEnd"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"for"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS5IndexV","spelling":"Index"}],"docComment":{"lines":[{"text":"Returns by reference the beginning of the first line and"},{"text":"the end of the last line touched by the given range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"start"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">"}],"name":"start"},{"declarationFragments":[{"kind":"identifier","spelling":"end"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">"}],"name":"end"},{"declarationFragments":[{"kind":"identifier","spelling":"contentsEnd"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">"}],"name":"contentsEnd"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"for"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE12getLineStart_3end11contentsEnd3forySpySS5IndexVG_A2Hqd__tSXRd__AG5BoundRtd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"getLineStart"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"end"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"contentsEnd"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"for"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":")"}],"title":"getLineStart(_:end:contentsEnd:for:)"},"pathComponents":["StringProtocol","getLineStart(_:end:contentsEnd:for:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"R.Bound","rhs":"String.Index","rhsPrecise":"s:SS5IndexV"}],"parameters":[{"depth":1,"index":0,"name":"R"}]}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"encode"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"C"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"t"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"forKey"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"key"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedEncodingContainerV","spelling":"KeyedEncodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":".Type) "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation26EncodableWithConfigurationP","spelling":"EncodableWithConfiguration"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation30EncodingConfigurationProvidingP","spelling":"EncodingConfigurationProviding"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"EncodingConfiguration"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"EncodingConfiguration"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"t"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"t"},{"declarationFragments":[{"kind":"identifier","spelling":"key"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedEncodingContainerV","spelling":"KeyedEncodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"}],"internalName":"key","name":"forKey"},{"declarationFragments":[{"kind":"identifier","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":".Type"}],"name":"configuration"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s22KeyedEncodingContainerV10FoundationE6encode_6forKey13configurationyqd___xqd_0_mtKAC26EncodableWithConfigurationRd__AC0bK9ProvidingRd_0_0bK0Qyd_0_AIRtd__r0_lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"encode"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"C"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"forKey"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedEncodingContainerV","spelling":"KeyedEncodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":".Type) "},{"kind":"keyword","spelling":"throws"}],"title":"encode(_:forKey:configuration:)"},"pathComponents":["KeyedEncodingContainer","encode(_:forKey:configuration:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"K","rhs":"CodingKey","rhsPrecise":"s:s9CodingKeyP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"K","rhs":"CodingKey","rhsPrecise":"s:s9CodingKeyP"},{"kind":"conformance","lhs":"T","rhs":"EncodableWithConfiguration","rhsPrecise":"s:10Foundation26EncodableWithConfigurationP"},{"kind":"conformance","lhs":"C","rhs":"EncodingConfigurationProviding","rhsPrecise":"s:10Foundation30EncodingConfigurationProvidingP"},{"kind":"sameType","lhs":"T.EncodingConfiguration","rhs":"C.EncodingConfiguration"}],"parameters":[{"depth":0,"index":0,"name":"K"},{"depth":1,"index":0,"name":"T"},{"depth":1,"index":1,"name":"C"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The little-endian representation of this integer."},{"text":""},{"text":"If necessary, the byte order of this value is reversed from the typical"},{"text":"byte order of this integer type. On a little-endian platform, for any"},{"text":"integer `x`, `x == x.littleEndian`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE12littleEndianxvp::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"littleEndian"},"pathComponents":["Int64","littleEndian"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left."},{"text":""},{"text":"The `<<` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a right shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*, resulting in zero."},{"text":"- Using any other value for `rhs` performs a left shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted left by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x << 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x << 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a right shift"},{"text":"with `abs(rhs)`."},{"text":""},{"text":"    let a = x << -3"},{"text":"    // a == 3                         // 0b00000011"},{"text":"    let b = x >> 3"},{"text":"    // b == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"<<(_:_:)"},"pathComponents":["UInt32","<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"RHS"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SB","spelling":"BinaryFloatingPoint"}],"docComment":{"lines":[{"text":"Creates an integer from the given floating-point value, if it can be"},{"text":"represented exactly."},{"text":""},{"text":"If the value passed as `source` is not representable exactly, the result"},{"text":"is `nil`. In the following example, the constant `x` is successfully"},{"text":"created from a value of `21.0`, while the attempt to initialize the"},{"text":"constant `y` from `21.5` fails:"},{"text":""},{"text":"    let x = Int(exactly: 21.0)"},{"text":"    // x == Optional(21)"},{"text":"    let y = Int(exactly: 21.5)"},{"text":"    // y == nil"},{"text":""},{"text":"- Parameter source: A floating-point value to convert to an integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["Int64","init(exactly:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryFloatingPoint","rhsPrecise":"s:SB"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"capitalized"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"locale"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV","spelling":"Locale"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"docComment":{"lines":[{"text":"Returns a capitalized representation of the string"},{"text":"using the specified locale."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"locale"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV","spelling":"Locale"},{"kind":"text","spelling":"?"}],"internalName":"locale","name":"with"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE11capitalized4withSSAA6LocaleVSg_tF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"capitalized"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV","spelling":"Locale"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"capitalized(with:)"},"pathComponents":["StringProtocol","capitalized(with:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"~"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the inverse of the bits set in the argument."},{"text":""},{"text":"The bitwise NOT operator (`~`) is a prefix operator that returns a value"},{"text":"in which all the bits of its argument are flipped: Bits that are `1` in"},{"text":"the argument are `0` in the result, and bits that are `0` in the argument"},{"text":"are `1` in the result. This is equivalent to the inverse of a set. For"},{"text":"example:"},{"text":""},{"text":"    let x: UInt8 = 5        // 0b00000101"},{"text":"    let notX = ~x           // 0b11111010"},{"text":""},{"text":"Performing a bitwise NOT operation on 0 returns a value with every bit"},{"text":"set to `1`."},{"text":""},{"text":"    let allOnes = ~UInt8.min   // 0b11111111"},{"text":""},{"text":"- Complexity: O(1)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE1topyxxFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"~"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"~(_:)"},"pathComponents":["UInt8","~(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right."},{"text":""},{"text":"The `>>` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a left shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*. An overshift results in `-1` for a"},{"text":"  negative value of `lhs` or `0` for a nonnegative value."},{"text":"- Using any other value for `rhs` performs a right shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted right by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x >> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x >> 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a left shift"},{"text":"using `abs(rhs)`."},{"text":""},{"text":"    let a = x >> -3"},{"text":"    // a == 240                       // 0b11110000"},{"text":"    let b = x << 3"},{"text":"    // b == 240                       // 0b11110000"},{"text":""},{"text":"Right shift operations on negative values \"fill in\" the high bits with"},{"text":"ones instead of zeros."},{"text":""},{"text":"    let q: Int8 = -30                 // 0b11100010"},{"text":"    let r = q >> 2"},{"text":"    // r == -8                        // 0b11111000"},{"text":""},{"text":"    let s = q >> 11"},{"text":"    // s == -1                        // 0b11111111"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":">>(_:_:)"},"pathComponents":["UInt64",">>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"RHS"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"^"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise XOR operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise XOR operation, also known as an exclusive OR operation, results"},{"text":"in a value that has each bit set to `1` where *one or the other but not"},{"text":"both* of its arguments had that bit set to `1`. For example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x ^ y             // 0b00001011"},{"text":"    // z == 11"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1xoiyxx_xtFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"^"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"^(_:_:)"},"pathComponents":["Int64","^(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"littleEndian"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates an integer from its little-endian representation, changing the"},{"text":"byte order if necessary."},{"text":""},{"text":"- Parameter value: A value to use as the little-endian representation of"},{"text":"  the new integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(littleEndian:)"},"pathComponents":["UInt64","init(littleEndian:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bitWidth"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The number of bits in the binary representation of this value."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE03bitB0Sivp::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bitWidth"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"bitWidth"},"pathComponents":["UInt64","bitWidth"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isSigned"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A Boolean value indicating whether this type is a signed integer type."},{"text":""},{"text":"This property is always `false` for unsigned integer types."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUsE8isSignedSbvpZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isSigned"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"isSigned"},"pathComponents":["UInt64","isSigned"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The big-endian representation of this integer."},{"text":""},{"text":"If necessary, the byte order of this value is reversed from the typical"},{"text":"byte order of this integer type. On a big-endian platform, for any"},{"text":"integer `x`, `x == x.bigEndian`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE9bigEndianxvp::SYNTHESIZED::s:Su"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"bigEndian"},"pathComponents":["UInt","bigEndian"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SB","spelling":"BinaryFloatingPoint"}],"docComment":{"lines":[{"text":"Creates an integer from the given floating-point value, rounding toward"},{"text":"zero. Any fractional part of the value passed as `source` is removed."},{"text":""},{"text":"    let x = Int(21.5)"},{"text":"    // x == 21"},{"text":"    let y = Int(-21.5)"},{"text":"    // y == -21"},{"text":""},{"text":"If `source` is outside the bounds of this type after rounding toward"},{"text":"zero, a runtime error may occur."},{"text":""},{"text":"    let z = UInt(-21.5)"},{"text":"    // Error: ...outside the representable range"},{"text":""},{"text":"- Parameter source: A floating-point value to convert to an integer."},{"text":"  `source` must be representable in this type after rounding toward"},{"text":"  zero."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["UInt32","init(_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryFloatingPoint","rhsPrecise":"s:SB"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"caseInsensitiveCompare"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"aString"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation16ComparisonResultO","spelling":"ComparisonResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"docComment":{"lines":[{"text":"Returns the result of invoking `compare:options:` with"},{"text":"`NSCaseInsensitiveSearch` as the only option."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"aString"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"aString"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation16ComparisonResultO","spelling":"ComparisonResult"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE22caseInsensitiveCompareyAA16ComparisonResultOqd__SyRd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"caseInsensitiveCompare"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation16ComparisonResultO","spelling":"ComparisonResult"}],"title":"caseInsensitiveCompare(_:)"},"pathComponents":["StringProtocol","caseInsensitiveCompare(_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE2seoiyyxz_xtFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"-=(_:_:)"},"pathComponents":["UInt8","-=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Multiplies two values and stores the result in the left-hand-side"},{"text":"variable, wrapping any overflow."},{"text":""},{"text":"The masking multiplication assignment operator (`&*=`) silently wraps"},{"text":"any overflow that occurs during the operation. In the following example,"},{"text":"the product of `10` and `50` is greater than the maximum representable"},{"text":"`Int8` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    var x: Int8 = 10"},{"text":"    x &*= 5"},{"text":"    // x == 50"},{"text":"    var y: Int8 = 10"},{"text":"    y &*= 50"},{"text":"    // y == -12 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to multiply."},{"text":"  - rhs: The second value to multiply."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&*=(_:_:)"},"pathComponents":["UInt32","&*=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"},{"declarationFragments":[{"kind":"identifier","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"y"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SxsE1loiySbx_xtFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<(_:_:)"},"pathComponents":["Int8","<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"|"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise OR operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise OR operation results in a value that has each bit set to `1`"},{"text":"where *one or both* of its arguments have that bit set to `1`. For"},{"text":"example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x | y             // 0b00001111"},{"text":"    // z == 15"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1ooiyxx_xtFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"|"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"|(_:_:)"},"pathComponents":["Int64","|(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"from"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPA2A15ContiguousBytesRzrlE04copyE02to4fromySryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexSlRtzr0_lF::SYNTHESIZED::s:SR"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":")"}],"title":"copyBytes(to:from:)"},"pathComponents":["UnsafeBufferPointer","copyBytes(to:from:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"ContiguousBytes","rhsPrecise":"s:10Foundation15ContiguousBytesP"}],"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"ContiguousBytes","rhsPrecise":"s:10Foundation15ContiguousBytesP"},{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"DestinationType"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width, and stores the result in the left-hand-side variable."},{"text":""},{"text":"The `&<<=` operator performs a *masking shift*, where the value used as"},{"text":"`rhs` is masked to produce a value in the range `0..<lhs.bitWidth`. The"},{"text":"shift is performed using this masked value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    var x: UInt8 = 30                 // 0b00011110"},{"text":"    x &<<= 2"},{"text":"    // x == 120                       // 0b01111000"},{"text":""},{"text":"However, if you pass `19` as `rhs`, the method first bitmasks `rhs` to"},{"text":"`3`, and then uses that masked value as the number of bits to shift `lhs`."},{"text":""},{"text":"    var y: UInt8 = 30                 // 0b00011110"},{"text":"    y &<<= 19"},{"text":"    // y == 240                       // 0b11110000"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"&<<=(_:_:)"},"pathComponents":["Int64","&<<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"bigEndian"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates an integer from its big-endian representation, changing the byte"},{"text":"order if necessary."},{"text":""},{"text":"- Parameter value: A value to use as the big-endian representation of the"},{"text":"  new integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(bigEndian:)"},"pathComponents":["Int64","init(bigEndian:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"negate"},{"kind":"text","spelling":"()"}],"docComment":{"lines":[{"text":"Replaces this value with its additive inverse."},{"text":""},{"text":"The following example uses the `negate()` method to negate the value of"},{"text":"an integer `x`:"},{"text":""},{"text":"    var x = 21"},{"text":"    x.negate()"},{"text":"    // x == -21"},{"text":""},{"text":"The resulting value must be representable within the value's type. In"},{"text":"particular, negating a signed, fixed-width integer type's minimum"},{"text":"results in a value that cannot be represented."},{"text":""},{"text":"    var y = Int8.min"},{"text":"    y.negate()"},{"text":"    // Overflow error"}]},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s13SignedNumericPsE6negateyyF::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"negate"},{"kind":"text","spelling":"()"}],"title":"negate()"},"pathComponents":["Int16","negate()"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking left shift operator (`&<<`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking left shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &<< 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &<< 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&<<(_:_:)"},"pathComponents":["Int","&<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"littleEndian"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates an integer from its little-endian representation, changing the"},{"text":"byte order if necessary."},{"text":""},{"text":"- Parameter value: A value to use as the little-endian representation of"},{"text":"  the new integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(littleEndian:)"},"pathComponents":["Int32","init(littleEndian:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bitWidth"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The number of bits in the binary representation of this value."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE03bitB0Sivp::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bitWidth"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"bitWidth"},"pathComponents":["Int32","bitWidth"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise AND operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise AND operation results in a value that has each bit set to `1`"},{"text":"where *both* of its arguments have that bit set to `1`. For example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x & y             // 0b00000100"},{"text":"    // z == 4"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1aoiyxx_xtFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&(_:_:)"},"pathComponents":["UInt","&(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the given number unchanged."},{"text":""},{"text":"You can use the unary plus operator (`+`) to provide symmetry in your"},{"text":"code for positive numbers when also using the unary minus operator."},{"text":""},{"text":"    let x = -21"},{"text":"    let y = +21"},{"text":"    // x == -21"},{"text":"    // y == 21"},{"text":""},{"text":"- Returns: The given argument without any changes."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE1popyxxFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"+(_:)"},"pathComponents":["Int8","+(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right."},{"text":""},{"text":"The `>>` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a left shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*. An overshift results in `-1` for a"},{"text":"  negative value of `lhs` or `0` for a nonnegative value."},{"text":"- Using any other value for `rhs` performs a right shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted right by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x >> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x >> 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a left shift"},{"text":"using `abs(rhs)`."},{"text":""},{"text":"    let a = x >> -3"},{"text":"    // a == 240                       // 0b11110000"},{"text":"    let b = x << 3"},{"text":"    // b == 240                       // 0b11110000"},{"text":""},{"text":"Right shift operations on negative values \"fill in\" the high bits with"},{"text":"ones instead of zeros."},{"text":""},{"text":"    let q: Int8 = -30                 // 0b11100010"},{"text":"    let r = q >> 2"},{"text":"    // r == -8                        // 0b11111000"},{"text":""},{"text":"    let s = q >> 11"},{"text":"    // s == -1                        // 0b11111111"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":">>(_:_:)"},"pathComponents":["Int32",">>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"RHS"}]}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"container"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation18AttributeContainerV","spelling":"AttributeContainer"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SD10FoundationAA18NSAttributedStringC3KeyVRszypRs_rlEySDyAEypGAA18AttributeContainerVcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation18AttributeContainerV","spelling":"AttributeContainer"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Dictionary","init(_:)"],"swiftExtension":{"constraints":[{"kind":"sameType","lhs":"Key","rhs":"NSAttributedString.Key","rhsPrecise":"s:10Foundation18NSAttributedStringC3KeyV"},{"kind":"sameType","lhs":"Value","rhs":"Any"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"sameType","lhs":"Key","rhs":"NSAttributedString.Key","rhsPrecise":"s:10Foundation18NSAttributedStringC3KeyV"},{"kind":"sameType","lhs":"Value","rhs":"Any"}],"parameters":[{"depth":0,"index":0,"name":"Key"},{"depth":0,"index":1,"name":"Value"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"quotientAndRemainder"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"dividingBy"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> (quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Returns the quotient and remainder of this value divided by the given"},{"text":"value."},{"text":""},{"text":"Use this method to calculate the quotient and remainder of a division at"},{"text":"the same time."},{"text":""},{"text":"    let x = 1_000_000"},{"text":"    let (q, r) = x.quotientAndRemainder(dividingBy: 933)"},{"text":"    // q == 1071"},{"text":"    // r == 757"},{"text":""},{"text":"- Parameter rhs: The value to divide this value by."},{"text":"- Returns: A tuple containing the quotient and remainder of this value"},{"text":"  divided by `rhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"rhs","name":"dividingBy"}],"returns":[{"kind":"text","spelling":"(quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"quotientAndRemainder"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"dividingBy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> (quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"quotientAndRemainder(dividingBy:)"},"pathComponents":["Int64","quotientAndRemainder(dividingBy:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the two given values are not"},{"text":"equal."},{"text":""},{"text":"You can check the inequality of instances of any `BinaryInteger` types"},{"text":"using the not-equal-to operator (`!=`). For example, you can test"},{"text":"whether the first `UInt8` value in a string's UTF-8 encoding is not"},{"text":"equal to the first `UInt32` value in its Unicode scalar view:"},{"text":""},{"text":"    let gameName = \"Red Light, Green Light\""},{"text":"    if let firstUTF8 = gameName.utf8.first,"},{"text":"        let firstScalar = gameName.unicodeScalars.first?.value {"},{"text":"        print(\"First code values are different: \\(firstUTF8 != firstScalar)\")"},{"text":"    }"},{"text":"    // Prints \"First code values are different: false\""},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2neoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"!=(_:_:)"},"pathComponents":["Int","!=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"quotientAndRemainder"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"dividingBy"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> (quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Returns the quotient and remainder of this value divided by the given"},{"text":"value."},{"text":""},{"text":"Use this method to calculate the quotient and remainder of a division at"},{"text":"the same time."},{"text":""},{"text":"    let x = 1_000_000"},{"text":"    let (q, r) = x.quotientAndRemainder(dividingBy: 933)"},{"text":"    // q == 1071"},{"text":"    // r == 757"},{"text":""},{"text":"- Parameter rhs: The value to divide this value by."},{"text":"- Returns: A tuple containing the quotient and remainder of this value"},{"text":"  divided by `rhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"rhs","name":"dividingBy"}],"returns":[{"kind":"text","spelling":"(quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"quotientAndRemainder"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"dividingBy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> (quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"quotientAndRemainder(dividingBy:)"},"pathComponents":["Int32","quotientAndRemainder(dividingBy:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right."},{"text":""},{"text":"The `>>` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a left shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*. An overshift results in `-1` for a"},{"text":"  negative value of `lhs` or `0` for a nonnegative value."},{"text":"- Using any other value for `rhs` performs a right shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted right by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x >> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x >> 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a left shift"},{"text":"using `abs(rhs)`."},{"text":""},{"text":"    let a = x >> -3"},{"text":"    // a == 240                       // 0b11110000"},{"text":"    let b = x << 3"},{"text":"    // b == 240                       // 0b11110000"},{"text":""},{"text":"Right shift operations on negative values \"fill in\" the high bits with"},{"text":"ones instead of zeros."},{"text":""},{"text":"    let q: Int8 = -30                 // 0b11100010"},{"text":"    let r = q >> 2"},{"text":"    // r == -8                        // 0b11111000"},{"text":""},{"text":"    let s = q >> 11"},{"text":"    // s == -1                        // 0b11111111"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":">>(_:_:)"},"pathComponents":["Int64",">>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"RHS"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"rangeOfCharacter"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"aSet"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12CharacterSetV","spelling":"CharacterSet"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"options"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"mask"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE14CompareOptionsa","spelling":"CompareOptions"},{"kind":"text","spelling":" = [], "},{"kind":"externalParam","spelling":"range"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"aRange"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? = nil) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"docComment":{"lines":[{"text":"Finds and returns the range in the `String` of the first"},{"text":"character from a given character set found in a given range with"},{"text":"given options."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"aSet"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12CharacterSetV","spelling":"CharacterSet"}],"internalName":"aSet","name":"from"},{"declarationFragments":[{"kind":"identifier","spelling":"mask"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE14CompareOptionsa","spelling":"CompareOptions"}],"internalName":"mask","name":"options"},{"declarationFragments":[{"kind":"identifier","spelling":"aRange"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"internalName":"aRange","name":"range"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE16rangeOfCharacter4from7options0B0SnySS5IndexVGSgAA0D3SetV_AA8NSStringC14CompareOptionsVAItF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"rangeOfCharacter"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12CharacterSetV","spelling":"CharacterSet"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"options"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE14CompareOptionsa","spelling":"CompareOptions"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"rangeOfCharacter(from:options:range:)"},"pathComponents":["StringProtocol","rangeOfCharacter(from:options:range:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"^"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise XOR operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise XOR operation, also known as an exclusive OR operation, results"},{"text":"in a value that has each bit set to `1` where *one or the other but not"},{"text":"both* of its arguments had that bit set to `1`. For example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x ^ y             // 0b00001011"},{"text":"    // z == 11"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1xoiyxx_xtFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"^"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"^(_:_:)"},"pathComponents":["UInt64","^(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise AND operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise AND operation results in a value that has each bit set to `1`"},{"text":"where *both* of its arguments have that bit set to `1`. For example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x & y             // 0b00000100"},{"text":"    // z == 4"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1aoiyxx_xtFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&(_:_:)"},"pathComponents":["UInt32","&(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"littleEndian"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates an integer from its little-endian representation, changing the"},{"text":"byte order if necessary."},{"text":""},{"text":"- Parameter value: A value to use as the little-endian representation of"},{"text":"  the new integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(littleEndian:)"},"pathComponents":["Int64","init(littleEndian:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bitWidth"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The number of bits in the binary representation of this value."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE03bitB0Sivp::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bitWidth"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"bitWidth"},"pathComponents":["Int64","bitWidth"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"bigEndian"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates an integer from its big-endian representation, changing the byte"},{"text":"order if necessary."},{"text":""},{"text":"- Parameter value: A value to use as the big-endian representation of the"},{"text":"  new integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(bigEndian:)"},"pathComponents":["Int32","init(bigEndian:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"commonPrefix"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"aString"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"options"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE14CompareOptionsa","spelling":"CompareOptions"},{"kind":"text","spelling":" = []) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"docComment":{"lines":[{"text":"Returns a string containing characters this string and the"},{"text":"given string have in common, starting from the beginning of each"},{"text":"up to the first characters that aren't equivalent."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"aString"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"aString","name":"with"},{"declarationFragments":[{"kind":"identifier","spelling":"options"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE14CompareOptionsa","spelling":"CompareOptions"}],"name":"options"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE12commonPrefix4with7optionsSSqd___AA8NSStringC14CompareOptionsVtSyRd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"commonPrefix"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"options"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE14CompareOptionsa","spelling":"CompareOptions"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"commonPrefix(with:options:)"},"pathComponents":["StringProtocol","commonPrefix(with:options:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"}],"internalName":"ptr","name":"to"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSw_tF::SYNTHESIZED::s:SW"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:)"},"pathComponents":["UnsafeRawBufferPointer","copyBytes(to:)"],"swiftExtension":{"extendedModule":"Foundation"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"|"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise OR operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise OR operation results in a value that has each bit set to `1`"},{"text":"where *one or both* of its arguments have that bit set to `1`. For"},{"text":"example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x | y             // 0b00001111"},{"text":"    // z == 15"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1ooiyxx_xtFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"|"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"|(_:_:)"},"pathComponents":["Int32","|(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The little-endian representation of this integer."},{"text":""},{"text":"If necessary, the byte order of this value is reversed from the typical"},{"text":"byte order of this integer type. On a little-endian platform, for any"},{"text":"integer `x`, `x == x.littleEndian`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE12littleEndianxvp::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"littleEndian"},"pathComponents":["UInt64","littleEndian"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Multiplies two values and stores the result in the left-hand-side"},{"text":"variable, wrapping any overflow."},{"text":""},{"text":"The masking multiplication assignment operator (`&*=`) silently wraps"},{"text":"any overflow that occurs during the operation. In the following example,"},{"text":"the product of `10` and `50` is greater than the maximum representable"},{"text":"`Int8` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    var x: Int8 = 10"},{"text":"    x &*= 5"},{"text":"    // x == 50"},{"text":"    var y: Int8 = 10"},{"text":"    y &*= 50"},{"text":"    // y == -12 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to multiply."},{"text":"  - rhs: The second value to multiply."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&*=(_:_:)"},"pathComponents":["UInt","&*=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width, and stores the result in the left-hand-side variable."},{"text":""},{"text":"The `&<<=` operator performs a *masking shift*, where the value used as"},{"text":"`rhs` is masked to produce a value in the range `0..<lhs.bitWidth`. The"},{"text":"shift is performed using this masked value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    var x: UInt8 = 30                 // 0b00011110"},{"text":"    x &<<= 2"},{"text":"    // x == 120                       // 0b01111000"},{"text":""},{"text":"However, if you pass `19` as `rhs`, the method first bitmasks `rhs` to"},{"text":"`3`, and then uses that masked value as the number of bits to shift `lhs`."},{"text":""},{"text":"    var y: UInt8 = 30                 // 0b00011110"},{"text":"    y &<<= 19"},{"text":"    // y == 240                       // 0b11110000"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"&<<=(_:_:)"},"pathComponents":["Int32","&<<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SB","spelling":"BinaryFloatingPoint"}],"docComment":{"lines":[{"text":"Creates an integer from the given floating-point value, if it can be"},{"text":"represented exactly."},{"text":""},{"text":"If the value passed as `source` is not representable exactly, the result"},{"text":"is `nil`. In the following example, the constant `x` is successfully"},{"text":"created from a value of `21.0`, while the attempt to initialize the"},{"text":"constant `y` from `21.5` fails:"},{"text":""},{"text":"    let x = Int(exactly: 21.0)"},{"text":"    // x == Optional(21)"},{"text":"    let y = Int(exactly: 21.5)"},{"text":"    // y == nil"},{"text":""},{"text":"- Parameter source: A floating-point value to convert to an integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["UInt64","init(exactly:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryFloatingPoint","rhsPrecise":"s:SB"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SB","spelling":"BinaryFloatingPoint"}],"docComment":{"lines":[{"text":"Creates an integer from the given floating-point value, rounding toward"},{"text":"zero. Any fractional part of the value passed as `source` is removed."},{"text":""},{"text":"    let x = Int(21.5)"},{"text":"    // x == 21"},{"text":"    let y = Int(-21.5)"},{"text":"    // y == -21"},{"text":""},{"text":"If `source` is outside the bounds of this type after rounding toward"},{"text":"zero, a runtime error may occur."},{"text":""},{"text":"    let z = UInt(-21.5)"},{"text":"    // Error: ...outside the representable range"},{"text":""},{"text":"- Parameter source: A floating-point value to convert to an integer."},{"text":"  `source` must be representable in this type after rounding toward"},{"text":"  zero."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc::SYNTHESIZED::s:Su"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["UInt","init(_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryFloatingPoint","rhsPrecise":"s:SB"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"operand"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the additive inverse of the specified value."},{"text":""},{"text":"The negation operator (prefix `-`) returns the additive inverse of its"},{"text":"argument."},{"text":""},{"text":"    let x = 21"},{"text":"    let y = -x"},{"text":"    // y == -21"},{"text":""},{"text":"The resulting value must be representable in the same type as the"},{"text":"argument. In particular, negating a signed, fixed-width integer type's"},{"text":"minimum results in a value that cannot be represented."},{"text":""},{"text":"    let z = -Int8.min"},{"text":"    // Overflow error"},{"text":""},{"text":"- Returns: The additive inverse of the argument."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"operand"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"operand"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s13SignedNumericPsE1sopyxxFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"-(_:)"},"pathComponents":["Int8","-(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the given number unchanged."},{"text":""},{"text":"You can use the unary plus operator (`+`) to provide symmetry in your"},{"text":"code for positive numbers when also using the unary minus operator."},{"text":""},{"text":"    let x = -21"},{"text":"    let y = +21"},{"text":"    // x == -21"},{"text":"    // y == 21"},{"text":""},{"text":"- Returns: The given argument without any changes."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE1popyxxFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"+(_:)"},"pathComponents":["UInt16","+(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The big-endian representation of this integer."},{"text":""},{"text":"If necessary, the byte order of this value is reversed from the typical"},{"text":"byte order of this integer type. On a big-endian platform, for any"},{"text":"integer `x`, `x == x.bigEndian`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE9bigEndianxvp::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"bigEndian"},"pathComponents":["UInt32","bigEndian"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE10firstRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:SR"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"firstRange(of:in:)"},"pathComponents":["UnsafeBufferPointer","firstRange(of:in:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"D"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"^"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise XOR operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise XOR operation, also known as an exclusive OR operation, results"},{"text":"in a value that has each bit set to `1` where *one or the other but not"},{"text":"both* of its arguments had that bit set to `1`. For example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x ^ y             // 0b00001011"},{"text":"    // z == 11"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1xoiyxx_xtFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"^"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"^(_:_:)"},"pathComponents":["Int32","^(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"quotientAndRemainder"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"dividingBy"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> (quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Returns the quotient and remainder of this value divided by the given"},{"text":"value."},{"text":""},{"text":"Use this method to calculate the quotient and remainder of a division at"},{"text":"the same time."},{"text":""},{"text":"    let x = 1_000_000"},{"text":"    let (q, r) = x.quotientAndRemainder(dividingBy: 933)"},{"text":"    // q == 1071"},{"text":"    // r == 757"},{"text":""},{"text":"- Parameter rhs: The value to divide this value by."},{"text":"- Returns: A tuple containing the quotient and remainder of this value"},{"text":"  divided by `rhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"rhs","name":"dividingBy"}],"returns":[{"kind":"text","spelling":"(quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"quotientAndRemainder"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"dividingBy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> (quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"quotientAndRemainder(dividingBy:)"},"pathComponents":["UInt64","quotientAndRemainder(dividingBy:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9lastRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:SW"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"lastRange(of:)"},"pathComponents":["UnsafeRawBufferPointer","lastRange(of:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"D"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"zero"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The zero value."},{"text":""},{"text":"Zero is the identity element for addition. For any value,"},{"text":"`x + .zero == x` and `.zero + x == x`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"zero"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"zero"},"pathComponents":["Int16","zero"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"ExpressibleByIntegerLiteral","rhsPrecise":"s:s27ExpressibleByIntegerLiteralP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Calculates the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width, and stores the result in the left-hand-side variable."},{"text":""},{"text":"The `&>>=` operator performs a *masking shift*, where the value passed as"},{"text":"`rhs` is masked to produce a value in the range `0..<lhs.bitWidth`. The"},{"text":"shift is performed using this masked value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    var x: UInt8 = 30                 // 0b00011110"},{"text":"    x &>>= 2"},{"text":"    // x == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `19` as `rhs`, the operation first bitmasks `rhs` to"},{"text":"`3`, and then uses that masked value as the number of bits to shift `lhs`."},{"text":""},{"text":"    var y: UInt8 = 30                 // 0b00011110"},{"text":"    y &>>= 19"},{"text":"    // y == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"&>>=(_:_:)"},"pathComponents":["Int","&>>=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width, and stores the result in the left-hand-side variable."},{"text":""},{"text":"The `&<<=` operator performs a *masking shift*, where the value used as"},{"text":"`rhs` is masked to produce a value in the range `0..<lhs.bitWidth`. The"},{"text":"shift is performed using this masked value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    var x: UInt8 = 30                 // 0b00011110"},{"text":"    x &<<= 2"},{"text":"    // x == 120                       // 0b01111000"},{"text":""},{"text":"However, if you pass `19` as `rhs`, the method first bitmasks `rhs` to"},{"text":"`3`, and then uses that masked value as the number of bits to shift `lhs`."},{"text":""},{"text":"    var y: UInt8 = 30                 // 0b00011110"},{"text":"    y &<<= 19"},{"text":"    // y == 240                       // 0b11110000"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"&<<=(_:_:)"},"pathComponents":["UInt64","&<<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SB","spelling":"BinaryFloatingPoint"}],"docComment":{"lines":[{"text":"Creates an integer from the given floating-point value, if it can be"},{"text":"represented exactly."},{"text":""},{"text":"If the value passed as `source` is not representable exactly, the result"},{"text":"is `nil`. In the following example, the constant `x` is successfully"},{"text":"created from a value of `21.0`, while the attempt to initialize the"},{"text":"constant `y` from `21.5` fails:"},{"text":""},{"text":"    let x = Int(exactly: 21.0)"},{"text":"    // x == Optional(21)"},{"text":"    let y = Int(exactly: 21.5)"},{"text":"    // y == nil"},{"text":""},{"text":"- Parameter source: A floating-point value to convert to an integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["Int32","init(exactly:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryFloatingPoint","rhsPrecise":"s:SB"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"},{"declarationFragments":[{"kind":"identifier","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"y"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SxsE1loiySbx_xtFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<(_:_:)"},"pathComponents":["UInt16","<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"|"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise OR operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise OR operation results in a value that has each bit set to `1`"},{"text":"where *one or both* of its arguments have that bit set to `1`. For"},{"text":"example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x | y             // 0b00001111"},{"text":"    // z == 15"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1ooiyxx_xtFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"|"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"|(_:_:)"},"pathComponents":["UInt64","|(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withUnsafeBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ResultType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:SW","spelling":"UnsafeRawBufferPointer"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ResultType"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ResultType"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:SW","spelling":"UnsafeRawBufferPointer"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ResultType"}],"name":"body"}],"returns":[{"kind":"typeIdentifier","spelling":"ResultType"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s5SliceV10FoundationAC15ContiguousBytesRzrlE010withUnsafeD0yqd__qd__SWKXEKlF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withUnsafeBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ResultType"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","preciseIdentifier":"s:SW","spelling":"UnsafeRawBufferPointer"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ResultType"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ResultType"}],"title":"withUnsafeBytes(_:)"},"pathComponents":["Slice","withUnsafeBytes(_:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Base","rhs":"ContiguousBytes","rhsPrecise":"s:10Foundation15ContiguousBytesP"},{"kind":"conformance","lhs":"Base","rhs":"Collection","rhsPrecise":"s:Sl"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Base","rhs":"ContiguousBytes","rhsPrecise":"s:10Foundation15ContiguousBytesP"},{"kind":"conformance","lhs":"Base","rhs":"Collection","rhsPrecise":"s:Sl"}],"parameters":[{"depth":0,"index":0,"name":"Base"},{"depth":1,"index":0,"name":"ResultType"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The little-endian representation of this integer."},{"text":""},{"text":"If necessary, the byte order of this value is reversed from the typical"},{"text":"byte order of this integer type. On a little-endian platform, for any"},{"text":"integer `x`, `x == x.littleEndian`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE12littleEndianxvp::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"littleEndian"},"pathComponents":["Int32","littleEndian"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"bigEndian"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates an integer from its big-endian representation, changing the byte"},{"text":"order if necessary."},{"text":""},{"text":"- Parameter value: A value to use as the big-endian representation of the"},{"text":"  new integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(bigEndian:)"},"pathComponents":["UInt64","init(bigEndian:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left."},{"text":""},{"text":"The `<<` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a right shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*, resulting in zero."},{"text":"- Using any other value for `rhs` performs a left shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted left by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x << 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x << 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a right shift"},{"text":"with `abs(rhs)`."},{"text":""},{"text":"    let a = x << -3"},{"text":"    // a == 3                         // 0b00000011"},{"text":"    let b = x >> 3"},{"text":"    // b == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"<<(_:_:)"},"pathComponents":["UInt","<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"RHS"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"availableStringEncodings"},{"kind":"text","spelling":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":"] { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"An array of the encodings that strings support in the application's"},{"text":"environment."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE24availableStringEncodingsSaySSAAE8EncodingVGvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"availableStringEncodings"},{"kind":"text","spelling":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":"]"}],"title":"availableStringEncodings"},"pathComponents":["String","availableStringEncodings"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"rangeOfComposedCharacterSequence"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"at"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"anIndex"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns the range in the `String` of the composed"},{"text":"character sequence located at a given index."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"anIndex"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"}],"internalName":"anIndex","name":"at"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE32rangeOfComposedCharacterSequence2atSnySS5IndexVGAE_tF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"rangeOfComposedCharacterSequence"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"at"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">"}],"title":"rangeOfComposedCharacterSequence(at:)"},"pathComponents":["StringProtocol","rangeOfComposedCharacterSequence(at:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left."},{"text":""},{"text":"The `<<` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a right shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*, resulting in zero."},{"text":"- Using any other value for `rhs` performs a left shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted left by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x << 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x << 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a right shift"},{"text":"with `abs(rhs)`."},{"text":""},{"text":"    let a = x << -3"},{"text":"    // a == 3                         // 0b00000011"},{"text":"    let b = x >> 3"},{"text":"    // b == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"<<(_:_:)"},"pathComponents":["Int64","<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"RHS"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"name":"count"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSw_SitF::SYNTHESIZED::s:SW"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:count:)"},"pathComponents":["UnsafeRawBufferPointer","copyBytes(to:count:)"],"swiftExtension":{"extendedModule":"Foundation"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left."},{"text":""},{"text":"The `<<` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a right shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*, resulting in zero."},{"text":"- Using any other value for `rhs` performs a left shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted left by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x << 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x << 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a right shift"},{"text":"with `abs(rhs)`."},{"text":""},{"text":"    let a = x << -3"},{"text":"    // a == 3                         // 0b00000011"},{"text":"    let b = x >> 3"},{"text":"    // b == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"<<(_:_:)"},"pathComponents":["Int","<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SB","spelling":"BinaryFloatingPoint"}],"docComment":{"lines":[{"text":"Creates an integer from the given floating-point value, if it can be"},{"text":"represented exactly."},{"text":""},{"text":"If the value passed as `source` is not representable exactly, the result"},{"text":"is `nil`. In the following example, the constant `x` is successfully"},{"text":"created from a value of `21.0`, while the attempt to initialize the"},{"text":"constant `y` from `21.5` fails:"},{"text":""},{"text":"    let x = Int(exactly: 21.0)"},{"text":"    // x == Optional(21)"},{"text":"    let y = Int(exactly: 21.5)"},{"text":"    // y == nil"},{"text":""},{"text":"- Parameter source: A floating-point value to convert to an integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["UInt32","init(exactly:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryFloatingPoint","rhsPrecise":"s:SB"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compare"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"aString"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"options"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"mask"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE14CompareOptionsa","spelling":"CompareOptions"},{"kind":"text","spelling":" = [], "},{"kind":"externalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? = nil, "},{"kind":"externalParam","spelling":"locale"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV","spelling":"Locale"},{"kind":"text","spelling":"? = nil) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation16ComparisonResultO","spelling":"ComparisonResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"docComment":{"lines":[{"text":"Compares the string using the specified options and"},{"text":"returns the lexical ordering for the range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"aString"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"aString"},{"declarationFragments":[{"kind":"identifier","spelling":"mask"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE14CompareOptionsa","spelling":"CompareOptions"}],"internalName":"mask","name":"options"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"name":"range"},{"declarationFragments":[{"kind":"identifier","spelling":"locale"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV","spelling":"Locale"},{"kind":"text","spelling":"?"}],"name":"locale"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation16ComparisonResultO","spelling":"ComparisonResult"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE7compare_7options5range6localeAA16ComparisonResultOqd___AA8NSStringC14CompareOptionsVSnySS5IndexVGSgAA6LocaleVSgtSyRd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compare"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"options"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE14CompareOptionsa","spelling":"CompareOptions"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?, "},{"kind":"externalParam","spelling":"locale"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV","spelling":"Locale"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation16ComparisonResultO","spelling":"ComparisonResult"}],"title":"compare(_:options:range:locale:)"},"pathComponents":["StringProtocol","compare(_:options:range:locale:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The little-endian representation of this integer."},{"text":""},{"text":"If necessary, the byte order of this value is reversed from the typical"},{"text":"byte order of this integer type. On a little-endian platform, for any"},{"text":"integer `x`, `x == x.littleEndian`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE12littleEndianxvp::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"littleEndian"},"pathComponents":["UInt32","littleEndian"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isMultiple"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"other","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZss17FixedWidthIntegerRzrlE10isMultiple2ofSbx_tF::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isMultiple"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"isMultiple(of:)"},"pathComponents":["Int32","isMultiple(of:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SB","spelling":"BinaryFloatingPoint"}],"docComment":{"lines":[{"text":"Creates an integer from the given floating-point value, rounding toward"},{"text":"zero. Any fractional part of the value passed as `source` is removed."},{"text":""},{"text":"    let x = Int(21.5)"},{"text":"    // x == 21"},{"text":"    let y = Int(-21.5)"},{"text":"    // y == -21"},{"text":""},{"text":"If `source` is outside the bounds of this type after rounding toward"},{"text":"zero, a runtime error may occur."},{"text":""},{"text":"    let z = UInt(-21.5)"},{"text":"    // Error: ...outside the representable range"},{"text":""},{"text":"- Parameter source: A floating-point value to convert to an integer."},{"text":"  `source` must be representable in this type after rounding toward"},{"text":"  zero."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Int64","init(_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryFloatingPoint","rhsPrecise":"s:SB"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise AND operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise AND operation results in a value that has each bit set to `1`"},{"text":"where *both* of its arguments have that bit set to `1`. For example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x & y             // 0b00000100"},{"text":"    // z == 4"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1aoiyxx_xtFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&(_:_:)"},"pathComponents":["UInt64","&(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The big-endian representation of this integer."},{"text":""},{"text":"If necessary, the byte order of this value is reversed from the typical"},{"text":"byte order of this integer type. On a big-endian platform, for any"},{"text":"integer `x`, `x == x.bigEndian`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE9bigEndianxvp::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"bigEndian"},"pathComponents":["Int32","bigEndian"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isMultiple"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"other","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE10isMultiple2ofSbx_tF::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isMultiple"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"isMultiple(of:)"},"pathComponents":["UInt8","isMultiple(of:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"^"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise XOR operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise XOR operation, also known as an exclusive OR operation, results"},{"text":"in a value that has each bit set to `1` where *one or the other but not"},{"text":"both* of its arguments had that bit set to `1`. For example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x ^ y             // 0b00001011"},{"text":"    // z == 11"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1xoiyxx_xtFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"^"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"^(_:_:)"},"pathComponents":["UInt32","^(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the given integer."},{"text":""},{"text":"Use this initializer to convert from another integer type when you know"},{"text":"the value is within the bounds of this type. Passing a value that can't"},{"text":"be represented in this type results in a runtime error."},{"text":""},{"text":"In the following example, the constant `y` is successfully created from"},{"text":"`x`, an `Int` instance with a value of `100`. Because the `Int8` type"},{"text":"can represent `127` at maximum, the attempt to create `z` with a value"},{"text":"of `1000` results in a runtime error."},{"text":""},{"text":"    let x = 100"},{"text":"    let y = Int8(x)"},{"text":"    // y == 100"},{"text":"    let z = Int8(x * 10)"},{"text":"    // Error: Not enough bits to represent the given value"},{"text":""},{"text":"- Parameter source: A value to convert to this type of integer. The value"},{"text":"  passed as `source` must be representable in this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc::SYNTHESIZED::s:Si"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Int","init(_:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"},{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"zero"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The zero value."},{"text":""},{"text":"Zero is the identity element for addition. For any value,"},{"text":"`x + .zero == x` and `.zero + x == x`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"zero"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"zero"},"pathComponents":["UInt16","zero"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"ExpressibleByIntegerLiteral","rhsPrecise":"s:s27ExpressibleByIntegerLiteralP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"bigEndian"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates an integer from its big-endian representation, changing the byte"},{"text":"order if necessary."},{"text":""},{"text":"- Parameter value: A value to use as the big-endian representation of the"},{"text":"  new integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(bigEndian:)"},"pathComponents":["UInt32","init(bigEndian:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lineRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"for"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"aRange"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS5IndexV","spelling":"Index"}],"docComment":{"lines":[{"text":"Returns the range of characters representing the line or lines"},{"text":"containing a given range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"aRange"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"aRange","name":"for"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE9lineRange3forSnySS5IndexVGqd___tSXRd__AE5BoundRtd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lineRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"for"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">"}],"title":"lineRange(for:)"},"pathComponents":["StringProtocol","lineRange(for:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"R.Bound","rhs":"String.Index","rhsPrecise":"s:SS5IndexV"}],"parameters":[{"depth":1,"index":0,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9lastRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:SR"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"lastRange(of:in:)"},"pathComponents":["UnsafeBufferPointer","lastRange(of:in:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"D"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"|"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise OR operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise OR operation results in a value that has each bit set to `1`"},{"text":"where *one or both* of its arguments have that bit set to `1`. For"},{"text":"example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x | y             // 0b00001111"},{"text":"    // z == 15"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1ooiyxx_xtFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"|"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"|(_:_:)"},"pathComponents":["UInt32","|(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Multiplies two values and stores the result in the left-hand-side"},{"text":"variable, wrapping any overflow."},{"text":""},{"text":"The masking multiplication assignment operator (`&*=`) silently wraps"},{"text":"any overflow that occurs during the operation. In the following example,"},{"text":"the product of `10` and `50` is greater than the maximum representable"},{"text":"`Int8` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    var x: Int8 = 10"},{"text":"    x &*= 5"},{"text":"    // x == 50"},{"text":"    var y: Int8 = 10"},{"text":"    y &*= 50"},{"text":"    // y == -12 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to multiply."},{"text":"  - rhs: The second value to multiply."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&*=(_:_:)"},"pathComponents":["Int64","&*=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width, and stores the result in the left-hand-side variable."},{"text":""},{"text":"The `&<<=` operator performs a *masking shift*, where the value used as"},{"text":"`rhs` is masked to produce a value in the range `0..<lhs.bitWidth`. The"},{"text":"shift is performed using this masked value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    var x: UInt8 = 30                 // 0b00011110"},{"text":"    x &<<= 2"},{"text":"    // x == 120                       // 0b01111000"},{"text":""},{"text":"However, if you pass `19` as `rhs`, the method first bitmasks `rhs` to"},{"text":"`3`, and then uses that masked value as the number of bits to shift `lhs`."},{"text":""},{"text":"    var y: UInt8 = 30                 // 0b00011110"},{"text":"    y &<<= 19"},{"text":"    // y == 240                       // 0b11110000"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"&<<=(_:_:)"},"pathComponents":["UInt32","&<<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A textual representation of this value."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE11descriptionSSvp::SYNTHESIZED::s:Si"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"description"},"pathComponents":["Int","description"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"},{"declarationFragments":[{"kind":"identifier","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"y"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SxsE1loiySbx_xtFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<(_:_:)"},"pathComponents":["Int16","<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"encodeIfPresent"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"C"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"t"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"forKey"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"key"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedEncodingContainerV","spelling":"KeyedEncodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":".Type) "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation26EncodableWithConfigurationP","spelling":"EncodableWithConfiguration"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation30EncodingConfigurationProvidingP","spelling":"EncodingConfigurationProviding"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"EncodingConfiguration"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"EncodingConfiguration"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"t"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"?"}],"name":"t"},{"declarationFragments":[{"kind":"identifier","spelling":"key"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedEncodingContainerV","spelling":"KeyedEncodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"}],"internalName":"key","name":"forKey"},{"declarationFragments":[{"kind":"identifier","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":".Type"}],"name":"configuration"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s22KeyedEncodingContainerV10FoundationE15encodeIfPresent_6forKey13configurationyqd__Sg_xqd_0_mtKAC26EncodableWithConfigurationRd__AC0bM9ProvidingRd_0_0bM0Qyd_0_AJRtd__r0_lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"encodeIfPresent"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"C"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"forKey"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedEncodingContainerV","spelling":"KeyedEncodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":".Type) "},{"kind":"keyword","spelling":"throws"}],"title":"encodeIfPresent(_:forKey:configuration:)"},"pathComponents":["KeyedEncodingContainer","encodeIfPresent(_:forKey:configuration:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"K","rhs":"CodingKey","rhsPrecise":"s:s9CodingKeyP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"K","rhs":"CodingKey","rhsPrecise":"s:s9CodingKeyP"},{"kind":"conformance","lhs":"T","rhs":"EncodableWithConfiguration","rhsPrecise":"s:10Foundation26EncodableWithConfigurationP"},{"kind":"conformance","lhs":"C","rhs":"EncodingConfigurationProviding","rhsPrecise":"s:10Foundation30EncodingConfigurationProvidingP"},{"kind":"sameType","lhs":"T.EncodingConfiguration","rhs":"C.EncodingConfiguration"}],"parameters":[{"depth":0,"index":0,"name":"K"},{"depth":1,"index":0,"name":"T"},{"depth":1,"index":1,"name":"C"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the given number unchanged."},{"text":""},{"text":"You can use the unary plus operator (`+`) to provide symmetry in your"},{"text":"code for positive numbers when also using the unary minus operator."},{"text":""},{"text":"    let x = -21"},{"text":"    let y = +21"},{"text":"    // x == -21"},{"text":"    // y == 21"},{"text":""},{"text":"- Returns: The given argument without any changes."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE1popyxxFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"+(_:)"},"pathComponents":["Int16","+(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"quotientAndRemainder"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"dividingBy"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> (quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Returns the quotient and remainder of this value divided by the given"},{"text":"value."},{"text":""},{"text":"Use this method to calculate the quotient and remainder of a division at"},{"text":"the same time."},{"text":""},{"text":"    let x = 1_000_000"},{"text":"    let (q, r) = x.quotientAndRemainder(dividingBy: 933)"},{"text":"    // q == 1071"},{"text":"    // r == 757"},{"text":""},{"text":"- Parameter rhs: The value to divide this value by."},{"text":"- Returns: A tuple containing the quotient and remainder of this value"},{"text":"  divided by `rhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"rhs","name":"dividingBy"}],"returns":[{"kind":"text","spelling":"(quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"quotientAndRemainder"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"dividingBy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> (quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"quotientAndRemainder(dividingBy:)"},"pathComponents":["UInt32","quotientAndRemainder(dividingBy:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Regions"},{"kind":"text","spelling":" = ["},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Regions"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"SubSequence"},{"kind":"text","spelling":"]"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s5SliceV10FoundationAC12DataProtocolRzrlE7Regionsa"},"kind":{"displayName":"Type Alias","identifier":"swift.typealias"},"names":{"navigator":[{"kind":"identifier","spelling":"Regions"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Regions"}],"title":"Slice.Regions"},"pathComponents":["Slice","Regions"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Base","rhs":"DataProtocol","rhsPrecise":"s:10Foundation12DataProtocolP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Base","rhs":"DataProtocol","rhsPrecise":"s:10Foundation12DataProtocolP"}],"parameters":[{"depth":0,"index":0,"name":"Base"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking right shift operator (`&>>`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking right shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &>> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &>> 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&>>(_:_:)"},"pathComponents":["Int","&>>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise AND operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise AND operation results in a value that has each bit set to `1`"},{"text":"where *both* of its arguments have that bit set to `1`. For example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x & y             // 0b00000100"},{"text":"    // z == 4"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1aoiyxx_xtFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&(_:_:)"},"pathComponents":["Int32","&(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"littleEndian"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates an integer from its little-endian representation, changing the"},{"text":"byte order if necessary."},{"text":""},{"text":"- Parameter value: A value to use as the little-endian representation of"},{"text":"  the new integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc::SYNTHESIZED::s:Su"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(littleEndian:)"},"pathComponents":["UInt","init(littleEndian:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The big-endian representation of this integer."},{"text":""},{"text":"If necessary, the byte order of this value is reversed from the typical"},{"text":"byte order of this integer type. On a big-endian platform, for any"},{"text":"integer `x`, `x == x.bigEndian`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE9bigEndianxvp::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"bigEndian"},"pathComponents":["UInt64","bigEndian"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"negate"},{"kind":"text","spelling":"()"}],"docComment":{"lines":[{"text":"Replaces this value with its additive inverse."},{"text":""},{"text":"The following example uses the `negate()` method to negate the value of"},{"text":"an integer `x`:"},{"text":""},{"text":"    var x = 21"},{"text":"    x.negate()"},{"text":"    // x == -21"},{"text":""},{"text":"The resulting value must be representable within the value's type. In"},{"text":"particular, negating a signed, fixed-width integer type's minimum"},{"text":"results in a value that cannot be represented."},{"text":""},{"text":"    var y = Int8.min"},{"text":"    y.negate()"},{"text":"    // Overflow error"}]},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s13SignedNumericPsE6negateyyF::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"negate"},{"kind":"text","spelling":"()"}],"title":"negate()"},"pathComponents":["Int8","negate()"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right."},{"text":""},{"text":"The `>>` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a left shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*. An overshift results in `-1` for a"},{"text":"  negative value of `lhs` or `0` for a nonnegative value."},{"text":"- Using any other value for `rhs` performs a right shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted right by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x >> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x >> 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a left shift"},{"text":"using `abs(rhs)`."},{"text":""},{"text":"    let a = x >> -3"},{"text":"    // a == 240                       // 0b11110000"},{"text":"    let b = x << 3"},{"text":"    // b == 240                       // 0b11110000"},{"text":""},{"text":"Right shift operations on negative values \"fill in\" the high bits with"},{"text":"ones instead of zeros."},{"text":""},{"text":"    let q: Int8 = -30                 // 0b11100010"},{"text":"    let r = q >> 2"},{"text":"    // r == -8                        // 0b11111000"},{"text":""},{"text":"    let s = q >> 11"},{"text":"    // s == -1                        // 0b11111111"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":">>(_:_:)"},"pathComponents":["UInt",">>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"RHS"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bitWidth"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The number of bits in the binary representation of this value."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE03bitB0Sivp::SYNTHESIZED::s:Su"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bitWidth"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"bitWidth"},"pathComponents":["UInt","bitWidth"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isSigned"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A Boolean value indicating whether this type is a signed integer type."},{"text":""},{"text":"This property is always `false` for unsigned integer types."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUsE8isSignedSbvpZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isSigned"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"isSigned"},"pathComponents":["UInt","isSigned"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE2seoiyyxz_xtFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"-=(_:_:)"},"pathComponents":["Int16","-=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking left shift operator (`&<<`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking left shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &<< 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &<< 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&<<(_:_:)"},"pathComponents":["UInt64","&<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedDescription"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"Retrieve the localized description for this error."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s5ErrorP10FoundationE20localizedDescriptionSSvp::SYNTHESIZED::s:s13DecodingErrorO"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedDescription"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"localizedDescription"},"pathComponents":["DecodingError","localizedDescription"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"deprecated":{"major":4},"domain":"Swift","renamed":"init(truncating:)"}],"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Sd10FoundationEySdAA8NSNumberCcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Double","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The maximum representable integer in this type."},{"text":""},{"text":"For signed integer types, this value is `(2 ** (bitWidth - 1)) - 1`,"},{"text":"where `**` is exponentiation."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZss17FixedWidthIntegerRzrlE3maxxvpZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"max"},"pathComponents":["Int16","max"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the two given values are not"},{"text":"equal."},{"text":""},{"text":"You can check the inequality of instances of any `BinaryInteger` types"},{"text":"using the not-equal-to operator (`!=`). For example, you can test"},{"text":"whether the first `UInt8` value in a string's UTF-8 encoding is not"},{"text":"equal to the first `UInt32` value in its Unicode scalar view:"},{"text":""},{"text":"    let gameName = \"Red Light, Green Light\""},{"text":"    if let firstUTF8 = gameName.utf8.first,"},{"text":"        let firstScalar = gameName.unicodeScalars.first?.value {"},{"text":"        print(\"First code values are different: \\(firstUTF8 != firstScalar)\")"},{"text":"    }"},{"text":"    // Prints \"First code values are different: false\""},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2neoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"!=(_:_:)"},"pathComponents":["UInt64","!=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Calculates the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width, and stores the result in the left-hand-side variable."},{"text":""},{"text":"The `&>>=` operator performs a *masking shift*, where the value passed as"},{"text":"`rhs` is masked to produce a value in the range `0..<lhs.bitWidth`. The"},{"text":"shift is performed using this masked value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    var x: UInt8 = 30                 // 0b00011110"},{"text":"    x &>>= 2"},{"text":"    // x == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `19` as `rhs`, the operation first bitmasks `rhs` to"},{"text":"`3`, and then uses that masked value as the number of bits to shift `lhs`."},{"text":""},{"text":"    var y: UInt8 = 30                 // 0b00011110"},{"text":"    y &>>= 19"},{"text":"    // y == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"&>>=(_:_:)"},"pathComponents":["Int64","&>>=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left."},{"text":""},{"text":"The `<<` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a right shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*, resulting in zero."},{"text":"- Using any other value for `rhs` performs a left shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted left by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x << 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x << 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a right shift"},{"text":"with `abs(rhs)`."},{"text":""},{"text":"    let a = x << -3"},{"text":"    // a == 3                         // 0b00000011"},{"text":"    let b = x >> 3"},{"text":"    // b == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"<<(_:_:)"},"pathComponents":["UInt","<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"truncating"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Sd10FoundationE10truncatingSdAA8NSNumberC_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"truncating"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(truncating:)"},"pathComponents":["Double","init(truncating:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The minimum representable integer in this type."},{"text":""},{"text":"For unsigned integer types, this value is always `0`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUss17FixedWidthIntegerRzrlE3minxvpZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"min"},"pathComponents":["UInt16","min"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"truncatingIfNeeded"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the bit pattern of the given instance by"},{"text":"truncating or sign-extending if needed to fit this type."},{"text":""},{"text":"When the bit width of `T` (the type of `source`) is equal to or greater"},{"text":"than this type's bit width, the result is the truncated"},{"text":"least-significant bits of `source`. For example, when converting a"},{"text":"16-bit value to an 8-bit type, only the lower 8 bits of `source` are"},{"text":"used."},{"text":""},{"text":"    let p: Int16 = -500"},{"text":"    // 'p' has a binary representation of 11111110_00001100"},{"text":"    let q = Int8(truncatingIfNeeded: p)"},{"text":"    // q == 12"},{"text":"    // 'q' has a binary representation of 00001100"},{"text":""},{"text":"When the bit width of `T` is less than this type's bit width, the result"},{"text":"is *sign-extended* to fill the remaining bits. That is, if `source` is"},{"text":"negative, the result is padded with ones; otherwise, the result is"},{"text":"padded with zeros."},{"text":""},{"text":"    let u: Int8 = 21"},{"text":"    // 'u' has a binary representation of 00010101"},{"text":"    let v = Int16(truncatingIfNeeded: u)"},{"text":"    // v == 21"},{"text":"    // 'v' has a binary representation of 00000000_00010101"},{"text":""},{"text":"    let w: Int8 = -21"},{"text":"    // 'w' has a binary representation of 11101011"},{"text":"    let x = Int16(truncatingIfNeeded: w)"},{"text":"    // x == -21"},{"text":"    // 'x' has a binary representation of 11111111_11101011"},{"text":"    let y = UInt16(truncatingIfNeeded: w)"},{"text":"    // y == 65515"},{"text":"    // 'y' has a binary representation of 11111111_11101011"},{"text":""},{"text":"- Parameter source: An integer to convert to this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"truncatingIfNeeded"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(truncatingIfNeeded:)"},"pathComponents":["UInt32","init(truncatingIfNeeded:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the two given values are"},{"text":"equal."},{"text":""},{"text":"You can check the equality of instances of any `BinaryInteger` types"},{"text":"using the equal-to operator (`==`). For example, you can test whether"},{"text":"the first `UInt8` value in a string's UTF-8 encoding is equal to the"},{"text":"first `UInt32` value in its Unicode scalar view:"},{"text":""},{"text":"    let gameName = \"Red Light, Green Light\""},{"text":"    if let firstUTF8 = gameName.utf8.first,"},{"text":"        let firstScalar = gameName.unicodeScalars.first?.value {"},{"text":"        print(\"First code values are equal: \\(firstUTF8 == firstScalar)\")"},{"text":"    }"},{"text":"    // Prints \"First code values are equal: true\""},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"==(_:_:)"},"pathComponents":["UInt32","==(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"EnumerationOptions"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSStringC","spelling":"NSString"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSStringC18EnumerationOptionsV","spelling":"EnumerationOptions"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE18EnumerationOptionsa"},"kind":{"displayName":"Type Alias","identifier":"swift.typealias"},"names":{"navigator":[{"kind":"identifier","spelling":"EnumerationOptions"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"EnumerationOptions"}],"title":"String.EnumerationOptions"},"pathComponents":["String","EnumerationOptions"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is greater than that of the second argument."},{"text":""},{"text":"This is the default implementation of the greater-than operator (`>`) for"},{"text":"any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE1goiySbx_xtFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["UInt16",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3lleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"<<=(_:_:)"},"pathComponents":["Int32","<<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the two given values are not"},{"text":"equal."},{"text":""},{"text":"You can check the inequality of instances of any `BinaryInteger` types"},{"text":"using the not-equal-to operator (`!=`). For example, you can test"},{"text":"whether the first `UInt8` value in a string's UTF-8 encoding is not"},{"text":"equal to the first `UInt32` value in its Unicode scalar view:"},{"text":""},{"text":"    let gameName = \"Red Light, Green Light\""},{"text":"    if let firstUTF8 = gameName.utf8.first,"},{"text":"        let firstScalar = gameName.unicodeScalars.first?.value {"},{"text":"        print(\"First code values are different: \\(firstUTF8 != firstScalar)\")"},{"text":"    }"},{"text":"    // Prints \"First code values are different: false\""},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2neoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"!=(_:_:)"},"pathComponents":["Int32","!=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right."},{"text":""},{"text":"The `>>` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a left shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*. An overshift results in `-1` for a"},{"text":"  negative value of `lhs` or `0` for a nonnegative value."},{"text":"- Using any other value for `rhs` performs a right shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted right by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x >> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x >> 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a left shift"},{"text":"using `abs(rhs)`."},{"text":""},{"text":"    let a = x >> -3"},{"text":"    // a == 240                       // 0b11110000"},{"text":"    let b = x << 3"},{"text":"    // b == 240                       // 0b11110000"},{"text":""},{"text":"Right shift operations on negative values \"fill in\" the high bits with"},{"text":"ones instead of zeros."},{"text":""},{"text":"    let q: Int8 = -30                 // 0b11100010"},{"text":"    let r = q >> 2"},{"text":"    // r == -8                        // 0b11111000"},{"text":""},{"text":"    let s = q >> 11"},{"text":"    // s == -1                        // 0b11111111"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":">>(_:_:)"},"pathComponents":["Int",">>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"RHS"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking left shift operator (`&<<`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking left shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &<< 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &<< 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&<<(_:_:)"},"pathComponents":["UInt32","&<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE2peoiyyxz_xtFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"+=(_:_:)"},"pathComponents":["Int16","+=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"encode"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"C"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"wrapper"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation20CodableConfigurationV","spelling":"CodableConfiguration"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"?, "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"forKey"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"key"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedEncodingContainerV","spelling":"KeyedEncodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation26DecodableWithConfigurationP","spelling":"DecodableWithConfiguration"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation26EncodableWithConfigurationP","spelling":"EncodableWithConfiguration"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation30DecodingConfigurationProvidingP","spelling":"DecodingConfigurationProviding"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation30EncodingConfigurationProvidingP","spelling":"EncodingConfigurationProviding"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"EncodingConfiguration"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"EncodingConfiguration"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"wrapper"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation20CodableConfigurationV","spelling":"CodableConfiguration"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"?, "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":">"}],"name":"wrapper"},{"declarationFragments":[{"kind":"identifier","spelling":"key"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedEncodingContainerV","spelling":"KeyedEncodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"}],"internalName":"key","name":"forKey"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s22KeyedEncodingContainerV10FoundationE6encode_6forKeyyAC20CodableConfigurationVyqd__Sgqd_0_G_xtKAC013DecodableWithI0Rd__AC09EncodablekI0Rd__AC08DecodingI9ProvidingRd_0_AC0biN0Rd_0_0mI0AcLPQyd_0_AncJPRtd__0bI0AcMPQyd_0_AscKPRtd__r0_lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"encode"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"C"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation20CodableConfigurationV","spelling":"CodableConfiguration"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"?, "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"forKey"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedEncodingContainerV","spelling":"KeyedEncodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"title":"encode(_:forKey:)"},"pathComponents":["KeyedEncodingContainer","encode(_:forKey:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"K","rhs":"CodingKey","rhsPrecise":"s:s9CodingKeyP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"K","rhs":"CodingKey","rhsPrecise":"s:s9CodingKeyP"},{"kind":"conformance","lhs":"T","rhs":"DecodableWithConfiguration","rhsPrecise":"s:10Foundation26DecodableWithConfigurationP"},{"kind":"conformance","lhs":"T","rhs":"EncodableWithConfiguration","rhsPrecise":"s:10Foundation26EncodableWithConfigurationP"},{"kind":"conformance","lhs":"C","rhs":"DecodingConfigurationProviding","rhsPrecise":"s:10Foundation30DecodingConfigurationProvidingP"},{"kind":"conformance","lhs":"C","rhs":"EncodingConfigurationProviding","rhsPrecise":"s:10Foundation30EncodingConfigurationProvidingP"},{"kind":"sameType","lhs":"T.DecodingConfiguration","rhs":"C.DecodingConfiguration"},{"kind":"sameType","lhs":"T.EncodingConfiguration","rhs":"C.EncodingConfiguration"}],"parameters":[{"depth":0,"index":0,"name":"K"},{"depth":1,"index":0,"name":"T"},{"depth":1,"index":1,"name":"C"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking left shift operator (`&<<`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking left shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &<< 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &<< 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&<<(_:_:)"},"pathComponents":["Int32","&<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"littleEndian"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates an integer from its little-endian representation, changing the"},{"text":"byte order if necessary."},{"text":""},{"text":"- Parameter value: A value to use as the little-endian representation of"},{"text":"  the new integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc::SYNTHESIZED::s:Si"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(littleEndian:)"},"pathComponents":["Int","init(littleEndian:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bitWidth"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The number of bits in the binary representation of this value."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE03bitB0Sivp::SYNTHESIZED::s:Si"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bitWidth"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"bitWidth"},"pathComponents":["Int","bitWidth"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"~"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the inverse of the bits set in the argument."},{"text":""},{"text":"The bitwise NOT operator (`~`) is a prefix operator that returns a value"},{"text":"in which all the bits of its argument are flipped: Bits that are `1` in"},{"text":"the argument are `0` in the result, and bits that are `0` in the argument"},{"text":"are `1` in the result. This is equivalent to the inverse of a set. For"},{"text":"example:"},{"text":""},{"text":"    let x: UInt8 = 5        // 0b00000101"},{"text":"    let notX = ~x           // 0b11111010"},{"text":""},{"text":"Performing a bitwise NOT operation on 0 returns a value with every bit"},{"text":"set to `1`."},{"text":""},{"text":"    let allOnes = ~UInt8.min   // 0b11111111"},{"text":""},{"text":"- Complexity: O(1)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE1topyxxFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"~"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"~(_:)"},"pathComponents":["Int16","~(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking right shift operator (`&>>`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking right shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &>> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &>> 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&>>(_:_:)"},"pathComponents":["UInt","&>>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3lleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"<<=(_:_:)"},"pathComponents":["UInt64","<<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"from"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexRtzr0_lF::SYNTHESIZED::s:SR"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:from:)"},"pathComponents":["UnsafeBufferPointer","copyBytes(to:from:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"DestinationType"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The maximum representable integer in this type."},{"text":""},{"text":"For unsigned integer types, this value is `(2 ** bitWidth) - 1`, where"},{"text":"`**` is exponentiation."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUss17FixedWidthIntegerRzrlE3maxxvpZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"max"},"pathComponents":["UInt16","max"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A textual representation of this value."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE11descriptionSSvp::SYNTHESIZED::s:Su"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"description"},"pathComponents":["UInt","description"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Sd10FoundationE7exactlySdSgAA8NSNumberC_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["Double","init(exactly:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"from"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSw_qd__tSXRd__5BoundQyd__5IndexRtzlF::SYNTHESIZED::s:s8RepeatedV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:from:)"},"pathComponents":["Repeated","copyBytes(to:from:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the two given values are"},{"text":"equal."},{"text":""},{"text":"You can check the equality of instances of any `BinaryInteger` types"},{"text":"using the equal-to operator (`==`). For example, you can test whether"},{"text":"the first `UInt8` value in a string's UTF-8 encoding is equal to the"},{"text":"first `UInt32` value in its Unicode scalar view:"},{"text":""},{"text":"    let gameName = \"Red Light, Green Light\""},{"text":"    if let firstUTF8 = gameName.utf8.first,"},{"text":"        let firstScalar = gameName.unicodeScalars.first?.value {"},{"text":"        print(\"First code values are equal: \\(firstUTF8 == firstScalar)\")"},{"text":"    }"},{"text":"    // Prints \"First code values are equal: true\""},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"==(_:_:)"},"pathComponents":["UInt64","==(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"truncatingIfNeeded"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the bit pattern of the given instance by"},{"text":"truncating or sign-extending if needed to fit this type."},{"text":""},{"text":"When the bit width of `T` (the type of `source`) is equal to or greater"},{"text":"than this type's bit width, the result is the truncated"},{"text":"least-significant bits of `source`. For example, when converting a"},{"text":"16-bit value to an 8-bit type, only the lower 8 bits of `source` are"},{"text":"used."},{"text":""},{"text":"    let p: Int16 = -500"},{"text":"    // 'p' has a binary representation of 11111110_00001100"},{"text":"    let q = Int8(truncatingIfNeeded: p)"},{"text":"    // q == 12"},{"text":"    // 'q' has a binary representation of 00001100"},{"text":""},{"text":"When the bit width of `T` is less than this type's bit width, the result"},{"text":"is *sign-extended* to fill the remaining bits. That is, if `source` is"},{"text":"negative, the result is padded with ones; otherwise, the result is"},{"text":"padded with zeros."},{"text":""},{"text":"    let u: Int8 = 21"},{"text":"    // 'u' has a binary representation of 00010101"},{"text":"    let v = Int16(truncatingIfNeeded: u)"},{"text":"    // v == 21"},{"text":"    // 'v' has a binary representation of 00000000_00010101"},{"text":""},{"text":"    let w: Int8 = -21"},{"text":"    // 'w' has a binary representation of 11101011"},{"text":"    let x = Int16(truncatingIfNeeded: w)"},{"text":"    // x == -21"},{"text":"    // 'x' has a binary representation of 11111111_11101011"},{"text":"    let y = UInt16(truncatingIfNeeded: w)"},{"text":"    // y == 65515"},{"text":"    // 'y' has a binary representation of 11111111_11101011"},{"text":""},{"text":"- Parameter source: An integer to convert to this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"truncatingIfNeeded"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(truncatingIfNeeded:)"},"pathComponents":["UInt64","init(truncatingIfNeeded:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is greater than that of the second argument."},{"text":""},{"text":"This is the default implementation of the greater-than operator (`>`) for"},{"text":"any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE1goiySbx_xtFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["Int16",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Multiplies two values and stores the result in the left-hand-side"},{"text":"variable, wrapping any overflow."},{"text":""},{"text":"The masking multiplication assignment operator (`&*=`) silently wraps"},{"text":"any overflow that occurs during the operation. In the following example,"},{"text":"the product of `10` and `50` is greater than the maximum representable"},{"text":"`Int8` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    var x: Int8 = 10"},{"text":"    x &*= 5"},{"text":"    // x == 50"},{"text":"    var y: Int8 = 10"},{"text":"    y &*= 50"},{"text":"    // y == -12 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to multiply."},{"text":"  - rhs: The second value to multiply."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&*=(_:_:)"},"pathComponents":["Int","&*=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A textual representation of this value."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE11descriptionSSvp::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"description"},"pathComponents":["Int64","description"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the two given values are not"},{"text":"equal."},{"text":""},{"text":"You can check the inequality of instances of any `BinaryInteger` types"},{"text":"using the not-equal-to operator (`!=`). For example, you can test"},{"text":"whether the first `UInt8` value in a string's UTF-8 encoding is not"},{"text":"equal to the first `UInt32` value in its Unicode scalar view:"},{"text":""},{"text":"    let gameName = \"Red Light, Green Light\""},{"text":"    if let firstUTF8 = gameName.utf8.first,"},{"text":"        let firstScalar = gameName.unicodeScalars.first?.value {"},{"text":"        print(\"First code values are different: \\(firstUTF8 != firstScalar)\")"},{"text":"    }"},{"text":"    // Prints \"First code values are different: false\""},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2neoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"!=(_:_:)"},"pathComponents":["UInt32","!=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE2seoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"-=(_:_:)"},"pathComponents":["UInt16","-=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking left shift operator (`&<<`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking left shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &<< 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &<< 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&<<(_:_:)"},"pathComponents":["Int32","&<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking right shift operator (`&>>`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking right shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &>> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &>> 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&>>(_:_:)"},"pathComponents":["Int64","&>>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking left shift operator (`&<<`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking left shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &<< 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &<< 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&<<(_:_:)"},"pathComponents":["UInt32","&<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left."},{"text":""},{"text":"The `<<` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a right shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*, resulting in zero."},{"text":"- Using any other value for `rhs` performs a left shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted left by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x << 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x << 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a right shift"},{"text":"with `abs(rhs)`."},{"text":""},{"text":"    let a = x << -3"},{"text":"    // a == 3                         // 0b00000011"},{"text":"    let b = x >> 3"},{"text":"    // b == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"<<(_:_:)"},"pathComponents":["Int64","<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left."},{"text":""},{"text":"The `<<` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a right shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*, resulting in zero."},{"text":"- Using any other value for `rhs` performs a left shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted left by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x << 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x << 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a right shift"},{"text":"with `abs(rhs)`."},{"text":""},{"text":"    let a = x << -3"},{"text":"    // a == 3                         // 0b00000011"},{"text":"    let b = x >> 3"},{"text":"    // b == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"<<(_:_:)"},"pathComponents":["Int","<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"RHS"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Calculates the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width, and stores the result in the left-hand-side variable."},{"text":""},{"text":"The `&>>=` operator performs a *masking shift*, where the value passed as"},{"text":"`rhs` is masked to produce a value in the range `0..<lhs.bitWidth`. The"},{"text":"shift is performed using this masked value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    var x: UInt8 = 30                 // 0b00011110"},{"text":"    x &>>= 2"},{"text":"    // x == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `19` as `rhs`, the operation first bitmasks `rhs` to"},{"text":"`3`, and then uses that masked value as the number of bits to shift `lhs`."},{"text":""},{"text":"    var y: UInt8 = 30                 // 0b00011110"},{"text":"    y &>>= 19"},{"text":"    // y == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"&>>=(_:_:)"},"pathComponents":["UInt","&>>=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"defaultCStringEncoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The C-string encoding assumed for any method accepting a C string as an"},{"text":"argument."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE22defaultCStringEncodingSSAAE0D0VvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"defaultCStringEncoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"title":"defaultCStringEncoding"},"pathComponents":["String","defaultCStringEncoding"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the two given values are"},{"text":"equal."},{"text":""},{"text":"You can check the equality of instances of any `BinaryInteger` types"},{"text":"using the equal-to operator (`==`). For example, you can test whether"},{"text":"the first `UInt8` value in a string's UTF-8 encoding is equal to the"},{"text":"first `UInt32` value in its Unicode scalar view:"},{"text":""},{"text":"    let gameName = \"Red Light, Green Light\""},{"text":"    if let firstUTF8 = gameName.utf8.first,"},{"text":"        let firstScalar = gameName.unicodeScalars.first?.value {"},{"text":"        print(\"First code values are equal: \\(firstUTF8 == firstScalar)\")"},{"text":"    }"},{"text":"    // Prints \"First code values are equal: true\""},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"==(_:_:)"},"pathComponents":["Int32","==(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"truncatingIfNeeded"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the bit pattern of the given instance by"},{"text":"truncating or sign-extending if needed to fit this type."},{"text":""},{"text":"When the bit width of `T` (the type of `source`) is equal to or greater"},{"text":"than this type's bit width, the result is the truncated"},{"text":"least-significant bits of `source`. For example, when converting a"},{"text":"16-bit value to an 8-bit type, only the lower 8 bits of `source` are"},{"text":"used."},{"text":""},{"text":"    let p: Int16 = -500"},{"text":"    // 'p' has a binary representation of 11111110_00001100"},{"text":"    let q = Int8(truncatingIfNeeded: p)"},{"text":"    // q == 12"},{"text":"    // 'q' has a binary representation of 00001100"},{"text":""},{"text":"When the bit width of `T` is less than this type's bit width, the result"},{"text":"is *sign-extended* to fill the remaining bits. That is, if `source` is"},{"text":"negative, the result is padded with ones; otherwise, the result is"},{"text":"padded with zeros."},{"text":""},{"text":"    let u: Int8 = 21"},{"text":"    // 'u' has a binary representation of 00010101"},{"text":"    let v = Int16(truncatingIfNeeded: u)"},{"text":"    // v == 21"},{"text":"    // 'v' has a binary representation of 00000000_00010101"},{"text":""},{"text":"    let w: Int8 = -21"},{"text":"    // 'w' has a binary representation of 11101011"},{"text":"    let x = Int16(truncatingIfNeeded: w)"},{"text":"    // x == -21"},{"text":"    // 'x' has a binary representation of 11111111_11101011"},{"text":"    let y = UInt16(truncatingIfNeeded: w)"},{"text":"    // y == 65515"},{"text":"    // 'y' has a binary representation of 11111111_11101011"},{"text":""},{"text":"- Parameter source: An integer to convert to this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"truncatingIfNeeded"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(truncatingIfNeeded:)"},"pathComponents":["Int32","init(truncatingIfNeeded:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"enumerateSubstrings"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"options"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"opts"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE18EnumerationOptionsa","spelling":"EnumerationOptions"},{"kind":"text","spelling":" = [], "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"body"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"?, "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">, "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","spelling":"Void"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS5IndexV","spelling":"Index"}],"docComment":{"lines":[{"text":"Enumerates the substrings of the specified type in the specified range of"},{"text":"the string."},{"text":""},{"text":"Mutation of a string value while enumerating its substrings is not"},{"text":"supported. If you need to mutate a string from within `body`, convert"},{"text":"your string to an `NSMutableString` instance and then call the"},{"text":"`enumerateSubstrings(in:options:using:)` method."},{"text":""},{"text":"- Parameters:"},{"text":"  - range: The range within the string to enumerate substrings."},{"text":"  - opts: Options specifying types of substrings and enumeration styles."},{"text":"    If `opts` is omitted or empty, `body` is called a single time with"},{"text":"    the range of the string specified by `range`."},{"text":"  - body: The closure executed for each substring in the enumeration. The"},{"text":"    closure takes four arguments:"},{"text":"    - The enumerated substring. If `substringNotRequired` is included in"},{"text":"      `opts`, this parameter is `nil` for every execution of the"},{"text":"      closure."},{"text":"    - The range of the enumerated substring in the string that"},{"text":"      `enumerate(in:options:_:)` was called on."},{"text":"    - The range that includes the substring as well as any separator or"},{"text":"      filler characters that follow. For instance, for lines,"},{"text":"      `enclosingRange` contains the line terminators. The enclosing"},{"text":"      range for the first string enumerated also contains any characters"},{"text":"      that occur before the string. Consecutive enclosing ranges are"},{"text":"      guaranteed not to overlap, and every single character in the"},{"text":"      enumerated range is included in one and only one enclosing range."},{"text":"    - An `inout` Boolean value that the closure can use to stop the"},{"text":"      enumeration by setting `stop = true`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"in"},{"declarationFragments":[{"kind":"identifier","spelling":"opts"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE18EnumerationOptionsa","spelling":"EnumerationOptions"}],"internalName":"opts","name":"options"},{"declarationFragments":[{"kind":"identifier","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"?, "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">, "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","spelling":"Void"}],"name":"body"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE19enumerateSubstrings2in7options_yqd___AA8NSStringC18EnumerationOptionsVySSSg_SnySS5IndexVGALSbztctSXRd__AK5BoundRtd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"enumerateSubstrings"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"options"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE18EnumerationOptionsa","spelling":"EnumerationOptions"},{"kind":"text","spelling":", ("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"?, "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">, "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","spelling":"Void"},{"kind":"text","spelling":")"}],"title":"enumerateSubstrings(in:options:_:)"},"pathComponents":["StringProtocol","enumerateSubstrings(in:options:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"R.Bound","rhs":"String.Index","rhsPrecise":"s:SS5IndexV"}],"parameters":[{"depth":1,"index":0,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3lleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"<<=(_:_:)"},"pathComponents":["UInt32","<<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE10firstRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:SW"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"firstRange(of:)"},"pathComponents":["UnsafeRawBufferPointer","firstRange(of:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"D"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE2peoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"+=(_:_:)"},"pathComponents":["UInt16","+=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SB","spelling":"BinaryFloatingPoint"}],"docComment":{"lines":[{"text":"Creates an integer from the given floating-point value, rounding toward"},{"text":"zero. Any fractional part of the value passed as `source` is removed."},{"text":""},{"text":"    let x = Int(21.5)"},{"text":"    // x == 21"},{"text":"    let y = Int(-21.5)"},{"text":"    // y == -21"},{"text":""},{"text":"If `source` is outside the bounds of this type after rounding toward"},{"text":"zero, a runtime error may occur."},{"text":""},{"text":"    let z = UInt(-21.5)"},{"text":"    // Error: ...outside the representable range"},{"text":""},{"text":"- Parameter source: A floating-point value to convert to an integer."},{"text":"  `source` must be representable in this type after rounding toward"},{"text":"  zero."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc::SYNTHESIZED::s:Si"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Int","init(_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryFloatingPoint","rhsPrecise":"s:SB"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the given integer, if it can be represented"},{"text":"exactly."},{"text":""},{"text":"If the value passed as `source` is not representable exactly, the result"},{"text":"is `nil`. In the following example, the constant `x` is successfully"},{"text":"created from a value of `100`, while the attempt to initialize the"},{"text":"constant `y` from `1_000` fails because the `Int8` type can represent"},{"text":"`127` at maximum:"},{"text":""},{"text":"    let x = Int8(exactly: 100)"},{"text":"    // x == Optional(100)"},{"text":"    let y = Int8(exactly: 1_000)"},{"text":"    // y == nil"},{"text":""},{"text":"- Parameter source: A value to convert to this type of integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["Int32","init(exactly:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"},{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking left shift operator (`&<<`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking left shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &<< 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &<< 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&<<(_:_:)"},"pathComponents":["UInt64","&<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The minimum representable integer in this type."},{"text":""},{"text":"For signed integer types, this value is `-(2 ** (bitWidth - 1))`, where"},{"text":"`**` is exponentiation."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZss17FixedWidthIntegerRzrlE3minxvpZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"min"},"pathComponents":["Int16","min"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"~"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the inverse of the bits set in the argument."},{"text":""},{"text":"The bitwise NOT operator (`~`) is a prefix operator that returns a value"},{"text":"in which all the bits of its argument are flipped: Bits that are `1` in"},{"text":"the argument are `0` in the result, and bits that are `0` in the argument"},{"text":"are `1` in the result. This is equivalent to the inverse of a set. For"},{"text":"example:"},{"text":""},{"text":"    let x: UInt8 = 5        // 0b00000101"},{"text":"    let notX = ~x           // 0b11111010"},{"text":""},{"text":"Performing a bitwise NOT operation on 0 returns a value with every bit"},{"text":"set to `1`."},{"text":""},{"text":"    let allOnes = ~UInt8.min   // 0b11111111"},{"text":""},{"text":"- Complexity: O(1)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE1topyxxFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"~"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"~(_:)"},"pathComponents":["UInt16","~(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the given integer."},{"text":""},{"text":"Use this initializer to convert from another integer type when you know"},{"text":"the value is within the bounds of this type. Passing a value that can't"},{"text":"be represented in this type results in a runtime error."},{"text":""},{"text":"In the following example, the constant `y` is successfully created from"},{"text":"`x`, an `Int` instance with a value of `100`. Because the `Int8` type"},{"text":"can represent `127` at maximum, the attempt to create `z` with a value"},{"text":"of `1000` results in a runtime error."},{"text":""},{"text":"    let x = 100"},{"text":"    let y = Int8(x)"},{"text":"    // y == 100"},{"text":"    let z = Int8(x * 10)"},{"text":"    // Error: Not enough bits to represent the given value"},{"text":""},{"text":"- Parameter source: A value to convert to this type of integer. The value"},{"text":"  passed as `source` must be representable in this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Int64","init(_:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"},{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedDescription"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"Retrieve the localized description for this error."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s5ErrorP10FoundationE20localizedDescriptionSSvp::SYNTHESIZED::s:s13EncodingErrorO"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedDescription"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"localizedDescription"},"pathComponents":["EncodingError","localizedDescription"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the given integer."},{"text":""},{"text":"Use this initializer to convert from another integer type when you know"},{"text":"the value is within the bounds of this type. Passing a value that can't"},{"text":"be represented in this type results in a runtime error."},{"text":""},{"text":"In the following example, the constant `y` is successfully created from"},{"text":"`x`, an `Int` instance with a value of `100`. Because the `Int8` type"},{"text":"can represent `127` at maximum, the attempt to create `z` with a value"},{"text":"of `1000` results in a runtime error."},{"text":""},{"text":"    let x = 100"},{"text":"    let y = Int8(x)"},{"text":"    // y == 100"},{"text":"    let z = Int8(x * 10)"},{"text":"    // Error: Not enough bits to represent the given value"},{"text":""},{"text":"- Parameter source: A value to convert to this type of integer. The value"},{"text":"  passed as `source` must be representable in this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Int32","init(_:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"},{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"EncodingConversionOptions"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSStringC","spelling":"NSString"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSStringC25EncodingConversionOptionsV","spelling":"EncodingConversionOptions"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE25EncodingConversionOptionsa"},"kind":{"displayName":"Type Alias","identifier":"swift.typealias"},"names":{"navigator":[{"kind":"identifier","spelling":"EncodingConversionOptions"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"EncodingConversionOptions"}],"title":"String.EncodingConversionOptions"},"pathComponents":["String","EncodingConversionOptions"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The maximum representable integer in this type."},{"text":""},{"text":"For signed integer types, this value is `(2 ** (bitWidth - 1)) - 1`,"},{"text":"where `**` is exponentiation."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZss17FixedWidthIntegerRzrlE3maxxvpZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"max"},"pathComponents":["Int8","max"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"},{"declarationFragments":[{"kind":"identifier","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"y"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SxsE1loiySbx_xtFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<(_:_:)"},"pathComponents":["UInt8","<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking right shift operator (`&>>`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking right shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &>> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &>> 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&>>(_:_:)"},"pathComponents":["UInt64","&>>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE2seoiyyxz_xtFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"-=(_:_:)"},"pathComponents":["Int8","-=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the given integer, if it can be represented"},{"text":"exactly."},{"text":""},{"text":"If the value passed as `source` is not representable exactly, the result"},{"text":"is `nil`. In the following example, the constant `x` is successfully"},{"text":"created from a value of `100`, while the attempt to initialize the"},{"text":"constant `y` from `1_000` fails because the `Int8` type can represent"},{"text":"`127` at maximum:"},{"text":""},{"text":"    let x = Int8(exactly: 100)"},{"text":"    // x == Optional(100)"},{"text":"    let y = Int8(exactly: 1_000)"},{"text":"    // y == nil"},{"text":""},{"text":"- Parameter source: A value to convert to this type of integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["Int64","init(exactly:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"},{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The big-endian representation of this integer."},{"text":""},{"text":"If necessary, the byte order of this value is reversed from the typical"},{"text":"byte order of this integer type. On a big-endian platform, for any"},{"text":"integer `x`, `x == x.bigEndian`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE9bigEndianxvp::SYNTHESIZED::s:Si"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"bigEndian"},"pathComponents":["Int","bigEndian"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3lleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"<<=(_:_:)"},"pathComponents":["UInt","<<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isMultiple"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"other","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZss17FixedWidthIntegerRzrlE10isMultiple2ofSbx_tF::SYNTHESIZED::s:Si"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isMultiple"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"isMultiple(of:)"},"pathComponents":["Int","isMultiple(of:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"truncatingIfNeeded"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the bit pattern of the given instance by"},{"text":"truncating or sign-extending if needed to fit this type."},{"text":""},{"text":"When the bit width of `T` (the type of `source`) is equal to or greater"},{"text":"than this type's bit width, the result is the truncated"},{"text":"least-significant bits of `source`. For example, when converting a"},{"text":"16-bit value to an 8-bit type, only the lower 8 bits of `source` are"},{"text":"used."},{"text":""},{"text":"    let p: Int16 = -500"},{"text":"    // 'p' has a binary representation of 11111110_00001100"},{"text":"    let q = Int8(truncatingIfNeeded: p)"},{"text":"    // q == 12"},{"text":"    // 'q' has a binary representation of 00001100"},{"text":""},{"text":"When the bit width of `T` is less than this type's bit width, the result"},{"text":"is *sign-extended* to fill the remaining bits. That is, if `source` is"},{"text":"negative, the result is padded with ones; otherwise, the result is"},{"text":"padded with zeros."},{"text":""},{"text":"    let u: Int8 = 21"},{"text":"    // 'u' has a binary representation of 00010101"},{"text":"    let v = Int16(truncatingIfNeeded: u)"},{"text":"    // v == 21"},{"text":"    // 'v' has a binary representation of 00000000_00010101"},{"text":""},{"text":"    let w: Int8 = -21"},{"text":"    // 'w' has a binary representation of 11101011"},{"text":"    let x = Int16(truncatingIfNeeded: w)"},{"text":"    // x == -21"},{"text":"    // 'x' has a binary representation of 11111111_11101011"},{"text":"    let y = UInt16(truncatingIfNeeded: w)"},{"text":"    // y == 65515"},{"text":"    // 'y' has a binary representation of 11111111_11101011"},{"text":""},{"text":"- Parameter source: An integer to convert to this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"truncatingIfNeeded"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(truncatingIfNeeded:)"},"pathComponents":["Int64","init(truncatingIfNeeded:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the two given values are"},{"text":"equal."},{"text":""},{"text":"You can check the equality of instances of any `BinaryInteger` types"},{"text":"using the equal-to operator (`==`). For example, you can test whether"},{"text":"the first `UInt8` value in a string's UTF-8 encoding is equal to the"},{"text":"first `UInt32` value in its Unicode scalar view:"},{"text":""},{"text":"    let gameName = \"Red Light, Green Light\""},{"text":"    if let firstUTF8 = gameName.utf8.first,"},{"text":"        let firstScalar = gameName.unicodeScalars.first?.value {"},{"text":"        print(\"First code values are equal: \\(firstUTF8 == firstScalar)\")"},{"text":"    }"},{"text":"    // Prints \"First code values are equal: true\""},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"==(_:_:)"},"pathComponents":["Int64","==(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the given number unchanged."},{"text":""},{"text":"You can use the unary plus operator (`+`) to provide symmetry in your"},{"text":"code for positive numbers when also using the unary minus operator."},{"text":""},{"text":"    let x = -21"},{"text":"    let y = +21"},{"text":"    // x == -21"},{"text":"    // y == 21"},{"text":""},{"text":"- Returns: The given argument without any changes."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE1popyxxFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"+(_:)"},"pathComponents":["UInt8","+(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left."},{"text":""},{"text":"The `<<` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a right shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*, resulting in zero."},{"text":"- Using any other value for `rhs` performs a left shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted left by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x << 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x << 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a right shift"},{"text":"with `abs(rhs)`."},{"text":""},{"text":"    let a = x << -3"},{"text":"    // a == 3                         // 0b00000011"},{"text":"    let b = x >> 3"},{"text":"    // b == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"<<(_:_:)"},"pathComponents":["Int32","<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Calculates the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width, and stores the result in the left-hand-side variable."},{"text":""},{"text":"The `&>>=` operator performs a *masking shift*, where the value passed as"},{"text":"`rhs` is masked to produce a value in the range `0..<lhs.bitWidth`. The"},{"text":"shift is performed using this masked value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    var x: UInt8 = 30                 // 0b00011110"},{"text":"    x &>>= 2"},{"text":"    // x == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `19` as `rhs`, the operation first bitmasks `rhs` to"},{"text":"`3`, and then uses that masked value as the number of bits to shift `lhs`."},{"text":""},{"text":"    var y: UInt8 = 30                 // 0b00011110"},{"text":"    y &>>= 19"},{"text":"    // y == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"&>>=(_:_:)"},"pathComponents":["UInt32","&>>=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A textual representation of this value."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE11descriptionSSvp::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"description"},"pathComponents":["UInt64","description"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"~"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the inverse of the bits set in the argument."},{"text":""},{"text":"The bitwise NOT operator (`~`) is a prefix operator that returns a value"},{"text":"in which all the bits of its argument are flipped: Bits that are `1` in"},{"text":"the argument are `0` in the result, and bits that are `0` in the argument"},{"text":"are `1` in the result. This is equivalent to the inverse of a set. For"},{"text":"example:"},{"text":""},{"text":"    let x: UInt8 = 5        // 0b00000101"},{"text":"    let notX = ~x           // 0b11111010"},{"text":""},{"text":"Performing a bitwise NOT operation on 0 returns a value with every bit"},{"text":"set to `1`."},{"text":""},{"text":"    let allOnes = ~UInt8.min   // 0b11111111"},{"text":""},{"text":"- Complexity: O(1)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE1topyxxFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"~"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"~(_:)"},"pathComponents":["Int8","~(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise AND operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise AND operation results in a value that has each bit set to `1`"},{"text":"where *both* of its arguments have that bit set to `1`. For example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x & y             // 0b00000100"},{"text":"    // z == 4"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1aoiyxx_xtFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&(_:_:)"},"pathComponents":["Int","&(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking left shift operator (`&<<`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking left shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &<< 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &<< 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&<<(_:_:)"},"pathComponents":["UInt","&<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking left shift operator (`&<<`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking left shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &<< 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &<< 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&<<(_:_:)"},"pathComponents":["Int64","&<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking right shift operator (`&>>`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking right shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &>> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &>> 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&>>(_:_:)"},"pathComponents":["Int32","&>>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE2peoiyyxz_xtFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"+=(_:_:)"},"pathComponents":["Int8","+=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"from"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSw_qd__tSXRd__5BoundQyd__5IndexRtzlF::SYNTHESIZED::s:SR"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:from:)"},"pathComponents":["UnsafeBufferPointer","copyBytes(to:from:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the two given values are not"},{"text":"equal."},{"text":""},{"text":"You can check the inequality of instances of any `BinaryInteger` types"},{"text":"using the not-equal-to operator (`!=`). For example, you can test"},{"text":"whether the first `UInt8` value in a string's UTF-8 encoding is not"},{"text":"equal to the first `UInt32` value in its Unicode scalar view:"},{"text":""},{"text":"    let gameName = \"Red Light, Green Light\""},{"text":"    if let firstUTF8 = gameName.utf8.first,"},{"text":"        let firstScalar = gameName.unicodeScalars.first?.value {"},{"text":"        print(\"First code values are different: \\(firstUTF8 != firstScalar)\")"},{"text":"    }"},{"text":"    // Prints \"First code values are different: false\""},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2neoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"!=(_:_:)"},"pathComponents":["UInt","!=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"decode"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"C"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation20CodableConfigurationV","spelling":"CodableConfiguration"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"?, "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":">.Type, "},{"kind":"externalParam","spelling":"forKey"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"key"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV","spelling":"KeyedDecodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation20CodableConfigurationV","spelling":"CodableConfiguration"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"?, "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation26DecodableWithConfigurationP","spelling":"DecodableWithConfiguration"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation26EncodableWithConfigurationP","spelling":"EncodableWithConfiguration"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation30DecodingConfigurationProvidingP","spelling":"DecodingConfigurationProviding"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation30EncodingConfigurationProvidingP","spelling":"EncodingConfigurationProviding"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"EncodingConfiguration"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"EncodingConfiguration"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"_"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation20CodableConfigurationV","spelling":"CodableConfiguration"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"?, "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":">.Type"}],"name":""},{"declarationFragments":[{"kind":"identifier","spelling":"key"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV","spelling":"KeyedDecodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"}],"internalName":"key","name":"forKey"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation20CodableConfigurationV","spelling":"CodableConfiguration"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"?, "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s22KeyedDecodingContainerV10FoundationE6decode_6forKeyAC20CodableConfigurationVyqd__Sgqd_0_GAIm_xtKAC013DecodableWithI0Rd__AC09EncodablekI0Rd__AC0bI9ProvidingRd_0_AC08EncodingiM0Rd_0_0bI0AcLPQyd_0_AncJPRtd__0nI0AcMPQyd_0_AscKPRtd__r0_lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"decode"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"C"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation20CodableConfigurationV","spelling":"CodableConfiguration"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"?, "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":">.Type, "},{"kind":"externalParam","spelling":"forKey"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV","spelling":"KeyedDecodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation20CodableConfigurationV","spelling":"CodableConfiguration"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"?, "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":">"}],"title":"decode(_:forKey:)"},"pathComponents":["KeyedDecodingContainer","decode(_:forKey:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"K","rhs":"CodingKey","rhsPrecise":"s:s9CodingKeyP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"K","rhs":"CodingKey","rhsPrecise":"s:s9CodingKeyP"},{"kind":"conformance","lhs":"T","rhs":"DecodableWithConfiguration","rhsPrecise":"s:10Foundation26DecodableWithConfigurationP"},{"kind":"conformance","lhs":"T","rhs":"EncodableWithConfiguration","rhsPrecise":"s:10Foundation26EncodableWithConfigurationP"},{"kind":"conformance","lhs":"C","rhs":"DecodingConfigurationProviding","rhsPrecise":"s:10Foundation30DecodingConfigurationProvidingP"},{"kind":"conformance","lhs":"C","rhs":"EncodingConfigurationProviding","rhsPrecise":"s:10Foundation30EncodingConfigurationProvidingP"},{"kind":"sameType","lhs":"T.DecodingConfiguration","rhs":"C.DecodingConfiguration"},{"kind":"sameType","lhs":"T.EncodingConfiguration","rhs":"C.EncodingConfiguration"}],"parameters":[{"depth":0,"index":0,"name":"K"},{"depth":1,"index":0,"name":"T"},{"depth":1,"index":1,"name":"C"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A textual representation of this value."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE11descriptionSSvp::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"description"},"pathComponents":["Int32","description"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left."},{"text":""},{"text":"The `<<` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a right shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*, resulting in zero."},{"text":"- Using any other value for `rhs` performs a left shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted left by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x << 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x << 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a right shift"},{"text":"with `abs(rhs)`."},{"text":""},{"text":"    let a = x << -3"},{"text":"    // a == 3                         // 0b00000011"},{"text":"    let b = x >> 3"},{"text":"    // b == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"<<(_:_:)"},"pathComponents":["UInt64","<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"canBeConverted"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the string can be"},{"text":"converted to the specified encoding without loss of information."},{"text":""},{"text":"- Parameter encoding: A string encoding."},{"text":"- Returns: `true` if the string can be encoded in `encoding` without loss"},{"text":"  of information; otherwise, `false`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"internalName":"encoding","name":"to"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE14canBeConverted2toSbSSAAE8EncodingV_tF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"canBeConverted"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"canBeConverted(to:)"},"pathComponents":["StringProtocol","canBeConverted(to:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A textual representation of this value."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE11descriptionSSvp::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"description"},"pathComponents":["UInt32","description"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is greater than that of the second argument."},{"text":""},{"text":"This is the default implementation of the greater-than operator (`>`) for"},{"text":"any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE1goiySbx_xtFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["Int8",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"getBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"buffer"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" ["},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","spelling":"UInt8"},{"kind":"text","spelling":"], "},{"kind":"externalParam","spelling":"maxLength"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"maxBufferCount"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"usedLength"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"usedBufferCount"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"options"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE25EncodingConversionOptionsa","spelling":"EncodingConversionOptions"},{"kind":"text","spelling":" = [], "},{"kind":"externalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"remaining"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"leftover"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">>) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS5IndexV","spelling":"Index"}],"docComment":{"lines":[{"text":"Writes the given `range` of characters into `buffer` in a given"},{"text":"`encoding`, without any allocations.  Does not NULL-terminate."},{"text":""},{"text":"- Parameter buffer: A buffer into which to store the bytes from"},{"text":"  the receiver. The returned bytes are not NUL-terminated."},{"text":""},{"text":"- Parameter maxBufferCount: The maximum number of bytes to write"},{"text":"  to buffer."},{"text":""},{"text":"- Parameter usedBufferCount: The number of bytes used from"},{"text":"  buffer. Pass `nil` if you do not need this value."},{"text":""},{"text":"- Parameter encoding: The encoding to use for the returned bytes."},{"text":""},{"text":"- Parameter options: A mask to specify options to use for"},{"text":"  converting the receiver's contents to `encoding` (if conversion"},{"text":"  is necessary)."},{"text":""},{"text":"- Parameter range: The range of characters in the receiver to get."},{"text":""},{"text":"- Parameter leftover: The remaining range. Pass `nil` If you do"},{"text":"  not need this value."},{"text":""},{"text":"- Returns: `true` iff some characters were converted."},{"text":""},{"text":"- Note: Conversion stops when the buffer fills or when the"},{"text":"  conversion isn't possible due to the chosen encoding."},{"text":""},{"text":"- Note: will get a maximum of `min(buffer.count, maxLength)` bytes."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"buffer"},{"kind":"text","spelling":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","spelling":"UInt8"},{"kind":"text","spelling":"]"}],"name":"buffer"},{"declarationFragments":[{"kind":"identifier","spelling":"maxBufferCount"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"internalName":"maxBufferCount","name":"maxLength"},{"declarationFragments":[{"kind":"identifier","spelling":"usedBufferCount"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":">"}],"internalName":"usedBufferCount","name":"usedLength"},{"declarationFragments":[{"kind":"identifier","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"name":"encoding"},{"declarationFragments":[{"kind":"identifier","spelling":"options"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE25EncodingConversionOptionsa","spelling":"EncodingConversionOptions"}],"name":"options"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"name":"range"},{"declarationFragments":[{"kind":"identifier","spelling":"leftover"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">>"}],"internalName":"leftover","name":"remaining"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE8getBytes_9maxLength04usedE08encoding7options5range9remainingSbSays5UInt8VGz_SiSpySiGSSAAE8EncodingVAA8NSStringC0L17ConversionOptionsVqd__SpySnySS5IndexVGGtSXRd__AT5BoundRtd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"getBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" ["},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","spelling":"UInt8"},{"kind":"text","spelling":"], "},{"kind":"externalParam","spelling":"maxLength"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"usedLength"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"options"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE25EncodingConversionOptionsa","spelling":"EncodingConversionOptions"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"remaining"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">>) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"getBytes(_:maxLength:usedLength:encoding:options:range:remaining:)"},"pathComponents":["StringProtocol","getBytes(_:maxLength:usedLength:encoding:options:range:remaining:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"R.Bound","rhs":"String.Index","rhsPrecise":"s:SS5IndexV"}],"parameters":[{"depth":1,"index":0,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Calculates the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width, and stores the result in the left-hand-side variable."},{"text":""},{"text":"The `&>>=` operator performs a *masking shift*, where the value passed as"},{"text":"`rhs` is masked to produce a value in the range `0..<lhs.bitWidth`. The"},{"text":"shift is performed using this masked value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    var x: UInt8 = 30                 // 0b00011110"},{"text":"    x &>>= 2"},{"text":"    // x == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `19` as `rhs`, the operation first bitmasks `rhs` to"},{"text":"`3`, and then uses that masked value as the number of bits to shift `lhs`."},{"text":""},{"text":"    var y: UInt8 = 30                 // 0b00011110"},{"text":"    y &>>= 19"},{"text":"    // y == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"&>>=(_:_:)"},"pathComponents":["UInt64","&>>=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width, and stores the result in the left-hand-side variable."},{"text":""},{"text":"The `&<<=` operator performs a *masking shift*, where the value used as"},{"text":"`rhs` is masked to produce a value in the range `0..<lhs.bitWidth`. The"},{"text":"shift is performed using this masked value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    var x: UInt8 = 30                 // 0b00011110"},{"text":"    x &<<= 2"},{"text":"    // x == 120                       // 0b01111000"},{"text":""},{"text":"However, if you pass `19` as `rhs`, the method first bitmasks `rhs` to"},{"text":"`3`, and then uses that masked value as the number of bits to shift `lhs`."},{"text":""},{"text":"    var y: UInt8 = 30                 // 0b00011110"},{"text":"    y &<<= 19"},{"text":"    // y == 240                       // 0b11110000"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"&<<=(_:_:)"},"pathComponents":["Int","&<<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"encode"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"encoder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP","spelling":"Encoder"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"EncodingConfiguration"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"encoder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP","spelling":"Encoder"}],"internalName":"encoder","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"EncodingConfiguration"}],"name":"configuration"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sa10FoundationAA26EncodableWithConfigurationRzlE6encode2to13configurationys7Encoder_p_08EncodingD0QztKF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"encode"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP","spelling":"Encoder"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"EncodingConfiguration"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"title":"encode(to:configuration:)"},"pathComponents":["Array","encode(to:configuration:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Element","rhs":"EncodableWithConfiguration","rhsPrecise":"s:10Foundation26EncodableWithConfigurationP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Element","rhs":"EncodableWithConfiguration","rhsPrecise":"s:10Foundation26EncodableWithConfigurationP"}],"parameters":[{"depth":0,"index":0,"name":"Element"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedDescription"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"Retrieve the localized description for this error."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s5ErrorP10FoundationE20localizedDescriptionSSvp"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedDescription"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"localizedDescription"},"pathComponents":["Error","localizedDescription"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"|"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise OR operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise OR operation results in a value that has each bit set to `1`"},{"text":"where *one or both* of its arguments have that bit set to `1`. For"},{"text":"example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x | y             // 0b00001111"},{"text":"    // z == 15"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1ooiyxx_xtFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"|"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"|(_:_:)"},"pathComponents":["Int","|(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"bigEndian"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates an integer from its big-endian representation, changing the byte"},{"text":"order if necessary."},{"text":""},{"text":"- Parameter value: A value to use as the big-endian representation of the"},{"text":"  new integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc::SYNTHESIZED::s:Si"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(bigEndian:)"},"pathComponents":["Int","init(bigEndian:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"zero"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The zero value."},{"text":""},{"text":"Zero is the identity element for addition. For any value,"},{"text":"`x + .zero == x` and `.zero + x == x`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"zero"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"zero"},"pathComponents":["UInt8","zero"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"ExpressibleByIntegerLiteral","rhsPrecise":"s:s27ExpressibleByIntegerLiteralP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking left shift operator (`&<<`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking left shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &<< 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &<< 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&<<(_:_:)"},"pathComponents":["Int64","&<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"from"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexRtzr0_lF::SYNTHESIZED::s:s8RepeatedV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:from:)"},"pathComponents":["Repeated","copyBytes(to:from:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"DestinationType"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking left shift operator (`&<<`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking left shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &<< 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &<< 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&<<(_:_:)"},"pathComponents":["UInt","&<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking right shift operator (`&>>`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking right shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &>> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &>> 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&>>(_:_:)"},"pathComponents":["UInt32","&>>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"quotientAndRemainder"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"dividingBy"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> (quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Returns the quotient and remainder of this value divided by the given"},{"text":"value."},{"text":""},{"text":"Use this method to calculate the quotient and remainder of a division at"},{"text":"the same time."},{"text":""},{"text":"    let x = 1_000_000"},{"text":"    let (q, r) = x.quotientAndRemainder(dividingBy: 933)"},{"text":"    // q == 1071"},{"text":"    // r == 757"},{"text":""},{"text":"- Parameter rhs: The value to divide this value by."},{"text":"- Returns: A tuple containing the quotient and remainder of this value"},{"text":"  divided by `rhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"rhs","name":"dividingBy"}],"returns":[{"kind":"text","spelling":"(quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF::SYNTHESIZED::s:Si"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"quotientAndRemainder"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"dividingBy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> (quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"quotientAndRemainder(dividingBy:)"},"pathComponents":["Int","quotientAndRemainder(dividingBy:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the two given values are not"},{"text":"equal."},{"text":""},{"text":"You can check the inequality of instances of any `BinaryInteger` types"},{"text":"using the not-equal-to operator (`!=`). For example, you can test"},{"text":"whether the first `UInt8` value in a string's UTF-8 encoding is not"},{"text":"equal to the first `UInt32` value in its Unicode scalar view:"},{"text":""},{"text":"    let gameName = \"Red Light, Green Light\""},{"text":"    if let firstUTF8 = gameName.utf8.first,"},{"text":"        let firstScalar = gameName.unicodeScalars.first?.value {"},{"text":"        print(\"First code values are different: \\(firstUTF8 != firstScalar)\")"},{"text":"    }"},{"text":"    // Prints \"First code values are different: false\""},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2neoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"!=(_:_:)"},"pathComponents":["Int64","!=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3lleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"<<=(_:_:)"},"pathComponents":["Int64","<<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"capitalized"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A copy of the string with each word changed to its corresponding"},{"text":"capitalized spelling."},{"text":""},{"text":"This property performs the canonical (non-localized) mapping. It is"},{"text":"suitable for programming operations that require stable results not"},{"text":"depending on the current locale."},{"text":""},{"text":"A capitalized string is a string with the first character in each word"},{"text":"changed to its corresponding uppercase value, and all remaining"},{"text":"characters set to their corresponding lowercase values. A \"word\" is any"},{"text":"sequence of characters delimited by spaces, tabs, or line terminators."},{"text":"Some common word delimiting punctuation isn't considered, so this"},{"text":"property may not generally produce the desired results for multiword"},{"text":"strings. See the `getLineStart(_:end:contentsEnd:for:)` method for"},{"text":"additional information."},{"text":""},{"text":"Case transformations aren’t guaranteed to be symmetrical or to produce"},{"text":"strings of the same lengths as the originals."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE11capitalizedSSvp"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"capitalized"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"capitalized"},"pathComponents":["StringProtocol","capitalized"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the two given values are"},{"text":"equal."},{"text":""},{"text":"You can check the equality of instances of any `BinaryInteger` types"},{"text":"using the equal-to operator (`==`). For example, you can test whether"},{"text":"the first `UInt8` value in a string's UTF-8 encoding is equal to the"},{"text":"first `UInt32` value in its Unicode scalar view:"},{"text":""},{"text":"    let gameName = \"Red Light, Green Light\""},{"text":"    if let firstUTF8 = gameName.utf8.first,"},{"text":"        let firstScalar = gameName.unicodeScalars.first?.value {"},{"text":"        print(\"First code values are equal: \\(firstUTF8 == firstScalar)\")"},{"text":"    }"},{"text":"    // Prints \"First code values are equal: true\""},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"==(_:_:)"},"pathComponents":["UInt","==(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"truncatingIfNeeded"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the bit pattern of the given instance by"},{"text":"truncating or sign-extending if needed to fit this type."},{"text":""},{"text":"When the bit width of `T` (the type of `source`) is equal to or greater"},{"text":"than this type's bit width, the result is the truncated"},{"text":"least-significant bits of `source`. For example, when converting a"},{"text":"16-bit value to an 8-bit type, only the lower 8 bits of `source` are"},{"text":"used."},{"text":""},{"text":"    let p: Int16 = -500"},{"text":"    // 'p' has a binary representation of 11111110_00001100"},{"text":"    let q = Int8(truncatingIfNeeded: p)"},{"text":"    // q == 12"},{"text":"    // 'q' has a binary representation of 00001100"},{"text":""},{"text":"When the bit width of `T` is less than this type's bit width, the result"},{"text":"is *sign-extended* to fill the remaining bits. That is, if `source` is"},{"text":"negative, the result is padded with ones; otherwise, the result is"},{"text":"padded with zeros."},{"text":""},{"text":"    let u: Int8 = 21"},{"text":"    // 'u' has a binary representation of 00010101"},{"text":"    let v = Int16(truncatingIfNeeded: u)"},{"text":"    // v == 21"},{"text":"    // 'v' has a binary representation of 00000000_00010101"},{"text":""},{"text":"    let w: Int8 = -21"},{"text":"    // 'w' has a binary representation of 11101011"},{"text":"    let x = Int16(truncatingIfNeeded: w)"},{"text":"    // x == -21"},{"text":"    // 'x' has a binary representation of 11111111_11101011"},{"text":"    let y = UInt16(truncatingIfNeeded: w)"},{"text":"    // y == 65515"},{"text":"    // 'y' has a binary representation of 11111111_11101011"},{"text":""},{"text":"- Parameter source: An integer to convert to this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc::SYNTHESIZED::s:Su"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"truncatingIfNeeded"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(truncatingIfNeeded:)"},"pathComponents":["UInt","init(truncatingIfNeeded:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The little-endian representation of this integer."},{"text":""},{"text":"If necessary, the byte order of this value is reversed from the typical"},{"text":"byte order of this integer type. On a little-endian platform, for any"},{"text":"integer `x`, `x == x.littleEndian`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE12littleEndianxvp::SYNTHESIZED::s:Si"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"littleEndian"},"pathComponents":["Int","littleEndian"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Calculates the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width, and stores the result in the left-hand-side variable."},{"text":""},{"text":"The `&>>=` operator performs a *masking shift*, where the value passed as"},{"text":"`rhs` is masked to produce a value in the range `0..<lhs.bitWidth`. The"},{"text":"shift is performed using this masked value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    var x: UInt8 = 30                 // 0b00011110"},{"text":"    x &>>= 2"},{"text":"    // x == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `19` as `rhs`, the operation first bitmasks `rhs` to"},{"text":"`3`, and then uses that masked value as the number of bits to shift `lhs`."},{"text":""},{"text":"    var y: UInt8 = 30                 // 0b00011110"},{"text":"    y &>>= 19"},{"text":"    // y == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"&>>=(_:_:)"},"pathComponents":["Int32","&>>=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left."},{"text":""},{"text":"The `<<` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a right shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*, resulting in zero."},{"text":"- Using any other value for `rhs` performs a left shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted left by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x << 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x << 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a right shift"},{"text":"with `abs(rhs)`."},{"text":""},{"text":"    let a = x << -3"},{"text":"    // a == 3                         // 0b00000011"},{"text":"    let b = x >> 3"},{"text":"    // b == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"<<(_:_:)"},"pathComponents":["UInt32","<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isMultiple"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"other","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE10isMultiple2ofSbx_tF::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isMultiple"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"isMultiple(of:)"},"pathComponents":["UInt16","isMultiple(of:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SB","spelling":"BinaryFloatingPoint"}],"docComment":{"lines":[{"text":"Creates an integer from the given floating-point value, if it can be"},{"text":"represented exactly."},{"text":""},{"text":"If the value passed as `source` is not representable exactly, the result"},{"text":"is `nil`. In the following example, the constant `x` is successfully"},{"text":"created from a value of `21.0`, while the attempt to initialize the"},{"text":"constant `y` from `21.5` fails:"},{"text":""},{"text":"    let x = Int(exactly: 21.0)"},{"text":"    // x == Optional(21)"},{"text":"    let y = Int(exactly: 21.5)"},{"text":"    // y == nil"},{"text":""},{"text":"- Parameter source: A floating-point value to convert to an integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc::SYNTHESIZED::s:Si"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["Int","init(exactly:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryFloatingPoint","rhsPrecise":"s:SB"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The minimum representable integer in this type."},{"text":""},{"text":"For signed integer types, this value is `-(2 ** (bitWidth - 1))`, where"},{"text":"`**` is exponentiation."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZss17FixedWidthIntegerRzrlE3minxvpZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"min"},"pathComponents":["Int8","min"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"^"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise XOR operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise XOR operation, also known as an exclusive OR operation, results"},{"text":"in a value that has each bit set to `1` where *one or the other but not"},{"text":"both* of its arguments had that bit set to `1`. For example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x ^ y             // 0b00001011"},{"text":"    // z == 11"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1xoiyxx_xtFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"^"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"^(_:_:)"},"pathComponents":["Int","^(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"integerLiteral"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"integerLiteral"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(integerLiteral:)"},"pathComponents":["UInt16","init(integerLiteral:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"_ExpressibleByBuiltinIntegerLiteral","rhsPrecise":"s:s35_ExpressibleByBuiltinIntegerLiteralP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"_ExpressibleByBuiltinIntegerLiteral","rhsPrecise":"s:s35_ExpressibleByBuiltinIntegerLiteralP"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"trimmingCharacters"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"set"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12CharacterSetV","spelling":"CharacterSet"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"docComment":{"lines":[{"text":"Returns a new string made by removing from both ends of"},{"text":"the `String` characters contained in a given character set."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"set"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12CharacterSetV","spelling":"CharacterSet"}],"internalName":"set","name":"in"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE18trimmingCharacters2inSSAA12CharacterSetV_tF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"trimmingCharacters"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12CharacterSetV","spelling":"CharacterSet"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"trimmingCharacters(in:)"},"pathComponents":["StringProtocol","trimmingCharacters(in:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"decoder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","spelling":"Decoder"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Sa10FoundationAA26DecodableWithConfigurationRzlE4from13configurationSayxGs7Decoder_p_08DecodingD0QztKcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","spelling":"Decoder"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"title":"init(from:configuration:)"},"pathComponents":["Array","init(from:configuration:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Element","rhs":"DecodableWithConfiguration","rhsPrecise":"s:10Foundation26DecodableWithConfigurationP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Element","rhs":"DecodableWithConfiguration","rhsPrecise":"s:10Foundation26DecodableWithConfigurationP"}],"parameters":[{"depth":0,"index":0,"name":"Element"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2leoiySbx_xtFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["UInt16","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range up to, but not including, its upper bound."},{"text":""},{"text":"Use the prefix half-open range operator (prefix `..<`) to create a"},{"text":"partial range of any type that conforms to the `Comparable` protocol."},{"text":"This example creates a `PartialRangeUpTo<Double>` instance that includes"},{"text":"any value less than `5.0`."},{"text":""},{"text":"    let upToFive = ..<5.0"},{"text":""},{"text":"    upToFive.contains(3.14)       // true"},{"text":"    upToFive.contains(6.28)       // false"},{"text":"    upToFive.contains(5.0)        // false"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the start of the collection up to, but not"},{"text":"including, the partial range's upper bound."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[..<3])"},{"text":"    // Prints \"[10, 20, 30]\""},{"text":""},{"text":"- Parameter maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `maximum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"..<(_:)"},"pathComponents":["UInt64","..<(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7CGFloatV","spelling":"CGFloat"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s5Int32V10FoundationEyAbC7CGFloatVcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7CGFloatV","spelling":"CGFloat"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Int32","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"distance"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"docComment":{"lines":[{"text":"Returns the distance from this value to the given value, expressed as a"},{"text":"stride."},{"text":""},{"text":"For two values `x` and `y`, and a distance `n = x.distance(to: y)`,"},{"text":"`x.advanced(by: n) == y`."},{"text":""},{"text":"- Parameter other: The value to calculate the distance to."},{"text":"- Returns: The distance from this value to `other`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"other","name":"to"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE8distance2toSix_tF::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"distance"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"distance(to:)"},"pathComponents":["Int8","distance(to:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Si10FoundationE7exactlySiSgAA8NSNumberC_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["Int","init(exactly:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2neoiySbx_xtFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"!=(_:_:)"},"pathComponents":["Int16","!=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1goiySbx_xtFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["Int8",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"clamping"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance with the representable value that's closest to the"},{"text":"given integer."},{"text":""},{"text":"If the value passed as `source` is greater than the maximum representable"},{"text":"value in this type, the result is the type's `max` value. If `source` is"},{"text":"less than the smallest representable value in this type, the result is"},{"text":"the type's `min` value."},{"text":""},{"text":"In this example, `x` is initialized as an `Int8` instance by clamping"},{"text":"`500` to the range `-128...127`, and `y` is initialized as a `UInt`"},{"text":"instance by clamping `-500` to the range `0...UInt.max`."},{"text":""},{"text":"    let x = Int8(clamping: 500)"},{"text":"    // x == 127"},{"text":"    // x == Int8.max"},{"text":""},{"text":"    let y = UInt(clamping: -500)"},{"text":"    // y == 0"},{"text":""},{"text":"- Parameter source: An integer to convert to this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"clamping"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"init(clamping:)"},"pathComponents":["Int64","init(clamping:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"recoverySuggestion"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"? { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation14LocalizedErrorPAAE18recoverySuggestionSSSgvp::SYNTHESIZED::s:s13DecodingErrorO"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"recoverySuggestion"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"?"}],"title":"recoverySuggestion"},"pathComponents":["DecodingError","recoverySuggestion"],"swiftExtension":{"extendedModule":"Foundation"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"magnitude"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The magnitude of this value."},{"text":""},{"text":"Every unsigned integer is its own magnitude, so for any value `x`,"},{"text":"`x == x.magnitude`."},{"text":""},{"text":"The global `abs(_:)` function provides more familiar syntax when you need"},{"text":"to find an absolute value. In addition, because `abs(_:)` always returns"},{"text":"a value of the same type, even in a generic context, using the function"},{"text":"instead of the `magnitude` property is encouraged."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUsE9magnitudexvp::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"magnitude"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"magnitude"},"pathComponents":["UInt16","magnitude"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range."},{"text":""},{"text":"Use this method to generate an integer within a specific range. This"},{"text":"example creates three new values in the range `1..<100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1..<100))"},{"text":"    }"},{"text":"    // Prints \"53\""},{"text":"    // Prints \"64\""},{"text":"    // Prints \"5\""},{"text":""},{"text":"This method is equivalent to calling the version that takes a generator,"},{"text":"passing in the system's default random generator."},{"text":""},{"text":"- Parameter range: The range in which to create a random value."},{"text":"  `range` must not be empty."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:)"},"pathComponents":["Int64","random(in:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Subtracts the second value from the first and stores the difference in the"},{"text":"left-hand-side variable, wrapping any overflow."},{"text":""},{"text":"The masking subtraction assignment operator (`&-=`) silently wraps any"},{"text":"overflow that occurs during the operation. In the following example, the"},{"text":"difference of `10` and `21` is less than zero, the minimum representable"},{"text":"`UInt` value, so the result is the result is the partial value after"},{"text":"discarding the overflowing bits."},{"text":""},{"text":"    var x: Int8 = 21"},{"text":"    x &-= 10"},{"text":"    // x == 11"},{"text":"    var y: UInt8 = 10"},{"text":"    y &-= 21"},{"text":"    // y == 245 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A numeric value."},{"text":"  - rhs: The value to subtract from `lhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&-=(_:_:)"},"pathComponents":["Int","&-=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"}],"internalName":"ptr","name":"to"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSw_tF::SYNTHESIZED::s:s10ArraySliceV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:)"},"pathComponents":["ArraySlice","copyBytes(to:)"],"swiftExtension":{"extendedModule":"Foundation"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is less than or equal to that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"less-than-or-equal-to operator (`<=`), even if the two instances are of"},{"text":"different types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2leoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["UInt8","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SG","spelling":"RandomNumberGenerator"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range, using the given"},{"text":"generator as a source for randomness."},{"text":""},{"text":"Use this method to generate an integer within a specific range when you"},{"text":"are using a custom random number generator. This example creates three"},{"text":"new values in the range `1..<100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1..<100, using: &myGenerator))"},{"text":"    }"},{"text":"    // Prints \"7\""},{"text":"    // Prints \"44\""},{"text":"    // Prints \"21\""},{"text":""},{"text":"- Note: The algorithm used to create random values may change in a future"},{"text":"  version of Swift. If you're passing a generator that results in the"},{"text":"  same sequence of integer values each time you run your program, that"},{"text":"  sequence may change when your program is compiled using a different"},{"text":"  version of Swift."},{"text":""},{"text":"- Parameters:"},{"text":"  - range: The range in which to create a random value."},{"text":"    `range` must not be empty."},{"text":"  - generator: The random number generator to use when creating the"},{"text":"    new random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"},{"declarationFragments":[{"kind":"identifier","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"generator","name":"using"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:using:)"},"pathComponents":["UInt","random(in:using:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"RandomNumberGenerator","rhsPrecise":"s:SG"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range."},{"text":""},{"text":"Use this method to generate an integer within a specific range. This"},{"text":"example creates three new values in the range `1...100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1...100))"},{"text":"    }"},{"text":"    // Prints \"53\""},{"text":"    // Prints \"64\""},{"text":"    // Prints \"5\""},{"text":""},{"text":"This method is equivalent to calling `random(in:using:)`, passing in the"},{"text":"system's default random generator."},{"text":""},{"text":"- Parameter range: The range in which to create a random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:)"},"pathComponents":["Int32","random(in:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range extending upward from a lower bound."},{"text":""},{"text":"Use the postfix range operator (postfix `...`) to create a partial range"},{"text":"of any type that conforms to the `Comparable` protocol. This example"},{"text":"creates a `PartialRangeFrom<Double>` instance that includes any value"},{"text":"greater than or equal to `5.0`."},{"text":""},{"text":"    let atLeastFive = 5.0..."},{"text":""},{"text":"    atLeastFive.contains(4.0)     // false"},{"text":"    atLeastFive.contains(5.0)     // true"},{"text":"    atLeastFive.contains(6.0)     // true"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the partial range's lower bound up to the end"},{"text":"of the collection."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[3...])"},{"text":"    // Prints \"[40, 50, 60, 70]\""},{"text":""},{"text":"- Parameter minimum: The lower bound for the range."},{"text":""},{"text":"- Precondition: `minimum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:)"},"pathComponents":["UInt","...(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"truncating"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Si10FoundationE10truncatingSiAA8NSNumberC_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"truncating"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(truncating:)"},"pathComponents":["Int","init(truncating:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range up to, but not including, its upper bound."},{"text":""},{"text":"Use the prefix half-open range operator (prefix `..<`) to create a"},{"text":"partial range of any type that conforms to the `Comparable` protocol."},{"text":"This example creates a `PartialRangeUpTo<Double>` instance that includes"},{"text":"any value less than `5.0`."},{"text":""},{"text":"    let upToFive = ..<5.0"},{"text":""},{"text":"    upToFive.contains(3.14)       // true"},{"text":"    upToFive.contains(6.28)       // false"},{"text":"    upToFive.contains(5.0)        // false"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the start of the collection up to, but not"},{"text":"including, the partial range's upper bound."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[..<3])"},{"text":"    // Prints \"[10, 20, 30]\""},{"text":""},{"text":"- Parameter maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `maximum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"..<(_:)"},"pathComponents":["Int32","..<(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7CGFloatV","spelling":"CGFloat"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s6UInt32V10FoundationEyAbC7CGFloatVcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7CGFloatV","spelling":"CGFloat"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["UInt32","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"name":"count"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSryqd__G_SitlF::SYNTHESIZED::s:s15EmptyCollectionV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:count:)"},"pathComponents":["EmptyCollection","copyBytes(to:count:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"DestinationType"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2geoiySbx_xtFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["UInt16",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"decodeIfPresent"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation26DecodableWithConfigurationP","spelling":"DecodableWithConfiguration"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"_"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":".Type"}],"name":""},{"declarationFragments":[{"kind":"identifier","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"}],"name":"configuration"}],"returns":[{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s24UnkeyedDecodingContainerP10FoundationE15decodeIfPresent_13configurationqd__Sgqd__m_0B13ConfigurationQyd__tKAC013DecodableWithI0Rd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"decodeIfPresent"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"?"}],"title":"decodeIfPresent(_:configuration:)"},"pathComponents":["UnkeyedDecodingContainer","decodeIfPresent(_:configuration:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"DecodableWithConfiguration","rhsPrecise":"s:10Foundation26DecodableWithConfigurationP"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SG","spelling":"RandomNumberGenerator"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range, using the given"},{"text":"generator as a source for randomness."},{"text":""},{"text":"Use this method to generate an integer within a specific range when you"},{"text":"are using a custom random number generator. This example creates three"},{"text":"new values in the range `1...100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1...100, using: &myGenerator))"},{"text":"    }"},{"text":"    // Prints \"7\""},{"text":"    // Prints \"44\""},{"text":"    // Prints \"21\""},{"text":""},{"text":"- Parameters:"},{"text":"  - range: The range in which to create a random value."},{"text":"  - generator: The random number generator to use when creating the"},{"text":"    new random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"},{"declarationFragments":[{"kind":"identifier","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"generator","name":"using"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:using:)"},"pathComponents":["Int64","random(in:using:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"RandomNumberGenerator","rhsPrecise":"s:SG"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is less than or equal to that of the second argument."},{"text":""},{"text":"This is the default implementation of the less-than-or-equal-to"},{"text":"operator (`<=`) for any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE2leoiySbx_xtFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["Int","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right."},{"text":""},{"text":"The `>>` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a left shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*. An overshift results in `-1` for a"},{"text":"  negative value of `lhs` or `0` for a nonnegative value."},{"text":"- Using any other value for `rhs` performs a right shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted right by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x >> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x >> 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a left shift"},{"text":"using `abs(rhs)`."},{"text":""},{"text":"    let a = x >> -3"},{"text":"    // a == 240                       // 0b11110000"},{"text":"    let b = x << 3"},{"text":"    // b == 240                       // 0b11110000"},{"text":""},{"text":"Right shift operations on negative values \"fill in\" the high bits with"},{"text":"ones instead of zeros."},{"text":""},{"text":"    let q: Int8 = -30                 // 0b11100010"},{"text":"    let r = q >> 2"},{"text":"    // r == -8                        // 0b11111000"},{"text":""},{"text":"    let s = q >> 11"},{"text":"    // s == -1                        // 0b11111111"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":">>(_:_:)"},"pathComponents":["UInt8",">>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"advanced"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"n"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a value that is offset the specified distance from this value."},{"text":""},{"text":"Use the `advanced(by:)` method in generic code to offset a value by a"},{"text":"specified distance. If you're working directly with numeric values, use"},{"text":"the addition operator (`+`) instead of this method."},{"text":""},{"text":"For a value `x`, a distance `n`, and a value `y = x.advanced(by: n)`,"},{"text":"`x.distance(to: y) == n`."},{"text":""},{"text":"- Parameter n: The distance to advance this value."},{"text":"- Returns: A value that is offset from this value by `n`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"n"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"internalName":"n","name":"by"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE8advanced2byxSi_tF::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"advanced"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"advanced(by:)"},"pathComponents":["Int8","advanced(by:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range."},{"text":""},{"text":"Use this method to generate an integer within a specific range. This"},{"text":"example creates three new values in the range `1...100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1...100))"},{"text":"    }"},{"text":"    // Prints \"53\""},{"text":"    // Prints \"64\""},{"text":"    // Prints \"5\""},{"text":""},{"text":"This method is equivalent to calling `random(in:using:)`, passing in the"},{"text":"system's default random generator."},{"text":""},{"text":"- Parameter range: The range in which to create a random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:)"},"pathComponents":["UInt64","random(in:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}],"docComment":{"lines":[{"text":"Creates a new value equal to zero."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsExycfc::SYNTHESIZED::s:Si"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}],"title":"init()"},"pathComponents":["Int","init()"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"failureReason"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"? { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation14LocalizedErrorPAAE13failureReasonSSSgvp::SYNTHESIZED::s:s13DecodingErrorO"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"failureReason"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"?"}],"title":"failureReason"},"pathComponents":["DecodingError","failureReason"],"swiftExtension":{"extendedModule":"Foundation"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range up to, and including, its upper bound."},{"text":""},{"text":"Use the prefix closed range operator (prefix `...`) to create a partial"},{"text":"range of any type that conforms to the `Comparable` protocol. This"},{"text":"example creates a `PartialRangeThrough<Double>` instance that includes"},{"text":"any value less than or equal to `5.0`."},{"text":""},{"text":"    let throughFive = ...5.0"},{"text":""},{"text":"    throughFive.contains(4.0)     // true"},{"text":"    throughFive.contains(5.0)     // true"},{"text":"    throughFive.contains(6.0)     // false"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the start of the collection up to, and"},{"text":"including, the partial range's upper bound."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[...3])"},{"text":"    // Prints \"[10, 20, 30, 40]\""},{"text":""},{"text":"- Parameter maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `maximum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:)"},"pathComponents":["Int64","...(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9lastRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:s10ArraySliceV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"lastRange(of:)"},"pathComponents":["ArraySlice","lastRange(of:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"D"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"},{"declarationFragments":[{"kind":"identifier","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"y"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SxsE2eeoiySbx_xtFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"==(_:_:)"},"pathComponents":["Int64","==(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SG","spelling":"RandomNumberGenerator"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range, using the given"},{"text":"generator as a source for randomness."},{"text":""},{"text":"Use this method to generate an integer within a specific range when you"},{"text":"are using a custom random number generator. This example creates three"},{"text":"new values in the range `1...100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1...100, using: &myGenerator))"},{"text":"    }"},{"text":"    // Prints \"7\""},{"text":"    // Prints \"44\""},{"text":"    // Prints \"21\""},{"text":""},{"text":"- Parameters:"},{"text":"  - range: The range in which to create a random value."},{"text":"  - generator: The random number generator to use when creating the"},{"text":"    new random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"},{"declarationFragments":[{"kind":"identifier","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"generator","name":"using"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:using:)"},"pathComponents":["UInt","random(in:using:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"RandomNumberGenerator","rhsPrecise":"s:SG"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"errorDescription"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"? { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation14LocalizedErrorPAAE16errorDescriptionSSSgvp::SYNTHESIZED::s:s13DecodingErrorO"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"errorDescription"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"?"}],"title":"errorDescription"},"pathComponents":["DecodingError","errorDescription"],"swiftExtension":{"extendedModule":"Foundation"}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"name":"count"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSw_SitF::SYNTHESIZED::s:s10ArraySliceV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:count:)"},"pathComponents":["ArraySlice","copyBytes(to:count:)"],"swiftExtension":{"extendedModule":"Foundation"}},{"accessLevel":"public","availability":[{"deprecated":{"major":4},"domain":"Swift","renamed":"init(truncating:)"}],"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s5Int64V10FoundationEyAbC8NSNumberCcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Int64","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"hash"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"hasher"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV","spelling":"Hasher"},{"kind":"text","spelling":")"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"hasher"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV","spelling":"Hasher"}],"internalName":"hasher","name":"into"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF::SYNTHESIZED::s:SS10FoundationE8EncodingV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"hash"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV","spelling":"Hasher"},{"kind":"text","spelling":")"}],"title":"hash(into:)"},"pathComponents":["String","Encoding","hash(into:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"Hashable","rhsPrecise":"s:SH"},{"kind":"conformance","lhs":"Self.RawValue","rhs":"Hashable","rhsPrecise":"s:SH"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"Hashable","rhsPrecise":"s:SH"},{"kind":"conformance","lhs":"Self.RawValue","rhs":"Hashable","rhsPrecise":"s:SH"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range up to, and including, its upper bound."},{"text":""},{"text":"Use the prefix closed range operator (prefix `...`) to create a partial"},{"text":"range of any type that conforms to the `Comparable` protocol. This"},{"text":"example creates a `PartialRangeThrough<Double>` instance that includes"},{"text":"any value less than or equal to `5.0`."},{"text":""},{"text":"    let throughFive = ...5.0"},{"text":""},{"text":"    throughFive.contains(4.0)     // true"},{"text":"    throughFive.contains(5.0)     // true"},{"text":"    throughFive.contains(6.0)     // false"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the start of the collection up to, and"},{"text":"including, the partial range's upper bound."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[...3])"},{"text":"    // Prints \"[10, 20, 30, 40]\""},{"text":""},{"text":"- Parameter maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `maximum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:)"},"pathComponents":["UInt","...(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7CGFloatV","spelling":"CGFloat"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s5Int64V10FoundationEyAbC7CGFloatVcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7CGFloatV","spelling":"CGFloat"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Int64","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"regions"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s15CollectionOfOneV","spelling":"CollectionOfOne"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","spelling":"Array"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","spelling":"UInt8"},{"kind":"text","spelling":">> { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Sa10Foundations5UInt8VRszlE7regionss15CollectionOfOneVySayACGGvp"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"regions"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s15CollectionOfOneV","spelling":"CollectionOfOne"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","spelling":"Array"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","spelling":"UInt8"},{"kind":"text","spelling":">>"}],"title":"regions"},"pathComponents":["Array","regions"],"swiftExtension":{"constraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"},{"declarationFragments":[{"kind":"identifier","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"y"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SxsE2eeoiySbx_xtFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"==(_:_:)"},"pathComponents":["UInt","==(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2leoiySbx_xtFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["Int16","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"from"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSw_qd__tSXRd__5BoundQyd__5IndexRtzlF::SYNTHESIZED::s:s5SliceV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:from:)"},"pathComponents":["Slice","copyBytes(to:from:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is less than that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"less-than operator (`<`), even if the two instances are of different"},{"text":"types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1loiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<(_:_:)"},"pathComponents":["UInt8","<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"integerLiteral"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"integerLiteral"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(integerLiteral:)"},"pathComponents":["Int16","init(integerLiteral:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"_ExpressibleByBuiltinIntegerLiteral","rhsPrecise":"s:s35_ExpressibleByBuiltinIntegerLiteralP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"_ExpressibleByBuiltinIntegerLiteral","rhsPrecise":"s:s35_ExpressibleByBuiltinIntegerLiteralP"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"name":"count"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSryqd__G_SitlF::SYNTHESIZED::s:s15ContiguousArrayV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:count:)"},"pathComponents":["ContiguousArray","copyBytes(to:count:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"DestinationType"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2neoiySbx_xtFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"!=(_:_:)"},"pathComponents":["UInt16","!=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range up to, but not including, its upper bound."},{"text":""},{"text":"Use the prefix half-open range operator (prefix `..<`) to create a"},{"text":"partial range of any type that conforms to the `Comparable` protocol."},{"text":"This example creates a `PartialRangeUpTo<Double>` instance that includes"},{"text":"any value less than `5.0`."},{"text":""},{"text":"    let upToFive = ..<5.0"},{"text":""},{"text":"    upToFive.contains(3.14)       // true"},{"text":"    upToFive.contains(6.28)       // false"},{"text":"    upToFive.contains(5.0)        // false"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the start of the collection up to, but not"},{"text":"including, the partial range's upper bound."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[..<3])"},{"text":"    // Prints \"[10, 20, 30]\""},{"text":""},{"text":"- Parameter maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `maximum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"..<(_:)"},"pathComponents":["UInt32","..<(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"deprecated":{"major":4},"domain":"Swift","renamed":"init(truncating:)"}],"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Si10FoundationEySiAA8NSNumberCcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Int","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Sf10FoundationE7exactlySfSgAA8NSNumberC_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["Float","init(exactly:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":11}},{"domain":"iOS","introduced":{"major":9,"minor":0}}],"declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedUppercase"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"An uppercase version of the string that is produced using the current"},{"text":"locale."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE18localizedUppercaseSSvp"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedUppercase"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"localizedUppercase"},"pathComponents":["StringProtocol","localizedUppercase"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is greater than or equal to that of the second argument."},{"text":""},{"text":"This is the default implementation of the greater-than-or-equal-to operator"},{"text":"(`>=`) for any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."},{"text":"- Returns: `true` if `lhs` is greater than or equal to `rhs`; otherwise,"},{"text":"  `false`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE2geoiySbx_xtFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["Int",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates a new integer value from the given string."},{"text":""},{"text":"The string passed as `description` may begin with a plus or minus sign"},{"text":"character (`+` or `-`), followed by one or more numeric digits (`0-9`)."},{"text":""},{"text":"    let x = Int(\"123\")"},{"text":"    // x == 123"},{"text":""},{"text":"If `description` is in an invalid format, or if the value it denotes in"},{"text":"base 10 is not representable, the result is `nil`. For example, the"},{"text":"following conversions result in `nil`:"},{"text":""},{"text":"    Int(\" 100\")                       // Includes whitespace"},{"text":"    Int(\"21-50\")                      // Invalid format"},{"text":"    Int(\"ff6600\")                     // Characters out of bounds"},{"text":"    Int(\"10000000000000000000000000\") // Out of range"},{"text":""},{"text":"- Parameter description: The ASCII representation of a number."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsEyxSgSScfc::SYNTHESIZED::s:Si"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Int","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"clamping"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance with the representable value that's closest to the"},{"text":"given integer."},{"text":""},{"text":"If the value passed as `source` is greater than the maximum representable"},{"text":"value in this type, the result is the type's `max` value. If `source` is"},{"text":"less than the smallest representable value in this type, the result is"},{"text":"the type's `min` value."},{"text":""},{"text":"In this example, `x` is initialized as an `Int8` instance by clamping"},{"text":"`500` to the range `-128...127`, and `y` is initialized as a `UInt`"},{"text":"instance by clamping `-500` to the range `0...UInt.max`."},{"text":""},{"text":"    let x = Int8(clamping: 500)"},{"text":"    // x == 127"},{"text":"    // x == Int8.max"},{"text":""},{"text":"    let y = UInt(clamping: -500)"},{"text":"    // y == 0"},{"text":""},{"text":"- Parameter source: An integer to convert to this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc::SYNTHESIZED::s:Su"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"clamping"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"init(clamping:)"},"pathComponents":["UInt","init(clamping:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"decode"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation26DecodableWithConfigurationP","spelling":"DecodableWithConfiguration"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"_"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":".Type"}],"name":""},{"declarationFragments":[{"kind":"identifier","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"}],"name":"configuration"}],"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s24UnkeyedDecodingContainerP10FoundationE6decode_13configurationqd__qd__m_0B13ConfigurationQyd__tKAC013DecodableWithG0Rd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"decode"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}],"title":"decode(_:configuration:)"},"pathComponents":["UnkeyedDecodingContainer","decode(_:configuration:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"DecodableWithConfiguration","rhsPrecise":"s:10Foundation26DecodableWithConfigurationP"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range."},{"text":""},{"text":"Use this method to generate an integer within a specific range. This"},{"text":"example creates three new values in the range `1...100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1...100))"},{"text":"    }"},{"text":"    // Prints \"53\""},{"text":"    // Prints \"64\""},{"text":"    // Prints \"5\""},{"text":""},{"text":"This method is equivalent to calling `random(in:using:)`, passing in the"},{"text":"system's default random generator."},{"text":""},{"text":"- Parameter range: The range in which to create a random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:)"},"pathComponents":["UInt32","random(in:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range extending upward from a lower bound."},{"text":""},{"text":"Use the postfix range operator (postfix `...`) to create a partial range"},{"text":"of any type that conforms to the `Comparable` protocol. This example"},{"text":"creates a `PartialRangeFrom<Double>` instance that includes any value"},{"text":"greater than or equal to `5.0`."},{"text":""},{"text":"    let atLeastFive = 5.0..."},{"text":""},{"text":"    atLeastFive.contains(4.0)     // false"},{"text":"    atLeastFive.contains(5.0)     // true"},{"text":"    atLeastFive.contains(6.0)     // true"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the partial range's lower bound up to the end"},{"text":"of the collection."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[3...])"},{"text":"    // Prints \"[40, 50, 60, 70]\""},{"text":""},{"text":"- Parameter minimum: The lower bound for the range."},{"text":""},{"text":"- Precondition: `minimum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:)"},"pathComponents":["Int64","...(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SG","spelling":"RandomNumberGenerator"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range, using the given"},{"text":"generator as a source for randomness."},{"text":""},{"text":"Use this method to generate an integer within a specific range when you"},{"text":"are using a custom random number generator. This example creates three"},{"text":"new values in the range `1..<100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1..<100, using: &myGenerator))"},{"text":"    }"},{"text":"    // Prints \"7\""},{"text":"    // Prints \"44\""},{"text":"    // Prints \"21\""},{"text":""},{"text":"- Note: The algorithm used to create random values may change in a future"},{"text":"  version of Swift. If you're passing a generator that results in the"},{"text":"  same sequence of integer values each time you run your program, that"},{"text":"  sequence may change when your program is compiled using a different"},{"text":"  version of Swift."},{"text":""},{"text":"- Parameters:"},{"text":"  - range: The range in which to create a random value."},{"text":"    `range` must not be empty."},{"text":"  - generator: The random number generator to use when creating the"},{"text":"    new random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"},{"declarationFragments":[{"kind":"identifier","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"generator","name":"using"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:using:)"},"pathComponents":["Int64","random(in:using:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"RandomNumberGenerator","rhsPrecise":"s:SG"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSryqd__G_tlF::SYNTHESIZED::s:s10ArraySliceV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:)"},"pathComponents":["ArraySlice","copyBytes(to:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"DestinationType"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the product of the two given values, wrapping the result in case"},{"text":"of any overflow."},{"text":""},{"text":"The overflow multiplication operator (`&*`) discards any bits that"},{"text":"overflow the fixed width of the integer type. In the following example,"},{"text":"the product of `10` and `50` is greater than the maximum representable"},{"text":"`Int8` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    let x: Int8 = 10 &* 5"},{"text":"    // x == 50"},{"text":"    let y: Int8 = 10 &* 50"},{"text":"    // y == -12 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to multiply."},{"text":"  - rhs: The second value to multiply."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&*(_:_:)"},"pathComponents":["Int","&*(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Encoding"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE8EncodingV"},"kind":{"displayName":"Structure","identifier":"swift.struct"},"names":{"navigator":[{"kind":"identifier","spelling":"Encoding"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Encoding"}],"title":"String.Encoding"},"pathComponents":["String","Encoding"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range."},{"text":""},{"text":"Use this method to generate an integer within a specific range. This"},{"text":"example creates three new values in the range `1..<100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1..<100))"},{"text":"    }"},{"text":"    // Prints \"53\""},{"text":"    // Prints \"64\""},{"text":"    // Prints \"5\""},{"text":""},{"text":"This method is equivalent to calling the version that takes a generator,"},{"text":"passing in the system's default random generator."},{"text":""},{"text":"- Parameter range: The range in which to create a random value."},{"text":"  `range` must not be empty."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:)"},"pathComponents":["UInt","random(in:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7CGFloatV","spelling":"CGFloat"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s6UInt64V10FoundationEyAbC7CGFloatVcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7CGFloatV","spelling":"CGFloat"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["UInt64","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"hashValue"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SYsSHRzSH8RawValueSYRpzrlE04hashB0Sivp::SYNTHESIZED::s:SS10FoundationE8EncodingV"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"hashValue"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"hashValue"},"pathComponents":["String","Encoding","hashValue"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"Hashable","rhsPrecise":"s:SH"},{"kind":"conformance","lhs":"Self.RawValue","rhs":"Hashable","rhsPrecise":"s:SH"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isSigned"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A Boolean value indicating whether this type is a signed integer type."},{"text":""},{"text":"This property is always `true` for signed integer types."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZsE8isSignedSbvpZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isSigned"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"isSigned"},"pathComponents":["Int8","isSigned"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"name":"count"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSryqd__G_SitlF::SYNTHESIZED::s:Sa"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:count:)"},"pathComponents":["Array","copyBytes(to:count:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"DestinationType"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2geoiySbx_xtFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["Int16",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the given integer, if it can be represented"},{"text":"exactly."},{"text":""},{"text":"If the value passed as `source` is not representable exactly, the result"},{"text":"is `nil`. In the following example, the constant `x` is successfully"},{"text":"created from a value of `100`, while the attempt to initialize the"},{"text":"constant `y` from `1_000` fails because the `Int8` type can represent"},{"text":"`127` at maximum:"},{"text":""},{"text":"    let x = Int8(exactly: 100)"},{"text":"    // x == Optional(100)"},{"text":"    let y = Int8(exactly: 1_000)"},{"text":"    // y == nil"},{"text":""},{"text":"- Parameter source: A value to convert to this type of integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["UInt16","init(exactly:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"},{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"name":"count"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSryqd__G_SitlF::SYNTHESIZED::s:s10ArraySliceV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:count:)"},"pathComponents":["ArraySlice","copyBytes(to:count:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"DestinationType"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"distance"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"docComment":{"lines":[{"text":"Returns the distance from this value to the given value, expressed as a"},{"text":"stride."},{"text":""},{"text":"For two values `x` and `y`, and a distance `n = x.distance(to: y)`,"},{"text":"`x.advanced(by: n) == y`."},{"text":""},{"text":"- Parameter other: The value to calculate the distance to."},{"text":"- Returns: The distance from this value to `other`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"other","name":"to"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE8distance2toSix_tF::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"distance"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"distance(to:)"},"pathComponents":["Int16","distance(to:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s5Int16V10FoundationE7exactlyABSgAC8NSNumberC_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["Int16","init(exactly:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s5Int64V10FoundationE7exactlyABSgAC8NSNumberC_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["Int64","init(exactly:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2neoiySbx_xtFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"!=(_:_:)"},"pathComponents":["Int8","!=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"write"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"toFile"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"path"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"atomically"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"useAuxiliaryFile"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"encoding"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"enc"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"docComment":{"lines":[{"text":"Writes the contents of the `String` to a file at a given"},{"text":"path using a given encoding."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"path"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"path","name":"toFile"},{"declarationFragments":[{"kind":"identifier","spelling":"useAuxiliaryFile"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"internalName":"useAuxiliaryFile","name":"atomically"},{"declarationFragments":[{"kind":"identifier","spelling":"enc"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"internalName":"enc","name":"encoding"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE5write6toFile10atomically8encodingyqd___SbSSAAE8EncodingVtKSyRd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"write"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"toFile"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"atomically"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"title":"write(toFile:atomically:encoding:)"},"pathComponents":["StringProtocol","write(toFile:atomically:encoding:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"name":"count"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSw_SitF::SYNTHESIZED::s:s15ContiguousArrayV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:count:)"},"pathComponents":["ContiguousArray","copyBytes(to:count:)"],"swiftExtension":{"extendedModule":"Foundation"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9lastRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:s15EmptyCollectionV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"lastRange(of:)"},"pathComponents":["EmptyCollection","lastRange(of:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"D"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range."},{"text":""},{"text":"Use this method to generate an integer within a specific range. This"},{"text":"example creates three new values in the range `1..<100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1..<100))"},{"text":"    }"},{"text":"    // Prints \"53\""},{"text":"    // Prints \"64\""},{"text":"    // Prints \"5\""},{"text":""},{"text":"This method is equivalent to calling the version that takes a generator,"},{"text":"passing in the system's default random generator."},{"text":""},{"text":"- Parameter range: The range in which to create a random value."},{"text":"  `range` must not be empty."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:)"},"pathComponents":["UInt32","random(in:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSryqd__G_tlF::SYNTHESIZED::s:Sa"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:)"},"pathComponents":["Array","copyBytes(to:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"DestinationType"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range extending upward from a lower bound."},{"text":""},{"text":"Use the postfix range operator (postfix `...`) to create a partial range"},{"text":"of any type that conforms to the `Comparable` protocol. This example"},{"text":"creates a `PartialRangeFrom<Double>` instance that includes any value"},{"text":"greater than or equal to `5.0`."},{"text":""},{"text":"    let atLeastFive = 5.0..."},{"text":""},{"text":"    atLeastFive.contains(4.0)     // false"},{"text":"    atLeastFive.contains(5.0)     // true"},{"text":"    atLeastFive.contains(6.0)     // true"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the partial range's lower bound up to the end"},{"text":"of the collection."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[3...])"},{"text":"    // Prints \"[40, 50, 60, 70]\""},{"text":""},{"text":"- Parameter minimum: The lower bound for the range."},{"text":""},{"text":"- Precondition: `minimum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:)"},"pathComponents":["Int32","...(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7CGFloatV","spelling":"CGFloat"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s5UInt8V10FoundationEyAbC7CGFloatVcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7CGFloatV","spelling":"CGFloat"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["UInt8","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1goiySbx_xtFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["Int16",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"clamping"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance with the representable value that's closest to the"},{"text":"given integer."},{"text":""},{"text":"If the value passed as `source` is greater than the maximum representable"},{"text":"value in this type, the result is the type's `max` value. If `source` is"},{"text":"less than the smallest representable value in this type, the result is"},{"text":"the type's `min` value."},{"text":""},{"text":"In this example, `x` is initialized as an `Int8` instance by clamping"},{"text":"`500` to the range `-128...127`, and `y` is initialized as a `UInt`"},{"text":"instance by clamping `-500` to the range `0...UInt.max`."},{"text":""},{"text":"    let x = Int8(clamping: 500)"},{"text":"    // x == 127"},{"text":"    // x == Int8.max"},{"text":""},{"text":"    let y = UInt(clamping: -500)"},{"text":"    // y == 0"},{"text":""},{"text":"- Parameter source: An integer to convert to this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"clamping"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"init(clamping:)"},"pathComponents":["UInt32","init(clamping:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the sum of the two given values, wrapping the result in case of"},{"text":"any overflow."},{"text":""},{"text":"The overflow addition operator (`&+`) discards any bits that overflow the"},{"text":"fixed width of the integer type. In the following example, the sum of"},{"text":"`100` and `121` is greater than the maximum representable `Int8` value,"},{"text":"so the result is the partial value after discarding the overflowing"},{"text":"bits."},{"text":""},{"text":"    let x: Int8 = 10 &+ 21"},{"text":"    // x == 31"},{"text":"    let y: Int8 = 100 &+ 121"},{"text":"    // y == -35 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to add."},{"text":"  - rhs: The second value to add."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&+(_:_:)"},"pathComponents":["Int","&+(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SG","spelling":"RandomNumberGenerator"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range, using the given"},{"text":"generator as a source for randomness."},{"text":""},{"text":"Use this method to generate an integer within a specific range when you"},{"text":"are using a custom random number generator. This example creates three"},{"text":"new values in the range `1..<100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1..<100, using: &myGenerator))"},{"text":"    }"},{"text":"    // Prints \"7\""},{"text":"    // Prints \"44\""},{"text":"    // Prints \"21\""},{"text":""},{"text":"- Note: The algorithm used to create random values may change in a future"},{"text":"  version of Swift. If you're passing a generator that results in the"},{"text":"  same sequence of integer values each time you run your program, that"},{"text":"  sequence may change when your program is compiled using a different"},{"text":"  version of Swift."},{"text":""},{"text":"- Parameters:"},{"text":"  - range: The range in which to create a random value."},{"text":"    `range` must not be empty."},{"text":"  - generator: The random number generator to use when creating the"},{"text":"    new random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"},{"declarationFragments":[{"kind":"identifier","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"generator","name":"using"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:using:)"},"pathComponents":["Int32","random(in:using:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"RandomNumberGenerator","rhsPrecise":"s:SG"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"recoverySuggestion"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"? { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation14LocalizedErrorPAAE18recoverySuggestionSSSgvp::SYNTHESIZED::s:s13EncodingErrorO"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"recoverySuggestion"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"?"}],"title":"recoverySuggestion"},"pathComponents":["EncodingError","recoverySuggestion"],"swiftExtension":{"extendedModule":"Foundation"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range."},{"text":""},{"text":"Use this method to generate an integer within a specific range. This"},{"text":"example creates three new values in the range `1...100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1...100))"},{"text":"    }"},{"text":"    // Prints \"53\""},{"text":"    // Prints \"64\""},{"text":"    // Prints \"5\""},{"text":""},{"text":"This method is equivalent to calling `random(in:using:)`, passing in the"},{"text":"system's default random generator."},{"text":""},{"text":"- Parameter range: The range in which to create a random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:)"},"pathComponents":["UInt","random(in:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a closed range that contains both of its bounds."},{"text":""},{"text":"Use the closed range operator (`...`) to create a closed range of any type"},{"text":"that conforms to the `Comparable` protocol. This example creates a"},{"text":"`ClosedRange<Character>` from \"a\" up to, and including, \"z\"."},{"text":""},{"text":"    let lowercase = \"a\"...\"z\""},{"text":"    print(lowercase.contains(\"z\"))"},{"text":"    // Prints \"true\""},{"text":""},{"text":"- Parameters:"},{"text":"  - minimum: The lower bound for the range."},{"text":"  - maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `minimum <= maximum`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"},{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:_:)"},"pathComponents":["Int","...(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"uppercased"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"locale"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV","spelling":"Locale"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"docComment":{"lines":[{"text":"Returns a version of the string with all letters"},{"text":"converted to uppercase, taking into account the specified"},{"text":"locale."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"locale"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV","spelling":"Locale"},{"kind":"text","spelling":"?"}],"internalName":"locale","name":"with"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE10uppercased4withSSAA6LocaleVSg_tF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"uppercased"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV","spelling":"Locale"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"uppercased(with:)"},"pathComponents":["StringProtocol","uppercased(with:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"truncating"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s5Int64V10FoundationE10truncatingAbC8NSNumberC_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"truncating"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(truncating:)"},"pathComponents":["Int64","init(truncating:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range up to, but not including, its upper bound."},{"text":""},{"text":"Use the prefix half-open range operator (prefix `..<`) to create a"},{"text":"partial range of any type that conforms to the `Comparable` protocol."},{"text":"This example creates a `PartialRangeUpTo<Double>` instance that includes"},{"text":"any value less than `5.0`."},{"text":""},{"text":"    let upToFive = ..<5.0"},{"text":""},{"text":"    upToFive.contains(3.14)       // true"},{"text":"    upToFive.contains(6.28)       // false"},{"text":"    upToFive.contains(5.0)        // false"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the start of the collection up to, but not"},{"text":"including, the partial range's upper bound."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[..<3])"},{"text":"    // Prints \"[10, 20, 30]\""},{"text":""},{"text":"- Parameter maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `maximum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"..<(_:)"},"pathComponents":["UInt","..<(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is greater than that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"greater-than operator (`>`), even if the two instances are of different"},{"text":"types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1goiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["UInt8",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"text"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"radix"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" = 10) "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"docComment":{"lines":[{"text":"Creates a new integer value from the given string and radix."},{"text":""},{"text":"The string passed as `text` may begin with a plus or minus sign character"},{"text":"(`+` or `-`), followed by one or more numeric digits (`0-9`) or letters"},{"text":"(`a-z` or `A-Z`). Parsing of the string is case insensitive."},{"text":""},{"text":"    let x = Int(\"123\")"},{"text":"    // x == 123"},{"text":""},{"text":"    let y = Int(\"-123\", radix: 8)"},{"text":"    // y == -83"},{"text":"    let y = Int(\"+123\", radix: 8)"},{"text":"    // y == +83"},{"text":""},{"text":"    let z = Int(\"07b\", radix: 16)"},{"text":"    // z == 123"},{"text":""},{"text":"If `text` is in an invalid format or contains characters that are out of"},{"text":"bounds for the given `radix`, or if the value it denotes in the given"},{"text":"`radix` is not representable, the result is `nil`. For example, the"},{"text":"following conversions result in `nil`:"},{"text":""},{"text":"    Int(\" 100\")                       // Includes whitespace"},{"text":"    Int(\"21-50\")                      // Invalid format"},{"text":"    Int(\"ff6600\")                     // Characters out of bounds"},{"text":"    Int(\"zzzzzzzzzzzzz\", radix: 36)   // Out of range"},{"text":""},{"text":"- Parameters:"},{"text":"  - text: The ASCII representation of a number in the radix passed as"},{"text":"    `radix`."},{"text":"  - radix: The radix, or base, to use for converting `text` to an integer"},{"text":"    value. `radix` must be in the range `2...36`. The default is 10."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc::SYNTHESIZED::s:Si"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"radix"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":")"}],"title":"init(_:radix:)"},"pathComponents":["Int","init(_:radix:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"S","rhs":"StringProtocol","rhsPrecise":"s:Sy"}],"parameters":[{"depth":1,"index":0,"name":"S"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"name":"count"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSw_SitF::SYNTHESIZED::s:Sa"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:count:)"},"pathComponents":["Array","copyBytes(to:count:)"],"swiftExtension":{"extendedModule":"Foundation"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range up to, and including, its upper bound."},{"text":""},{"text":"Use the prefix closed range operator (prefix `...`) to create a partial"},{"text":"range of any type that conforms to the `Comparable` protocol. This"},{"text":"example creates a `PartialRangeThrough<Double>` instance that includes"},{"text":"any value less than or equal to `5.0`."},{"text":""},{"text":"    let throughFive = ...5.0"},{"text":""},{"text":"    throughFive.contains(4.0)     // true"},{"text":"    throughFive.contains(5.0)     // true"},{"text":"    throughFive.contains(6.0)     // false"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the start of the collection up to, and"},{"text":"including, the partial range's upper bound."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[...3])"},{"text":"    // Prints \"[10, 20, 30, 40]\""},{"text":""},{"text":"- Parameter maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `maximum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:)"},"pathComponents":["UInt32","...(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"},{"declarationFragments":[{"kind":"identifier","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"y"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SxsE2eeoiySbx_xtFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"==(_:_:)"},"pathComponents":["UInt32","==(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSryqd__G_tlF::SYNTHESIZED::s:s15ContiguousArrayV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:)"},"pathComponents":["ContiguousArray","copyBytes(to:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"DestinationType"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"failureReason"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"? { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation14LocalizedErrorPAAE13failureReasonSSSgvp::SYNTHESIZED::s:s13EncodingErrorO"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"failureReason"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"?"}],"title":"failureReason"},"pathComponents":["EncodingError","failureReason"],"swiftExtension":{"extendedModule":"Foundation"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3ggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":">>=(_:_:)"},"pathComponents":["UInt8",">>=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"}],"internalName":"ptr","name":"to"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSw_tF::SYNTHESIZED::s:s15EmptyCollectionV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:)"},"pathComponents":["EmptyCollection","copyBytes(to:)"],"swiftExtension":{"extendedModule":"Foundation"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SG","spelling":"RandomNumberGenerator"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range, using the given"},{"text":"generator as a source for randomness."},{"text":""},{"text":"Use this method to generate an integer within a specific range when you"},{"text":"are using a custom random number generator. This example creates three"},{"text":"new values in the range `1..<100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1..<100, using: &myGenerator))"},{"text":"    }"},{"text":"    // Prints \"7\""},{"text":"    // Prints \"44\""},{"text":"    // Prints \"21\""},{"text":""},{"text":"- Note: The algorithm used to create random values may change in a future"},{"text":"  version of Swift. If you're passing a generator that results in the"},{"text":"  same sequence of integer values each time you run your program, that"},{"text":"  sequence may change when your program is compiled using a different"},{"text":"  version of Swift."},{"text":""},{"text":"- Parameters:"},{"text":"  - range: The range in which to create a random value."},{"text":"    `range` must not be empty."},{"text":"  - generator: The random number generator to use when creating the"},{"text":"    new random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"},{"declarationFragments":[{"kind":"identifier","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"generator","name":"using"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:using:)"},"pathComponents":["UInt64","random(in:using:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"RandomNumberGenerator","rhsPrecise":"s:SG"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range extending upward from a lower bound."},{"text":""},{"text":"Use the postfix range operator (postfix `...`) to create a partial range"},{"text":"of any type that conforms to the `Comparable` protocol. This example"},{"text":"creates a `PartialRangeFrom<Double>` instance that includes any value"},{"text":"greater than or equal to `5.0`."},{"text":""},{"text":"    let atLeastFive = 5.0..."},{"text":""},{"text":"    atLeastFive.contains(4.0)     // false"},{"text":"    atLeastFive.contains(5.0)     // true"},{"text":"    atLeastFive.contains(6.0)     // true"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the partial range's lower bound up to the end"},{"text":"of the collection."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[3...])"},{"text":"    // Prints \"[40, 50, 60, 70]\""},{"text":""},{"text":"- Parameter minimum: The lower bound for the range."},{"text":""},{"text":"- Precondition: `minimum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:)"},"pathComponents":["UInt64","...(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SG","spelling":"RandomNumberGenerator"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range, using the given"},{"text":"generator as a source for randomness."},{"text":""},{"text":"Use this method to generate an integer within a specific range when you"},{"text":"are using a custom random number generator. This example creates three"},{"text":"new values in the range `1...100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1...100, using: &myGenerator))"},{"text":"    }"},{"text":"    // Prints \"7\""},{"text":"    // Prints \"44\""},{"text":"    // Prints \"21\""},{"text":""},{"text":"- Parameters:"},{"text":"  - range: The range in which to create a random value."},{"text":"  - generator: The random number generator to use when creating the"},{"text":"    new random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"},{"declarationFragments":[{"kind":"identifier","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"generator","name":"using"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:using:)"},"pathComponents":["UInt32","random(in:using:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"RandomNumberGenerator","rhsPrecise":"s:SG"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"advanced"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"n"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a value that is offset the specified distance from this value."},{"text":""},{"text":"Use the `advanced(by:)` method in generic code to offset a value by a"},{"text":"specified distance. If you're working directly with numeric values, use"},{"text":"the addition operator (`+`) instead of this method."},{"text":""},{"text":"For a value `x`, a distance `n`, and a value `y = x.advanced(by: n)`,"},{"text":"`x.distance(to: y) == n`."},{"text":""},{"text":"- Parameter n: The distance to advance this value."},{"text":"- Returns: A value that is offset from this value by `n`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"n"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"internalName":"n","name":"by"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE8advanced2byxSi_tF::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"advanced"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"advanced(by:)"},"pathComponents":["Int16","advanced(by:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"}],"internalName":"ptr","name":"to"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSw_tF::SYNTHESIZED::s:s15ContiguousArrayV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:)"},"pathComponents":["ContiguousArray","copyBytes(to:)"],"swiftExtension":{"extendedModule":"Foundation"}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSryqd__G_tlF::SYNTHESIZED::s:s15EmptyCollectionV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:)"},"pathComponents":["EmptyCollection","copyBytes(to:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"DestinationType"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range up to, and including, its upper bound."},{"text":""},{"text":"Use the prefix closed range operator (prefix `...`) to create a partial"},{"text":"range of any type that conforms to the `Comparable` protocol. This"},{"text":"example creates a `PartialRangeThrough<Double>` instance that includes"},{"text":"any value less than or equal to `5.0`."},{"text":""},{"text":"    let throughFive = ...5.0"},{"text":""},{"text":"    throughFive.contains(4.0)     // true"},{"text":"    throughFive.contains(5.0)     // true"},{"text":"    throughFive.contains(6.0)     // false"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the start of the collection up to, and"},{"text":"including, the partial range's upper bound."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[...3])"},{"text":"    // Prints \"[10, 20, 30, 40]\""},{"text":""},{"text":"- Parameter maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `maximum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:)"},"pathComponents":["Int32","...(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"},{"declarationFragments":[{"kind":"identifier","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"y"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SxsE2eeoiySbx_xtFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"==(_:_:)"},"pathComponents":["Int32","==(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"clamping"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance with the representable value that's closest to the"},{"text":"given integer."},{"text":""},{"text":"If the value passed as `source` is greater than the maximum representable"},{"text":"value in this type, the result is the type's `max` value. If `source` is"},{"text":"less than the smallest representable value in this type, the result is"},{"text":"the type's `min` value."},{"text":""},{"text":"In this example, `x` is initialized as an `Int8` instance by clamping"},{"text":"`500` to the range `-128...127`, and `y` is initialized as a `UInt`"},{"text":"instance by clamping `-500` to the range `0...UInt.max`."},{"text":""},{"text":"    let x = Int8(clamping: 500)"},{"text":"    // x == 127"},{"text":"    // x == Int8.max"},{"text":""},{"text":"    let y = UInt(clamping: -500)"},{"text":"    // y == 0"},{"text":""},{"text":"- Parameter source: An integer to convert to this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"clamping"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"init(clamping:)"},"pathComponents":["UInt64","init(clamping:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9lastRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:Sa"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"lastRange(of:)"},"pathComponents":["Array","lastRange(of:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"D"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7CGFloatV","spelling":"CGFloat"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s5Int16V10FoundationEyAbC7CGFloatVcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7CGFloatV","spelling":"CGFloat"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Int16","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range."},{"text":""},{"text":"Use this method to generate an integer within a specific range. This"},{"text":"example creates three new values in the range `1..<100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1..<100))"},{"text":"    }"},{"text":"    // Prints \"53\""},{"text":"    // Prints \"64\""},{"text":"    // Prints \"5\""},{"text":""},{"text":"This method is equivalent to calling the version that takes a generator,"},{"text":"passing in the system's default random generator."},{"text":""},{"text":"- Parameter range: The range in which to create a random value."},{"text":"  `range` must not be empty."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:)"},"pathComponents":["UInt64","random(in:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking right shift operator (`&>>`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking right shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &>> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &>> 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&>>(_:_:)"},"pathComponents":["UInt8","&>>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the difference of the two given values, wrapping the result in"},{"text":"case of any overflow."},{"text":""},{"text":"The overflow subtraction operator (`&-`) discards any bits that overflow"},{"text":"the fixed width of the integer type. In the following example, the"},{"text":"difference of `10` and `21` is less than zero, the minimum representable"},{"text":"`UInt` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    let x: UInt8 = 21 &- 10"},{"text":"    // x == 11"},{"text":"    let y: UInt8 = 10 &- 21"},{"text":"    // y == 245 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A numeric value."},{"text":"  - rhs: The value to subtract from `lhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&-(_:_:)"},"pathComponents":["Int","&-(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1goiySbx_xtFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["UInt16",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"errorDescription"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"? { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation14LocalizedErrorPAAE16errorDescriptionSSSgvp::SYNTHESIZED::s:s13EncodingErrorO"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"errorDescription"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"?"}],"title":"errorDescription"},"pathComponents":["EncodingError","errorDescription"],"swiftExtension":{"extendedModule":"Foundation"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SG","spelling":"RandomNumberGenerator"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range, using the given"},{"text":"generator as a source for randomness."},{"text":""},{"text":"Use this method to generate an integer within a specific range when you"},{"text":"are using a custom random number generator. This example creates three"},{"text":"new values in the range `1...100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1...100, using: &myGenerator))"},{"text":"    }"},{"text":"    // Prints \"7\""},{"text":"    // Prints \"44\""},{"text":"    // Prints \"21\""},{"text":""},{"text":"- Parameters:"},{"text":"  - range: The range in which to create a random value."},{"text":"  - generator: The random number generator to use when creating the"},{"text":"    new random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"},{"declarationFragments":[{"kind":"identifier","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"generator","name":"using"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:using:)"},"pathComponents":["Int32","random(in:using:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"RandomNumberGenerator","rhsPrecise":"s:SG"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"from"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexRtzr0_lF::SYNTHESIZED::s:s5SliceV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:from:)"},"pathComponents":["Slice","copyBytes(to:from:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"DestinationType"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","availability":[{"deprecated":{"major":4},"domain":"Swift","renamed":"init(truncating:)"}],"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s5Int16V10FoundationEyAbC8NSNumberCcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Int16","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"distance"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"docComment":{"lines":[{"text":"Returns the distance from this value to the given value, expressed as a"},{"text":"stride."},{"text":""},{"text":"For two values `x` and `y`, and a distance `n = x.distance(to: y)`,"},{"text":"`x.advanced(by: n) == y`."},{"text":""},{"text":"- Parameter other: The value to calculate the distance to."},{"text":"- Returns: The distance from this value to `other`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"other","name":"to"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE8distance2toSix_tF::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"distance"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"distance(to:)"},"pathComponents":["UInt16","distance(to:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range up to, but not including, its upper bound."},{"text":""},{"text":"Use the prefix half-open range operator (prefix `..<`) to create a"},{"text":"partial range of any type that conforms to the `Comparable` protocol."},{"text":"This example creates a `PartialRangeUpTo<Double>` instance that includes"},{"text":"any value less than `5.0`."},{"text":""},{"text":"    let upToFive = ..<5.0"},{"text":""},{"text":"    upToFive.contains(3.14)       // true"},{"text":"    upToFive.contains(6.28)       // false"},{"text":"    upToFive.contains(5.0)        // false"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the start of the collection up to, but not"},{"text":"including, the partial range's upper bound."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[..<3])"},{"text":"    // Prints \"[10, 20, 30]\""},{"text":""},{"text":"- Parameter maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `maximum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"..<(_:)"},"pathComponents":["Int64","..<(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"write"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"url"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV","spelling":"URL"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"atomically"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"useAuxiliaryFile"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"encoding"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"enc"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"docComment":{"lines":[{"text":"Writes the contents of the `String` to the URL specified"},{"text":"by url using the specified encoding."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"url"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV","spelling":"URL"}],"internalName":"url","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"useAuxiliaryFile"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"internalName":"useAuxiliaryFile","name":"atomically"},{"declarationFragments":[{"kind":"identifier","spelling":"enc"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"internalName":"enc","name":"encoding"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE5write2to10atomically8encodingyAA3URLV_SbSSAAE8EncodingVtKF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"write"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV","spelling":"URL"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"atomically"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"title":"write(to:atomically:encoding:)"},"pathComponents":["StringProtocol","write(to:atomically:encoding:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2leoiySbx_xtFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["Int8","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a half-open range that contains its lower bound but not its upper"},{"text":"bound."},{"text":""},{"text":"Use the half-open range operator (`..<`) to create a range of any type"},{"text":"that conforms to the `Comparable` protocol. This example creates a"},{"text":"`Range<Double>` from zero up to, but not including, 5.0."},{"text":""},{"text":"    let lessThanFive = 0.0..<5.0"},{"text":"    print(lessThanFive.contains(3.14))  // Prints \"true\""},{"text":"    print(lessThanFive.contains(5.0))   // Prints \"false\""},{"text":""},{"text":"- Parameters:"},{"text":"  - minimum: The lower bound for the range."},{"text":"  - maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `minimum <= maximum`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"},{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"..<(_:_:)"},"pathComponents":["Int","..<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"integerLiteral"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"integerLiteral"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(integerLiteral:)"},"pathComponents":["Int8","init(integerLiteral:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"_ExpressibleByBuiltinIntegerLiteral","rhsPrecise":"s:s35_ExpressibleByBuiltinIntegerLiteralP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"_ExpressibleByBuiltinIntegerLiteral","rhsPrecise":"s:s35_ExpressibleByBuiltinIntegerLiteralP"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SG","spelling":"RandomNumberGenerator"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range, using the given"},{"text":"generator as a source for randomness."},{"text":""},{"text":"Use this method to generate an integer within a specific range when you"},{"text":"are using a custom random number generator. This example creates three"},{"text":"new values in the range `1...100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1...100, using: &myGenerator))"},{"text":"    }"},{"text":"    // Prints \"7\""},{"text":"    // Prints \"44\""},{"text":"    // Prints \"21\""},{"text":""},{"text":"- Parameters:"},{"text":"  - range: The range in which to create a random value."},{"text":"  - generator: The random number generator to use when creating the"},{"text":"    new random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"},{"declarationFragments":[{"kind":"identifier","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"generator","name":"using"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:using:)"},"pathComponents":["UInt64","random(in:using:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"RandomNumberGenerator","rhsPrecise":"s:SG"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"}],"internalName":"ptr","name":"to"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSw_tF::SYNTHESIZED::s:Sa"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:)"},"pathComponents":["Array","copyBytes(to:)"],"swiftExtension":{"extendedModule":"Foundation"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7CGFloatV","spelling":"CGFloat"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s6UInt16V10FoundationEyAbC7CGFloatVcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7CGFloatV","spelling":"CGFloat"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["UInt16","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is greater than or equal to that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"greater-than-or-equal-to operator (`>=`), even if the two instances are"},{"text":"of different types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2geoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["UInt8",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9lastRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:s15ContiguousArrayV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"lastRange(of:)"},"pathComponents":["ContiguousArray","lastRange(of:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"D"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"name":"count"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSw_SitF::SYNTHESIZED::s:s15EmptyCollectionV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:count:)"},"pathComponents":["EmptyCollection","copyBytes(to:count:)"],"swiftExtension":{"extendedModule":"Foundation"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range."},{"text":""},{"text":"Use this method to generate an integer within a specific range. This"},{"text":"example creates three new values in the range `1..<100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1..<100))"},{"text":"    }"},{"text":"    // Prints \"53\""},{"text":"    // Prints \"64\""},{"text":"    // Prints \"5\""},{"text":""},{"text":"This method is equivalent to calling the version that takes a generator,"},{"text":"passing in the system's default random generator."},{"text":""},{"text":"- Parameter range: The range in which to create a random value."},{"text":"  `range` must not be empty."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:)"},"pathComponents":["Int32","random(in:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range extending upward from a lower bound."},{"text":""},{"text":"Use the postfix range operator (postfix `...`) to create a partial range"},{"text":"of any type that conforms to the `Comparable` protocol. This example"},{"text":"creates a `PartialRangeFrom<Double>` instance that includes any value"},{"text":"greater than or equal to `5.0`."},{"text":""},{"text":"    let atLeastFive = 5.0..."},{"text":""},{"text":"    atLeastFive.contains(4.0)     // false"},{"text":"    atLeastFive.contains(5.0)     // true"},{"text":"    atLeastFive.contains(6.0)     // true"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the partial range's lower bound up to the end"},{"text":"of the collection."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[3...])"},{"text":"    // Prints \"[40, 50, 60, 70]\""},{"text":""},{"text":"- Parameter minimum: The lower bound for the range."},{"text":""},{"text":"- Precondition: `minimum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:)"},"pathComponents":["UInt32","...(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"clamping"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance with the representable value that's closest to the"},{"text":"given integer."},{"text":""},{"text":"If the value passed as `source` is greater than the maximum representable"},{"text":"value in this type, the result is the type's `max` value. If `source` is"},{"text":"less than the smallest representable value in this type, the result is"},{"text":"the type's `min` value."},{"text":""},{"text":"In this example, `x` is initialized as an `Int8` instance by clamping"},{"text":"`500` to the range `-128...127`, and `y` is initialized as a `UInt`"},{"text":"instance by clamping `-500` to the range `0...UInt.max`."},{"text":""},{"text":"    let x = Int8(clamping: 500)"},{"text":"    // x == 127"},{"text":"    // x == Int8.max"},{"text":""},{"text":"    let y = UInt(clamping: -500)"},{"text":"    // y == 0"},{"text":""},{"text":"- Parameter source: An integer to convert to this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"clamping"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"init(clamping:)"},"pathComponents":["Int32","init(clamping:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"advanced"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"n"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a value that is offset the specified distance from this value."},{"text":""},{"text":"Use the `advanced(by:)` method in generic code to offset a value by a"},{"text":"specified distance. If you're working directly with numeric values, use"},{"text":"the addition operator (`+`) instead of this method."},{"text":""},{"text":"For a value `x`, a distance `n`, and a value `y = x.advanced(by: n)`,"},{"text":"`x.distance(to: y) == n`."},{"text":""},{"text":"- Parameter n: The distance to advance this value."},{"text":"- Returns: A value that is offset from this value by `n`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"n"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"internalName":"n","name":"by"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE8advanced2byxSi_tF::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"advanced"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"advanced(by:)"},"pathComponents":["UInt16","advanced(by:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withUnsafeBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:SW","spelling":"UnsafeRawBufferPointer"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:SW","spelling":"UnsafeRawBufferPointer"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"}],"name":"body"}],"returns":[{"kind":"typeIdentifier","spelling":"R"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sw10FoundationE15withUnsafeBytesyxxSWKXEKlF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withUnsafeBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","preciseIdentifier":"s:SW","spelling":"UnsafeRawBufferPointer"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"}],"title":"withUnsafeBytes(_:)"},"pathComponents":["UnsafeMutableRawBufferPointer","withUnsafeBytes(_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":0,"index":0,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range."},{"text":""},{"text":"Use this method to generate an integer within a specific range. This"},{"text":"example creates three new values in the range `1...100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1...100))"},{"text":"    }"},{"text":"    // Prints \"53\""},{"text":"    // Prints \"64\""},{"text":"    // Prints \"5\""},{"text":""},{"text":"This method is equivalent to calling `random(in:using:)`, passing in the"},{"text":"system's default random generator."},{"text":""},{"text":"- Parameter range: The range in which to create a random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:)"},"pathComponents":["Int64","random(in:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SG","spelling":"RandomNumberGenerator"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range, using the given"},{"text":"generator as a source for randomness."},{"text":""},{"text":"Use this method to generate an integer within a specific range when you"},{"text":"are using a custom random number generator. This example creates three"},{"text":"new values in the range `1..<100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1..<100, using: &myGenerator))"},{"text":"    }"},{"text":"    // Prints \"7\""},{"text":"    // Prints \"44\""},{"text":"    // Prints \"21\""},{"text":""},{"text":"- Note: The algorithm used to create random values may change in a future"},{"text":"  version of Swift. If you're passing a generator that results in the"},{"text":"  same sequence of integer values each time you run your program, that"},{"text":"  sequence may change when your program is compiled using a different"},{"text":"  version of Swift."},{"text":""},{"text":"- Parameters:"},{"text":"  - range: The range in which to create a random value."},{"text":"    `range` must not be empty."},{"text":"  - generator: The random number generator to use when creating the"},{"text":"    new random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"},{"declarationFragments":[{"kind":"identifier","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"generator","name":"using"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:using:)"},"pathComponents":["UInt32","random(in:using:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"RandomNumberGenerator","rhsPrecise":"s:SG"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2geoiySbx_xtFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["Int8",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isSigned"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A Boolean value indicating whether this type is a signed integer type."},{"text":""},{"text":"This property is always `true` for signed integer types."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZsE8isSignedSbvpZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isSigned"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"isSigned"},"pathComponents":["Int16","isSigned"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range up to, and including, its upper bound."},{"text":""},{"text":"Use the prefix closed range operator (prefix `...`) to create a partial"},{"text":"range of any type that conforms to the `Comparable` protocol. This"},{"text":"example creates a `PartialRangeThrough<Double>` instance that includes"},{"text":"any value less than or equal to `5.0`."},{"text":""},{"text":"    let throughFive = ...5.0"},{"text":""},{"text":"    throughFive.contains(4.0)     // true"},{"text":"    throughFive.contains(5.0)     // true"},{"text":"    throughFive.contains(6.0)     // false"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the start of the collection up to, and"},{"text":"including, the partial range's upper bound."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[...3])"},{"text":"    // Prints \"[10, 20, 30, 40]\""},{"text":""},{"text":"- Parameter maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `maximum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:)"},"pathComponents":["UInt64","...(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Adds two values and stores the result in the left-hand-side variable,"},{"text":"wrapping any overflow."},{"text":""},{"text":"The masking addition assignment operator (`&+=`) silently wraps any"},{"text":"overflow that occurs during the operation. In the following example, the"},{"text":"sum of `100` and `121` is greater than the maximum representable `Int8`"},{"text":"value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    var x: Int8 = 10"},{"text":"    x &+= 21"},{"text":"    // x == 31"},{"text":"    var y: Int8 = 100"},{"text":"    y &+= 121"},{"text":"    // y == -35 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to add."},{"text":"  - rhs: The second value to add."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&+=(_:_:)"},"pathComponents":["Int","&+=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7CGFloatV","spelling":"CGFloat"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s4Int8V10FoundationEyAbC7CGFloatVcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7CGFloatV","spelling":"CGFloat"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Int8","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"},{"declarationFragments":[{"kind":"identifier","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"y"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SxsE2eeoiySbx_xtFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"==(_:_:)"},"pathComponents":["UInt64","==(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"truncating"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s5Int16V10FoundationE10truncatingAbC8NSNumberC_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"truncating"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(truncating:)"},"pathComponents":["Int16","init(truncating:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is less than or equal to that of the second argument."},{"text":""},{"text":"This is the default implementation of the less-than-or-equal-to"},{"text":"operator (`<=`) for any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE2leoiySbx_xtFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["UInt32","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right."},{"text":""},{"text":"The `>>` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a left shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*. An overshift results in `-1` for a"},{"text":"  negative value of `lhs` or `0` for a nonnegative value."},{"text":"- Using any other value for `rhs` performs a right shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted right by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x >> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x >> 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a left shift"},{"text":"using `abs(rhs)`."},{"text":""},{"text":"    let a = x >> -3"},{"text":"    // a == 240                       // 0b11110000"},{"text":"    let b = x << 3"},{"text":"    // b == 240                       // 0b11110000"},{"text":""},{"text":"Right shift operations on negative values \"fill in\" the high bits with"},{"text":"ones instead of zeros."},{"text":""},{"text":"    let q: Int8 = -30                 // 0b11100010"},{"text":"    let r = q >> 2"},{"text":"    // r == -8                        // 0b11111000"},{"text":""},{"text":"    let s = q >> 11"},{"text":"    // s == -1                        // 0b11111111"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":">>(_:_:)"},"pathComponents":["UInt16",">>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a closed range that contains both of its bounds."},{"text":""},{"text":"Use the closed range operator (`...`) to create a closed range of any type"},{"text":"that conforms to the `Comparable` protocol. This example creates a"},{"text":"`ClosedRange<Character>` from \"a\" up to, and including, \"z\"."},{"text":""},{"text":"    let lowercase = \"a\"...\"z\""},{"text":"    print(lowercase.contains(\"z\"))"},{"text":"    // Prints \"true\""},{"text":""},{"text":"- Parameters:"},{"text":"  - minimum: The lower bound for the range."},{"text":"  - maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `minimum <= maximum`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"},{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:_:)"},"pathComponents":["Int64","...(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a half-open range that contains its lower bound but not its upper"},{"text":"bound."},{"text":""},{"text":"Use the half-open range operator (`..<`) to create a range of any type"},{"text":"that conforms to the `Comparable` protocol. This example creates a"},{"text":"`Range<Double>` from zero up to, but not including, 5.0."},{"text":""},{"text":"    let lessThanFive = 0.0..<5.0"},{"text":"    print(lessThanFive.contains(3.14))  // Prints \"true\""},{"text":"    print(lessThanFive.contains(5.0))   // Prints \"false\""},{"text":""},{"text":"- Parameters:"},{"text":"  - minimum: The lower bound for the range."},{"text":"  - maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `minimum <= maximum`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"},{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"..<(_:_:)"},"pathComponents":["UInt","..<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"ascii"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE8EncodingV5asciiACvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"ascii"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"title":"ascii"},"pathComponents":["String","Encoding","ascii"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is greater than or equal to that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"greater-than-or-equal-to operator (`>=`), even if the two instances are"},{"text":"of different types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2geoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["Int8",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"text"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"radix"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" = 10) "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"docComment":{"lines":[{"text":"Creates a new integer value from the given string and radix."},{"text":""},{"text":"The string passed as `text` may begin with a plus or minus sign character"},{"text":"(`+` or `-`), followed by one or more numeric digits (`0-9`) or letters"},{"text":"(`a-z` or `A-Z`). Parsing of the string is case insensitive."},{"text":""},{"text":"    let x = Int(\"123\")"},{"text":"    // x == 123"},{"text":""},{"text":"    let y = Int(\"-123\", radix: 8)"},{"text":"    // y == -83"},{"text":"    let y = Int(\"+123\", radix: 8)"},{"text":"    // y == +83"},{"text":""},{"text":"    let z = Int(\"07b\", radix: 16)"},{"text":"    // z == 123"},{"text":""},{"text":"If `text` is in an invalid format or contains characters that are out of"},{"text":"bounds for the given `radix`, or if the value it denotes in the given"},{"text":"`radix` is not representable, the result is `nil`. For example, the"},{"text":"following conversions result in `nil`:"},{"text":""},{"text":"    Int(\" 100\")                       // Includes whitespace"},{"text":"    Int(\"21-50\")                      // Invalid format"},{"text":"    Int(\"ff6600\")                     // Characters out of bounds"},{"text":"    Int(\"zzzzzzzzzzzzz\", radix: 36)   // Out of range"},{"text":""},{"text":"- Parameters:"},{"text":"  - text: The ASCII representation of a number in the radix passed as"},{"text":"    `radix`."},{"text":"  - radix: The radix, or base, to use for converting `text` to an integer"},{"text":"    value. `radix` must be in the range `2...36`. The default is 10."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"radix"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":")"}],"title":"init(_:radix:)"},"pathComponents":["Int64","init(_:radix:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"S","rhs":"StringProtocol","rhsPrecise":"s:Sy"}],"parameters":[{"depth":1,"index":0,"name":"S"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the difference of the two given values, wrapping the result in"},{"text":"case of any overflow."},{"text":""},{"text":"The overflow subtraction operator (`&-`) discards any bits that overflow"},{"text":"the fixed width of the integer type. In the following example, the"},{"text":"difference of `10` and `21` is less than zero, the minimum representable"},{"text":"`UInt` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    let x: UInt8 = 21 &- 10"},{"text":"    // x == 11"},{"text":"    let y: UInt8 = 10 &- 21"},{"text":"    // y == 245 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A numeric value."},{"text":"  - rhs: The value to subtract from `lhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&-(_:_:)"},"pathComponents":["UInt","&-(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is greater than or equal to that of the second argument."},{"text":""},{"text":"This is the default implementation of the greater-than-or-equal-to operator"},{"text":"(`>=`) for any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."},{"text":"- Returns: `true` if `lhs` is greater than or equal to `rhs`; otherwise,"},{"text":"  `false`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE2geoiySbx_xtFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["UInt64",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates a new integer value from the given string."},{"text":""},{"text":"The string passed as `description` may begin with a plus or minus sign"},{"text":"character (`+` or `-`), followed by one or more numeric digits (`0-9`)."},{"text":""},{"text":"    let x = Int(\"123\")"},{"text":"    // x == 123"},{"text":""},{"text":"If `description` is in an invalid format, or if the value it denotes in"},{"text":"base 10 is not representable, the result is `nil`. For example, the"},{"text":"following conversions result in `nil`:"},{"text":""},{"text":"    Int(\" 100\")                       // Includes whitespace"},{"text":"    Int(\"21-50\")                      // Invalid format"},{"text":"    Int(\"ff6600\")                     // Characters out of bounds"},{"text":"    Int(\"10000000000000000000000000\") // Out of range"},{"text":""},{"text":"- Parameter description: The ASCII representation of a number."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsEyxSgSScfc::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["UInt64","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}],"docComment":{"lines":[{"text":"Creates a new value equal to zero."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsExycfc::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}],"title":"init()"},"pathComponents":["UInt32","init()"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE10firstRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:Sa"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"firstRange(of:)"},"pathComponents":["Array","firstRange(of:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"D"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the product of the two given values, wrapping the result in case"},{"text":"of any overflow."},{"text":""},{"text":"The overflow multiplication operator (`&*`) discards any bits that"},{"text":"overflow the fixed width of the integer type. In the following example,"},{"text":"the product of `10` and `50` is greater than the maximum representable"},{"text":"`Int8` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    let x: Int8 = 10 &* 5"},{"text":"    // x == 50"},{"text":"    let y: Int8 = 10 &* 50"},{"text":"    // y == -12 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to multiply."},{"text":"  - rhs: The second value to multiply."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&*(_:_:)"},"pathComponents":["UInt64","&*(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2geoiySbx_xtFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["UInt8",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9lastRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:s5SliceV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"lastRange(of:in:)"},"pathComponents":["Slice","lastRange(of:in:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"D"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking right shift operator (`&>>`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking right shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &>> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &>> 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&>>(_:_:)"},"pathComponents":["Int8","&>>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Adds two values and stores the result in the left-hand-side variable,"},{"text":"wrapping any overflow."},{"text":""},{"text":"The masking addition assignment operator (`&+=`) silently wraps any"},{"text":"overflow that occurs during the operation. In the following example, the"},{"text":"sum of `100` and `121` is greater than the maximum representable `Int8`"},{"text":"value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    var x: Int8 = 10"},{"text":"    x &+= 21"},{"text":"    // x == 31"},{"text":"    var y: Int8 = 100"},{"text":"    y &+= 121"},{"text":"    // y == -35 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to add."},{"text":"  - rhs: The second value to add."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&+=(_:_:)"},"pathComponents":["UInt","&+=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"magnitude"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The magnitude of this value."},{"text":""},{"text":"Every unsigned integer is its own magnitude, so for any value `x`,"},{"text":"`x == x.magnitude`."},{"text":""},{"text":"The global `abs(_:)` function provides more familiar syntax when you need"},{"text":"to find an absolute value. In addition, because `abs(_:)` always returns"},{"text":"a value of the same type, even in a generic context, using the function"},{"text":"instead of the `magnitude` property is encouraged."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUsE9magnitudexvp::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"magnitude"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"magnitude"},"pathComponents":["UInt8","magnitude"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is less than or equal to that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"less-than-or-equal-to operator (`<=`), even if the two instances are of"},{"text":"different types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2leoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["UInt16","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"integerLiteral"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"integerLiteral"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(integerLiteral:)"},"pathComponents":["UInt8","init(integerLiteral:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"_ExpressibleByBuiltinIntegerLiteral","rhsPrecise":"s:s35_ExpressibleByBuiltinIntegerLiteralP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"_ExpressibleByBuiltinIntegerLiteral","rhsPrecise":"s:s35_ExpressibleByBuiltinIntegerLiteralP"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"folding"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"options"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE14CompareOptionsa","spelling":"CompareOptions"},{"kind":"text","spelling":" = [], "},{"kind":"externalParam","spelling":"locale"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV","spelling":"Locale"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"docComment":{"lines":[{"text":"Returns a string with the given character folding options"},{"text":"applied."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"options"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE14CompareOptionsa","spelling":"CompareOptions"}],"name":"options"},{"declarationFragments":[{"kind":"identifier","spelling":"locale"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV","spelling":"Locale"},{"kind":"text","spelling":"?"}],"name":"locale"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE7folding7options6localeSSAA8NSStringC14CompareOptionsV_AA6LocaleVSgtF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"folding"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"options"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE14CompareOptionsa","spelling":"CompareOptions"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"locale"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV","spelling":"Locale"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"folding(options:locale:)"},"pathComponents":["StringProtocol","folding(options:locale:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is less than that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"less-than operator (`<`), even if the two instances are of different"},{"text":"types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1loiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<(_:_:)"},"pathComponents":["Int16","<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the product of the two given values, wrapping the result in case"},{"text":"of any overflow."},{"text":""},{"text":"The overflow multiplication operator (`&*`) discards any bits that"},{"text":"overflow the fixed width of the integer type. In the following example,"},{"text":"the product of `10` and `50` is greater than the maximum representable"},{"text":"`Int8` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    let x: Int8 = 10 &* 5"},{"text":"    // x == 50"},{"text":"    let y: Int8 = 10 &* 50"},{"text":"    // y == -12 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to multiply."},{"text":"  - rhs: The second value to multiply."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&*(_:_:)"},"pathComponents":["Int32","&*(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Subtracts the second value from the first and stores the difference in the"},{"text":"left-hand-side variable, wrapping any overflow."},{"text":""},{"text":"The masking subtraction assignment operator (`&-=`) silently wraps any"},{"text":"overflow that occurs during the operation. In the following example, the"},{"text":"difference of `10` and `21` is less than zero, the minimum representable"},{"text":"`UInt` value, so the result is the result is the partial value after"},{"text":"discarding the overflowing bits."},{"text":""},{"text":"    var x: Int8 = 21"},{"text":"    x &-= 10"},{"text":"    // x == 11"},{"text":"    var y: UInt8 = 10"},{"text":"    y &-= 21"},{"text":"    // y == 245 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A numeric value."},{"text":"  - rhs: The value to subtract from `lhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&-=(_:_:)"},"pathComponents":["UInt32","&-=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2leoiySbx_xtFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["UInt8","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates a new integer value from the given string."},{"text":""},{"text":"The string passed as `description` may begin with a plus or minus sign"},{"text":"character (`+` or `-`), followed by one or more numeric digits (`0-9`)."},{"text":""},{"text":"    let x = Int(\"123\")"},{"text":"    // x == 123"},{"text":""},{"text":"If `description` is in an invalid format, or if the value it denotes in"},{"text":"base 10 is not representable, the result is `nil`. For example, the"},{"text":"following conversions result in `nil`:"},{"text":""},{"text":"    Int(\" 100\")                       // Includes whitespace"},{"text":"    Int(\"21-50\")                      // Invalid format"},{"text":"    Int(\"ff6600\")                     // Characters out of bounds"},{"text":"    Int(\"10000000000000000000000000\") // Out of range"},{"text":""},{"text":"- Parameter description: The ASCII representation of a number."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsEyxSgSScfc::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Int32","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nextstep"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE8EncodingV8nextstepACvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nextstep"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"title":"nextstep"},"pathComponents":["String","Encoding","nextstep"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the sum of the two given values, wrapping the result in case of"},{"text":"any overflow."},{"text":""},{"text":"The overflow addition operator (`&+`) discards any bits that overflow the"},{"text":"fixed width of the integer type. In the following example, the sum of"},{"text":"`100` and `121` is greater than the maximum representable `Int8` value,"},{"text":"so the result is the partial value after discarding the overflowing"},{"text":"bits."},{"text":""},{"text":"    let x: Int8 = 10 &+ 21"},{"text":"    // x == 31"},{"text":"    let y: Int8 = 100 &+ 121"},{"text":"    // y == -35 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to add."},{"text":"  - rhs: The second value to add."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&+(_:_:)"},"pathComponents":["Int64","&+(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE10firstRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:s15ContiguousArrayV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"firstRange(of:)"},"pathComponents":["ContiguousArray","firstRange(of:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"D"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is greater than or equal to that of the second argument."},{"text":""},{"text":"This is the default implementation of the greater-than-or-equal-to operator"},{"text":"(`>=`) for any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."},{"text":"- Returns: `true` if `lhs` is greater than or equal to `rhs`; otherwise,"},{"text":"  `false`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE2geoiySbx_xtFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["Int32",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the product of the two given values, wrapping the result in case"},{"text":"of any overflow."},{"text":""},{"text":"The overflow multiplication operator (`&*`) discards any bits that"},{"text":"overflow the fixed width of the integer type. In the following example,"},{"text":"the product of `10` and `50` is greater than the maximum representable"},{"text":"`Int8` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    let x: Int8 = 10 &* 5"},{"text":"    // x == 50"},{"text":"    let y: Int8 = 10 &* 50"},{"text":"    // y == -12 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to multiply."},{"text":"  - rhs: The second value to multiply."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&*(_:_:)"},"pathComponents":["UInt32","&*(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Subtracts the second value from the first and stores the difference in the"},{"text":"left-hand-side variable, wrapping any overflow."},{"text":""},{"text":"The masking subtraction assignment operator (`&-=`) silently wraps any"},{"text":"overflow that occurs during the operation. In the following example, the"},{"text":"difference of `10` and `21` is less than zero, the minimum representable"},{"text":"`UInt` value, so the result is the result is the partial value after"},{"text":"discarding the overflowing bits."},{"text":""},{"text":"    var x: Int8 = 21"},{"text":"    x &-= 10"},{"text":"    // x == 11"},{"text":"    var y: UInt8 = 10"},{"text":"    y &-= 21"},{"text":"    // y == 245 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A numeric value."},{"text":"  - rhs: The value to subtract from `lhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&-=(_:_:)"},"pathComponents":["Int32","&-=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is greater than that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"greater-than operator (`>`), even if the two instances are of different"},{"text":"types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1goiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["Int8",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range."},{"text":""},{"text":"Use this method to generate an integer within a specific range. This"},{"text":"example creates three new values in the range `1...100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1...100))"},{"text":"    }"},{"text":"    // Prints \"53\""},{"text":"    // Prints \"64\""},{"text":"    // Prints \"5\""},{"text":""},{"text":"This method is equivalent to calling `random(in:using:)`, passing in the"},{"text":"system's default random generator."},{"text":""},{"text":"- Parameter range: The range in which to create a random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2inxSNyxG_tFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:)"},"pathComponents":["Int","random(in:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates a new integer value from the given string."},{"text":""},{"text":"The string passed as `description` may begin with a plus or minus sign"},{"text":"character (`+` or `-`), followed by one or more numeric digits (`0-9`)."},{"text":""},{"text":"    let x = Int(\"123\")"},{"text":"    // x == 123"},{"text":""},{"text":"If `description` is in an invalid format, or if the value it denotes in"},{"text":"base 10 is not representable, the result is `nil`. For example, the"},{"text":"following conversions result in `nil`:"},{"text":""},{"text":"    Int(\" 100\")                       // Includes whitespace"},{"text":"    Int(\"21-50\")                      // Invalid format"},{"text":"    Int(\"ff6600\")                     // Characters out of bounds"},{"text":"    Int(\"10000000000000000000000000\") // Out of range"},{"text":""},{"text":"- Parameter description: The ASCII representation of a number."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsEyxSgSScfc::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["UInt32","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}],"docComment":{"lines":[{"text":"Creates a new value equal to zero."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsExycfc::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}],"title":"init()"},"pathComponents":["UInt64","init()"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"helpAnchor"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"? { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation14LocalizedErrorPAAE10helpAnchorSSSgvp::SYNTHESIZED::s:s13EncodingErrorO"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"helpAnchor"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"?"}],"title":"helpAnchor"},"pathComponents":["EncodingError","helpAnchor"],"swiftExtension":{"extendedModule":"Foundation"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE10firstRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:s15EmptyCollectionV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"firstRange(of:)"},"pathComponents":["EmptyCollection","firstRange(of:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"D"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the given integer, if it can be represented"},{"text":"exactly."},{"text":""},{"text":"If the value passed as `source` is not representable exactly, the result"},{"text":"is `nil`. In the following example, the constant `x` is successfully"},{"text":"created from a value of `100`, while the attempt to initialize the"},{"text":"constant `y` from `1_000` fails because the `Int8` type can represent"},{"text":"`127` at maximum:"},{"text":""},{"text":"    let x = Int8(exactly: 100)"},{"text":"    // x == Optional(100)"},{"text":"    let y = Int8(exactly: 1_000)"},{"text":"    // y == nil"},{"text":""},{"text":"- Parameter source: A value to convert to this type of integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["UInt8","init(exactly:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"},{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is greater than or equal to that of the second argument."},{"text":""},{"text":"This is the default implementation of the greater-than-or-equal-to operator"},{"text":"(`>=`) for any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."},{"text":"- Returns: `true` if `lhs` is greater than or equal to `rhs`; otherwise,"},{"text":"  `false`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE2geoiySbx_xtFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["UInt32",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"removingPercentEncoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"? { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A new string made from the string by replacing all percent encoded"},{"text":"sequences with the matching UTF-8 characters."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE23removingPercentEncodingSSSgvp"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"removingPercentEncoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"?"}],"title":"removingPercentEncoding"},"pathComponents":["StringProtocol","removingPercentEncoding"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the sum of the two given values, wrapping the result in case of"},{"text":"any overflow."},{"text":""},{"text":"The overflow addition operator (`&+`) discards any bits that overflow the"},{"text":"fixed width of the integer type. In the following example, the sum of"},{"text":"`100` and `121` is greater than the maximum representable `Int8` value,"},{"text":"so the result is the partial value after discarding the overflowing"},{"text":"bits."},{"text":""},{"text":"    let x: Int8 = 10 &+ 21"},{"text":"    // x == 31"},{"text":"    let y: Int8 = 100 &+ 121"},{"text":"    // y == -35 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to add."},{"text":"  - rhs: The second value to add."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&+(_:_:)"},"pathComponents":["UInt","&+(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE8EncodingV11descriptionSSvp"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"description"},"pathComponents":["String","Encoding","description"],"swiftExtension":{"extendedModule":"Foundation"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right."},{"text":""},{"text":"The `>>` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a left shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*. An overshift results in `-1` for a"},{"text":"  negative value of `lhs` or `0` for a nonnegative value."},{"text":"- Using any other value for `rhs` performs a right shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted right by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x >> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x >> 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a left shift"},{"text":"using `abs(rhs)`."},{"text":""},{"text":"    let a = x >> -3"},{"text":"    // a == 240                       // 0b11110000"},{"text":"    let b = x << 3"},{"text":"    // b == 240                       // 0b11110000"},{"text":""},{"text":"Right shift operations on negative values \"fill in\" the high bits with"},{"text":"ones instead of zeros."},{"text":""},{"text":"    let q: Int8 = -30                 // 0b11100010"},{"text":"    let r = q >> 2"},{"text":"    // r == -8                        // 0b11111000"},{"text":""},{"text":"    let s = q >> 11"},{"text":"    // s == -1                        // 0b11111111"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":">>(_:_:)"},"pathComponents":["Int16",">>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE10firstRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:s5SliceV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"firstRange(of:in:)"},"pathComponents":["Slice","firstRange(of:in:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"D"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3ggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":">>=(_:_:)"},"pathComponents":["Int8",">>=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Adds two values and stores the result in the left-hand-side variable,"},{"text":"wrapping any overflow."},{"text":""},{"text":"The masking addition assignment operator (`&+=`) silently wraps any"},{"text":"overflow that occurs during the operation. In the following example, the"},{"text":"sum of `100` and `121` is greater than the maximum representable `Int8`"},{"text":"value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    var x: Int8 = 10"},{"text":"    x &+= 21"},{"text":"    // x == 31"},{"text":"    var y: Int8 = 100"},{"text":"    y &+= 121"},{"text":"    // y == -35 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to add."},{"text":"  - rhs: The second value to add."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&+=(_:_:)"},"pathComponents":["Int64","&+=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is less than or equal to that of the second argument."},{"text":""},{"text":"This is the default implementation of the less-than-or-equal-to"},{"text":"operator (`<=`) for any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE2leoiySbx_xtFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["UInt64","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the difference of the two given values, wrapping the result in"},{"text":"case of any overflow."},{"text":""},{"text":"The overflow subtraction operator (`&-`) discards any bits that overflow"},{"text":"the fixed width of the integer type. In the following example, the"},{"text":"difference of `10` and `21` is less than zero, the minimum representable"},{"text":"`UInt` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    let x: UInt8 = 21 &- 10"},{"text":"    // x == 11"},{"text":"    let y: UInt8 = 10 &- 21"},{"text":"    // y == 245 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A numeric value."},{"text":"  - rhs: The value to subtract from `lhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&-(_:_:)"},"pathComponents":["Int64","&-(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Regions"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8RepeatedV","spelling":"Repeated"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","spelling":"Data"},{"kind":"text","spelling":">"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s8RepeatedV10Foundations5UInt8VRszlE7Regionsa"},"kind":{"displayName":"Type Alias","identifier":"swift.typealias"},"names":{"navigator":[{"kind":"identifier","spelling":"Regions"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Regions"}],"title":"Repeated.Regions"},"pathComponents":["Repeated","Regions"],"swiftExtension":{"constraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"parameters":[{"depth":0,"index":0,"name":"Element"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is less than that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"less-than operator (`<`), even if the two instances are of different"},{"text":"types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1loiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<(_:_:)"},"pathComponents":["UInt16","<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}],"docComment":{"lines":[{"text":"Creates a new value equal to zero."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsExycfc::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}],"title":"init()"},"pathComponents":["Int32","init()"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2neoiySbx_xtFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"!=(_:_:)"},"pathComponents":["UInt8","!=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the given integer."},{"text":""},{"text":"Use this initializer to convert from another integer type when you know"},{"text":"the value is within the bounds of this type. Passing a value that can't"},{"text":"be represented in this type results in a runtime error."},{"text":""},{"text":"In the following example, the constant `y` is successfully created from"},{"text":"`x`, an `Int` instance with a value of `100`. Because the `Int8` type"},{"text":"can represent `127` at maximum, the attempt to create `z` with a value"},{"text":"of `1000` results in a runtime error."},{"text":""},{"text":"    let x = 100"},{"text":"    let y = Int8(x)"},{"text":"    // y == 100"},{"text":"    let z = Int8(x * 10)"},{"text":"    // Error: Not enough bits to represent the given value"},{"text":""},{"text":"- Parameter source: A value to convert to this type of integer. The value"},{"text":"  passed as `source` must be representable in this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc::SYNTHESIZED::s:Su"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["UInt","init(_:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"},{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Subtracts the second value from the first and stores the difference in the"},{"text":"left-hand-side variable, wrapping any overflow."},{"text":""},{"text":"The masking subtraction assignment operator (`&-=`) silently wraps any"},{"text":"overflow that occurs during the operation. In the following example, the"},{"text":"difference of `10` and `21` is less than zero, the minimum representable"},{"text":"`UInt` value, so the result is the result is the partial value after"},{"text":"discarding the overflowing bits."},{"text":""},{"text":"    var x: Int8 = 21"},{"text":"    x &-= 10"},{"text":"    // x == 11"},{"text":"    var y: UInt8 = 10"},{"text":"    y &-= 21"},{"text":"    // y == 245 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A numeric value."},{"text":"  - rhs: The value to subtract from `lhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&-=(_:_:)"},"pathComponents":["UInt64","&-=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is less than or equal to that of the second argument."},{"text":""},{"text":"This is the default implementation of the less-than-or-equal-to"},{"text":"operator (`<=`) for any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE2leoiySbx_xtFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["Int32","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a closed range that contains both of its bounds."},{"text":""},{"text":"Use the closed range operator (`...`) to create a closed range of any type"},{"text":"that conforms to the `Comparable` protocol. This example creates a"},{"text":"`ClosedRange<Character>` from \"a\" up to, and including, \"z\"."},{"text":""},{"text":"    let lowercase = \"a\"...\"z\""},{"text":"    print(lowercase.contains(\"z\"))"},{"text":"    // Prints \"true\""},{"text":""},{"text":"- Parameters:"},{"text":"  - minimum: The lower bound for the range."},{"text":"  - maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `minimum <= maximum`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"},{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:_:)"},"pathComponents":["UInt","...(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range up to, but not including, its upper bound."},{"text":""},{"text":"Use the prefix half-open range operator (prefix `..<`) to create a"},{"text":"partial range of any type that conforms to the `Comparable` protocol."},{"text":"This example creates a `PartialRangeUpTo<Double>` instance that includes"},{"text":"any value less than `5.0`."},{"text":""},{"text":"    let upToFive = ..<5.0"},{"text":""},{"text":"    upToFive.contains(3.14)       // true"},{"text":"    upToFive.contains(6.28)       // false"},{"text":"    upToFive.contains(5.0)        // false"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the start of the collection up to, but not"},{"text":"including, the partial range's upper bound."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[..<3])"},{"text":"    // Prints \"[10, 20, 30]\""},{"text":""},{"text":"- Parameter maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `maximum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","spelling":"PartialRangeUpTo"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"..<(_:)"},"pathComponents":["Int","..<(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is less than or equal to that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"less-than-or-equal-to operator (`<=`), even if the two instances are of"},{"text":"different types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2leoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["Int16","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"regions"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8RepeatedV","spelling":"Repeated"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","spelling":"Data"},{"kind":"text","spelling":"> { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s8RepeatedV10Foundations5UInt8VRszlE7regionsAByAC4DataVGvp"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"regions"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8RepeatedV","spelling":"Repeated"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","spelling":"Data"},{"kind":"text","spelling":">"}],"title":"regions"},"pathComponents":["Repeated","regions"],"swiftExtension":{"constraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a half-open range that contains its lower bound but not its upper"},{"text":"bound."},{"text":""},{"text":"Use the half-open range operator (`..<`) to create a range of any type"},{"text":"that conforms to the `Comparable` protocol. This example creates a"},{"text":"`Range<Double>` from zero up to, but not including, 5.0."},{"text":""},{"text":"    let lessThanFive = 0.0..<5.0"},{"text":"    print(lessThanFive.contains(3.14))  // Prints \"true\""},{"text":"    print(lessThanFive.contains(5.0))   // Prints \"false\""},{"text":""},{"text":"- Parameters:"},{"text":"  - minimum: The lower bound for the range."},{"text":"  - maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `minimum <= maximum`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"},{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"..<(_:_:)"},"pathComponents":["Int64","..<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"text"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"radix"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" = 10) "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"docComment":{"lines":[{"text":"Creates a new integer value from the given string and radix."},{"text":""},{"text":"The string passed as `text` may begin with a plus or minus sign character"},{"text":"(`+` or `-`), followed by one or more numeric digits (`0-9`) or letters"},{"text":"(`a-z` or `A-Z`). Parsing of the string is case insensitive."},{"text":""},{"text":"    let x = Int(\"123\")"},{"text":"    // x == 123"},{"text":""},{"text":"    let y = Int(\"-123\", radix: 8)"},{"text":"    // y == -83"},{"text":"    let y = Int(\"+123\", radix: 8)"},{"text":"    // y == +83"},{"text":""},{"text":"    let z = Int(\"07b\", radix: 16)"},{"text":"    // z == 123"},{"text":""},{"text":"If `text` is in an invalid format or contains characters that are out of"},{"text":"bounds for the given `radix`, or if the value it denotes in the given"},{"text":"`radix` is not representable, the result is `nil`. For example, the"},{"text":"following conversions result in `nil`:"},{"text":""},{"text":"    Int(\" 100\")                       // Includes whitespace"},{"text":"    Int(\"21-50\")                      // Invalid format"},{"text":"    Int(\"ff6600\")                     // Characters out of bounds"},{"text":"    Int(\"zzzzzzzzzzzzz\", radix: 36)   // Out of range"},{"text":""},{"text":"- Parameters:"},{"text":"  - text: The ASCII representation of a number in the radix passed as"},{"text":"    `radix`."},{"text":"  - radix: The radix, or base, to use for converting `text` to an integer"},{"text":"    value. `radix` must be in the range `2...36`. The default is 10."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc::SYNTHESIZED::s:Su"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"radix"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":")"}],"title":"init(_:radix:)"},"pathComponents":["UInt","init(_:radix:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"S","rhs":"StringProtocol","rhsPrecise":"s:Sy"}],"parameters":[{"depth":1,"index":0,"name":"S"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"padding"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"toLength"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"newLength"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"withPad"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"padString"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"startingAt"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"padIndex"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"docComment":{"lines":[{"text":"Returns a new string formed from the `String` by either"},{"text":"removing characters from the end, or by appending as many"},{"text":"occurrences as necessary of a given pad string."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"newLength"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"internalName":"newLength","name":"toLength"},{"declarationFragments":[{"kind":"identifier","spelling":"padString"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"padString","name":"withPad"},{"declarationFragments":[{"kind":"identifier","spelling":"padIndex"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"internalName":"padIndex","name":"startingAt"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE7padding8toLength7withPad10startingAtSSSi_qd__SitSyRd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"padding"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"toLength"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"withPad"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"startingAt"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"padding(toLength:withPad:startingAt:)"},"pathComponents":["StringProtocol","padding(toLength:withPad:startingAt:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"text"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"radix"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" = 10) "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"docComment":{"lines":[{"text":"Creates a new integer value from the given string and radix."},{"text":""},{"text":"The string passed as `text` may begin with a plus or minus sign character"},{"text":"(`+` or `-`), followed by one or more numeric digits (`0-9`) or letters"},{"text":"(`a-z` or `A-Z`). Parsing of the string is case insensitive."},{"text":""},{"text":"    let x = Int(\"123\")"},{"text":"    // x == 123"},{"text":""},{"text":"    let y = Int(\"-123\", radix: 8)"},{"text":"    // y == -83"},{"text":"    let y = Int(\"+123\", radix: 8)"},{"text":"    // y == +83"},{"text":""},{"text":"    let z = Int(\"07b\", radix: 16)"},{"text":"    // z == 123"},{"text":""},{"text":"If `text` is in an invalid format or contains characters that are out of"},{"text":"bounds for the given `radix`, or if the value it denotes in the given"},{"text":"`radix` is not representable, the result is `nil`. For example, the"},{"text":"following conversions result in `nil`:"},{"text":""},{"text":"    Int(\" 100\")                       // Includes whitespace"},{"text":"    Int(\"21-50\")                      // Invalid format"},{"text":"    Int(\"ff6600\")                     // Characters out of bounds"},{"text":"    Int(\"zzzzzzzzzzzzz\", radix: 36)   // Out of range"},{"text":""},{"text":"- Parameters:"},{"text":"  - text: The ASCII representation of a number in the radix passed as"},{"text":"    `radix`."},{"text":"  - radix: The radix, or base, to use for converting `text` to an integer"},{"text":"    value. `radix` must be in the range `2...36`. The default is 10."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"radix"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":")"}],"title":"init(_:radix:)"},"pathComponents":["UInt32","init(_:radix:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"S","rhs":"StringProtocol","rhsPrecise":"s:Sy"}],"parameters":[{"depth":1,"index":0,"name":"S"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is greater than or equal to that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"greater-than-or-equal-to operator (`>=`), even if the two instances are"},{"text":"of different types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2geoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["Int16",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3ggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":">>=(_:_:)"},"pathComponents":["UInt16",">>=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a half-open range that contains its lower bound but not its upper"},{"text":"bound."},{"text":""},{"text":"Use the half-open range operator (`..<`) to create a range of any type"},{"text":"that conforms to the `Comparable` protocol. This example creates a"},{"text":"`Range<Double>` from zero up to, but not including, 5.0."},{"text":""},{"text":"    let lessThanFive = 0.0..<5.0"},{"text":"    print(lessThanFive.contains(3.14))  // Prints \"true\""},{"text":"    print(lessThanFive.contains(5.0))   // Prints \"false\""},{"text":""},{"text":"- Parameters:"},{"text":"  - minimum: The lower bound for the range."},{"text":"  - maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `minimum <= maximum`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"},{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"..<(_:_:)"},"pathComponents":["Int32","..<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"replacingCharacters"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"replacement"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS5IndexV","spelling":"Index"}],"docComment":{"lines":[{"text":"Returns a new string in which the characters in a"},{"text":"specified range of the `String` are replaced by a given string."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"in"},{"declarationFragments":[{"kind":"identifier","spelling":"replacement"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"replacement","name":"with"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE19replacingCharacters2in4withSSqd_0__qd__tSyRd__SXRd_0_SS5IndexV5BoundRtd_0_r0_lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"replacingCharacters"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"replacingCharacters(in:with:)"},"pathComponents":["StringProtocol","replacingCharacters(in:with:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"R.Bound","rhs":"String.Index","rhsPrecise":"s:SS5IndexV"}],"parameters":[{"depth":1,"index":0,"name":"T"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7CGFloatV","spelling":"CGFloat"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Sd10FoundationEySdAA7CGFloatVcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7CGFloatV","spelling":"CGFloat"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Double","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a closed range that contains both of its bounds."},{"text":""},{"text":"Use the closed range operator (`...`) to create a closed range of any type"},{"text":"that conforms to the `Comparable` protocol. This example creates a"},{"text":"`ClosedRange<Character>` from \"a\" up to, and including, \"z\"."},{"text":""},{"text":"    let lowercase = \"a\"...\"z\""},{"text":"    print(lowercase.contains(\"z\"))"},{"text":"    // Prints \"true\""},{"text":""},{"text":"- Parameters:"},{"text":"  - minimum: The lower bound for the range."},{"text":"  - maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `minimum <= maximum`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"},{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:_:)"},"pathComponents":["UInt32","...(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is less than or equal to that of the second argument."},{"text":""},{"text":"This is the default implementation of the less-than-or-equal-to"},{"text":"operator (`<=`) for any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE2leoiySbx_xtFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["Int64","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Adds two values and stores the result in the left-hand-side variable,"},{"text":"wrapping any overflow."},{"text":""},{"text":"The masking addition assignment operator (`&+=`) silently wraps any"},{"text":"overflow that occurs during the operation. In the following example, the"},{"text":"sum of `100` and `121` is greater than the maximum representable `Int8`"},{"text":"value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    var x: Int8 = 10"},{"text":"    x &+= 21"},{"text":"    // x == 31"},{"text":"    var y: Int8 = 100"},{"text":"    y &+= 121"},{"text":"    // y == -35 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to add."},{"text":"  - rhs: The second value to add."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&+=(_:_:)"},"pathComponents":["UInt64","&+=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"from"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPA2A15ContiguousBytesRzrlE04copyE02to4fromySryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexSlRtzr0_lF::SYNTHESIZED::s:s5SliceV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":")"}],"title":"copyBytes(to:from:)"},"pathComponents":["Slice","copyBytes(to:from:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"ContiguousBytes","rhsPrecise":"s:10Foundation15ContiguousBytesP"}],"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"ContiguousBytes","rhsPrecise":"s:10Foundation15ContiguousBytesP"},{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"DestinationType"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SG","spelling":"RandomNumberGenerator"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range, using the given"},{"text":"generator as a source for randomness."},{"text":""},{"text":"Use this method to generate an integer within a specific range when you"},{"text":"are using a custom random number generator. This example creates three"},{"text":"new values in the range `1...100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1...100, using: &myGenerator))"},{"text":"    }"},{"text":"    // Prints \"7\""},{"text":"    // Prints \"44\""},{"text":"    // Prints \"21\""},{"text":""},{"text":"- Parameters:"},{"text":"  - range: The range in which to create a random value."},{"text":"  - generator: The random number generator to use when creating the"},{"text":"    new random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"},{"declarationFragments":[{"kind":"identifier","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"generator","name":"using"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:using:)"},"pathComponents":["Int","random(in:using:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"RandomNumberGenerator","rhsPrecise":"s:SG"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7CGFloatV","spelling":"CGFloat"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Si10FoundationEySiAA7CGFloatVcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7CGFloatV","spelling":"CGFloat"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Int","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the given integer."},{"text":""},{"text":"Use this initializer to convert from another integer type when you know"},{"text":"the value is within the bounds of this type. Passing a value that can't"},{"text":"be represented in this type results in a runtime error."},{"text":""},{"text":"In the following example, the constant `y` is successfully created from"},{"text":"`x`, an `Int` instance with a value of `100`. Because the `Int8` type"},{"text":"can represent `127` at maximum, the attempt to create `z` with a value"},{"text":"of `1000` results in a runtime error."},{"text":""},{"text":"    let x = 100"},{"text":"    let y = Int8(x)"},{"text":"    // y == 100"},{"text":"    let z = Int8(x * 10)"},{"text":"    // Error: Not enough bits to represent the given value"},{"text":""},{"text":"- Parameter source: A value to convert to this type of integer. The value"},{"text":"  passed as `source` must be representable in this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["UInt32","init(_:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"},{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is greater than that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"greater-than operator (`>`), even if the two instances are of different"},{"text":"types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1goiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["UInt16",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}],"docComment":{"lines":[{"text":"Creates a new value equal to zero."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsExycfc::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}],"title":"init()"},"pathComponents":["Int64","init()"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the difference of the two given values, wrapping the result in"},{"text":"case of any overflow."},{"text":""},{"text":"The overflow subtraction operator (`&-`) discards any bits that overflow"},{"text":"the fixed width of the integer type. In the following example, the"},{"text":"difference of `10` and `21` is less than zero, the minimum representable"},{"text":"`UInt` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    let x: UInt8 = 21 &- 10"},{"text":"    // x == 11"},{"text":"    let y: UInt8 = 10 &- 21"},{"text":"    // y == 245 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A numeric value."},{"text":"  - rhs: The value to subtract from `lhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&-(_:_:)"},"pathComponents":["Int32","&-(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"utf32LittleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE8EncodingV17utf32LittleEndianACvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"utf32LittleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"title":"utf32LittleEndian"},"pathComponents":["String","Encoding","utf32LittleEndian"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range up to, and including, its upper bound."},{"text":""},{"text":"Use the prefix closed range operator (prefix `...`) to create a partial"},{"text":"range of any type that conforms to the `Comparable` protocol. This"},{"text":"example creates a `PartialRangeThrough<Double>` instance that includes"},{"text":"any value less than or equal to `5.0`."},{"text":""},{"text":"    let throughFive = ...5.0"},{"text":""},{"text":"    throughFive.contains(4.0)     // true"},{"text":"    throughFive.contains(5.0)     // true"},{"text":"    throughFive.contains(6.0)     // false"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the start of the collection up to, and"},{"text":"including, the partial range's upper bound."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[...3])"},{"text":"    // Prints \"[10, 20, 30, 40]\""},{"text":""},{"text":"- Parameter maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `maximum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","spelling":"PartialRangeThrough"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:)"},"pathComponents":["Int","...(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"},{"declarationFragments":[{"kind":"identifier","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"y"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SxsE2eeoiySbx_xtFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"==(_:_:)"},"pathComponents":["Int","==(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Adds two values and stores the result in the left-hand-side variable,"},{"text":"wrapping any overflow."},{"text":""},{"text":"The masking addition assignment operator (`&+=`) silently wraps any"},{"text":"overflow that occurs during the operation. In the following example, the"},{"text":"sum of `100` and `121` is greater than the maximum representable `Int8`"},{"text":"value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    var x: Int8 = 10"},{"text":"    x &+= 21"},{"text":"    // x == 31"},{"text":"    var y: Int8 = 100"},{"text":"    y &+= 121"},{"text":"    // y == -35 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to add."},{"text":"  - rhs: The second value to add."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&+=(_:_:)"},"pathComponents":["Int32","&+=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a half-open range that contains its lower bound but not its upper"},{"text":"bound."},{"text":""},{"text":"Use the half-open range operator (`..<`) to create a range of any type"},{"text":"that conforms to the `Comparable` protocol. This example creates a"},{"text":"`Range<Double>` from zero up to, but not including, 5.0."},{"text":""},{"text":"    let lessThanFive = 0.0..<5.0"},{"text":"    print(lessThanFive.contains(3.14))  // Prints \"true\""},{"text":"    print(lessThanFive.contains(5.0))   // Prints \"false\""},{"text":""},{"text":"- Parameters:"},{"text":"  - minimum: The lower bound for the range."},{"text":"  - maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `minimum <= maximum`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"},{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"..<(_:_:)"},"pathComponents":["UInt64","..<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking right shift operator (`&>>`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking right shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &>> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &>> 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&>>(_:_:)"},"pathComponents":["Int16","&>>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the difference of the two given values, wrapping the result in"},{"text":"case of any overflow."},{"text":""},{"text":"The overflow subtraction operator (`&-`) discards any bits that overflow"},{"text":"the fixed width of the integer type. In the following example, the"},{"text":"difference of `10` and `21` is less than zero, the minimum representable"},{"text":"`UInt` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    let x: UInt8 = 21 &- 10"},{"text":"    // x == 11"},{"text":"    let y: UInt8 = 10 &- 21"},{"text":"    // y == 245 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A numeric value."},{"text":"  - rhs: The value to subtract from `lhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&-(_:_:)"},"pathComponents":["UInt64","&-(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7CGFloatV","spelling":"CGFloat"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Su10FoundationEySuAA7CGFloatVcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7CGFloatV","spelling":"CGFloat"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["UInt","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is greater than or equal to that of the second argument."},{"text":""},{"text":"This is the default implementation of the greater-than-or-equal-to operator"},{"text":"(`>=`) for any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."},{"text":"- Returns: `true` if `lhs` is greater than or equal to `rhs`; otherwise,"},{"text":"  `false`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE2geoiySbx_xtFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["UInt",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates a new integer value from the given string."},{"text":""},{"text":"The string passed as `description` may begin with a plus or minus sign"},{"text":"character (`+` or `-`), followed by one or more numeric digits (`0-9`)."},{"text":""},{"text":"    let x = Int(\"123\")"},{"text":"    // x == 123"},{"text":""},{"text":"If `description` is in an invalid format, or if the value it denotes in"},{"text":"base 10 is not representable, the result is `nil`. For example, the"},{"text":"following conversions result in `nil`:"},{"text":""},{"text":"    Int(\" 100\")                       // Includes whitespace"},{"text":"    Int(\"21-50\")                      // Invalid format"},{"text":"    Int(\"ff6600\")                     // Characters out of bounds"},{"text":"    Int(\"10000000000000000000000000\") // Out of range"},{"text":""},{"text":"- Parameter description: The ASCII representation of a number."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsEyxSgSScfc::SYNTHESIZED::s:Su"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["UInt","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"clamping"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance with the representable value that's closest to the"},{"text":"given integer."},{"text":""},{"text":"If the value passed as `source` is greater than the maximum representable"},{"text":"value in this type, the result is the type's `max` value. If `source` is"},{"text":"less than the smallest representable value in this type, the result is"},{"text":"the type's `min` value."},{"text":""},{"text":"In this example, `x` is initialized as an `Int8` instance by clamping"},{"text":"`500` to the range `-128...127`, and `y` is initialized as a `UInt`"},{"text":"instance by clamping `-500` to the range `0...UInt.max`."},{"text":""},{"text":"    let x = Int8(clamping: 500)"},{"text":"    // x == 127"},{"text":"    // x == Int8.max"},{"text":""},{"text":"    let y = UInt(clamping: -500)"},{"text":"    // y == 0"},{"text":""},{"text":"- Parameter source: An integer to convert to this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc::SYNTHESIZED::s:Si"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"clamping"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"init(clamping:)"},"pathComponents":["Int","init(clamping:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the sum of the two given values, wrapping the result in case of"},{"text":"any overflow."},{"text":""},{"text":"The overflow addition operator (`&+`) discards any bits that overflow the"},{"text":"fixed width of the integer type. In the following example, the sum of"},{"text":"`100` and `121` is greater than the maximum representable `Int8` value,"},{"text":"so the result is the partial value after discarding the overflowing"},{"text":"bits."},{"text":""},{"text":"    let x: Int8 = 10 &+ 21"},{"text":"    // x == 31"},{"text":"    let y: Int8 = 100 &+ 121"},{"text":"    // y == -35 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to add."},{"text":"  - rhs: The second value to add."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&+(_:_:)"},"pathComponents":["UInt32","&+(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Subtracts the second value from the first and stores the difference in the"},{"text":"left-hand-side variable, wrapping any overflow."},{"text":""},{"text":"The masking subtraction assignment operator (`&-=`) silently wraps any"},{"text":"overflow that occurs during the operation. In the following example, the"},{"text":"difference of `10` and `21` is less than zero, the minimum representable"},{"text":"`UInt` value, so the result is the result is the partial value after"},{"text":"discarding the overflowing bits."},{"text":""},{"text":"    var x: Int8 = 21"},{"text":"    x &-= 10"},{"text":"    // x == 11"},{"text":"    var y: UInt8 = 10"},{"text":"    y &-= 21"},{"text":"    // y == 245 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A numeric value."},{"text":"  - rhs: The value to subtract from `lhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&-=(_:_:)"},"pathComponents":["Int64","&-=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is less than that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"less-than operator (`<`), even if the two instances are of different"},{"text":"types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1loiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<(_:_:)"},"pathComponents":["Int8","<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range."},{"text":""},{"text":"Use this method to generate an integer within a specific range. This"},{"text":"example creates three new values in the range `1..<100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1..<100))"},{"text":"    }"},{"text":"    // Prints \"53\""},{"text":"    // Prints \"64\""},{"text":"    // Prints \"5\""},{"text":""},{"text":"This method is equivalent to calling the version that takes a generator,"},{"text":"passing in the system's default random generator."},{"text":""},{"text":"- Parameter range: The range in which to create a random value."},{"text":"  `range` must not be empty."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:)"},"pathComponents":["Int","random(in:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the product of the two given values, wrapping the result in case"},{"text":"of any overflow."},{"text":""},{"text":"The overflow multiplication operator (`&*`) discards any bits that"},{"text":"overflow the fixed width of the integer type. In the following example,"},{"text":"the product of `10` and `50` is greater than the maximum representable"},{"text":"`Int8` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    let x: Int8 = 10 &* 5"},{"text":"    // x == 50"},{"text":"    let y: Int8 = 10 &* 50"},{"text":"    // y == -12 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to multiply."},{"text":"  - rhs: The second value to multiply."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&*(_:_:)"},"pathComponents":["UInt","&*(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"helpAnchor"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"? { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation14LocalizedErrorPAAE10helpAnchorSSSgvp::SYNTHESIZED::s:s13DecodingErrorO"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"helpAnchor"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"?"}],"title":"helpAnchor"},"pathComponents":["DecodingError","helpAnchor"],"swiftExtension":{"extendedModule":"Foundation"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is greater than or equal to that of the second argument."},{"text":""},{"text":"This is the default implementation of the greater-than-or-equal-to operator"},{"text":"(`>=`) for any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."},{"text":"- Returns: `true` if `lhs` is greater than or equal to `rhs`; otherwise,"},{"text":"  `false`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE2geoiySbx_xtFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["Int64",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates a new integer value from the given string."},{"text":""},{"text":"The string passed as `description` may begin with a plus or minus sign"},{"text":"character (`+` or `-`), followed by one or more numeric digits (`0-9`)."},{"text":""},{"text":"    let x = Int(\"123\")"},{"text":"    // x == 123"},{"text":""},{"text":"If `description` is in an invalid format, or if the value it denotes in"},{"text":"base 10 is not representable, the result is `nil`. For example, the"},{"text":"following conversions result in `nil`:"},{"text":""},{"text":"    Int(\" 100\")                       // Includes whitespace"},{"text":"    Int(\"21-50\")                      // Invalid format"},{"text":"    Int(\"ff6600\")                     // Characters out of bounds"},{"text":"    Int(\"10000000000000000000000000\") // Out of range"},{"text":""},{"text":"- Parameter description: The ASCII representation of a number."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsEyxSgSScfc::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Int64","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the sum of the two given values, wrapping the result in case of"},{"text":"any overflow."},{"text":""},{"text":"The overflow addition operator (`&+`) discards any bits that overflow the"},{"text":"fixed width of the integer type. In the following example, the sum of"},{"text":"`100` and `121` is greater than the maximum representable `Int8` value,"},{"text":"so the result is the partial value after discarding the overflowing"},{"text":"bits."},{"text":""},{"text":"    let x: Int8 = 10 &+ 21"},{"text":"    // x == 31"},{"text":"    let y: Int8 = 100 &+ 121"},{"text":"    // y == -35 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to add."},{"text":"  - rhs: The second value to add."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&+(_:_:)"},"pathComponents":["Int32","&+(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the product of the two given values, wrapping the result in case"},{"text":"of any overflow."},{"text":""},{"text":"The overflow multiplication operator (`&*`) discards any bits that"},{"text":"overflow the fixed width of the integer type. In the following example,"},{"text":"the product of `10` and `50` is greater than the maximum representable"},{"text":"`Int8` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    let x: Int8 = 10 &* 5"},{"text":"    // x == 50"},{"text":"    let y: Int8 = 10 &* 50"},{"text":"    // y == -12 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to multiply."},{"text":"  - rhs: The second value to multiply."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&*(_:_:)"},"pathComponents":["Int64","&*(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SG","spelling":"RandomNumberGenerator"}],"docComment":{"lines":[{"text":"Returns a random value within the specified range, using the given"},{"text":"generator as a source for randomness."},{"text":""},{"text":"Use this method to generate an integer within a specific range when you"},{"text":"are using a custom random number generator. This example creates three"},{"text":"new values in the range `1..<100`."},{"text":""},{"text":"    for _ in 1...3 {"},{"text":"        print(Int.random(in: 1..<100, using: &myGenerator))"},{"text":"    }"},{"text":"    // Prints \"7\""},{"text":"    // Prints \"44\""},{"text":"    // Prints \"21\""},{"text":""},{"text":"- Note: The algorithm used to create random values may change in a future"},{"text":"  version of Swift. If you're passing a generator that results in the"},{"text":"  same sequence of integer values each time you run your program, that"},{"text":"  sequence may change when your program is compiled using a different"},{"text":"  version of Swift."},{"text":""},{"text":"- Parameters:"},{"text":"  - range: The range in which to create a random value."},{"text":"    `range` must not be empty."},{"text":"  - generator: The random number generator to use when creating the"},{"text":"    new random value."},{"text":"- Returns: A random value within the bounds of `range`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"internalName":"range","name":"in"},{"declarationFragments":[{"kind":"identifier","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"generator","name":"using"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"random"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"random(in:using:)"},"pathComponents":["Int","random(in:using:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"RandomNumberGenerator","rhsPrecise":"s:SG"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the given integer."},{"text":""},{"text":"Use this initializer to convert from another integer type when you know"},{"text":"the value is within the bounds of this type. Passing a value that can't"},{"text":"be represented in this type results in a runtime error."},{"text":""},{"text":"In the following example, the constant `y` is successfully created from"},{"text":"`x`, an `Int` instance with a value of `100`. Because the `Int8` type"},{"text":"can represent `127` at maximum, the attempt to create `z` with a value"},{"text":"of `1000` results in a runtime error."},{"text":""},{"text":"    let x = 100"},{"text":"    let y = Int8(x)"},{"text":"    // y == 100"},{"text":"    let z = Int8(x * 10)"},{"text":"    // Error: Not enough bits to represent the given value"},{"text":""},{"text":"- Parameter source: A value to convert to this type of integer. The value"},{"text":"  passed as `source` must be representable in this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["UInt64","init(_:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"},{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is greater than that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"greater-than operator (`>`), even if the two instances are of different"},{"text":"types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1goiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["Int16",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"replacingOccurrences"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Target"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"Replacement"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"target"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Target"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"replacement"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Replacement"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"options"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE14CompareOptionsa","spelling":"CompareOptions"},{"kind":"text","spelling":" = [], "},{"kind":"externalParam","spelling":"range"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"searchRange"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? = nil) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Target"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Replacement"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"docComment":{"lines":[{"text":"Returns a new string in which all occurrences of a target"},{"text":"string in a specified range of the string are replaced by"},{"text":"another given string."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"target"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Target"}],"internalName":"target","name":"of"},{"declarationFragments":[{"kind":"identifier","spelling":"replacement"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Replacement"}],"internalName":"replacement","name":"with"},{"declarationFragments":[{"kind":"identifier","spelling":"options"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE14CompareOptionsa","spelling":"CompareOptions"}],"name":"options"},{"declarationFragments":[{"kind":"identifier","spelling":"searchRange"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"internalName":"searchRange","name":"range"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE20replacingOccurrences2of4with7options5rangeSSqd___qd_0_AA8NSStringC14CompareOptionsVSnySS5IndexVGSgtSyRd__SyRd_0_r0_lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"replacingOccurrences"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Target"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"Replacement"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Target"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Replacement"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"options"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE14CompareOptionsa","spelling":"CompareOptions"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"replacingOccurrences(of:with:options:range:)"},"pathComponents":["StringProtocol","replacingOccurrences(of:with:options:range:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Target"},{"depth":1,"index":1,"name":"Replacement"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a partial range extending upward from a lower bound."},{"text":""},{"text":"Use the postfix range operator (postfix `...`) to create a partial range"},{"text":"of any type that conforms to the `Comparable` protocol. This example"},{"text":"creates a `PartialRangeFrom<Double>` instance that includes any value"},{"text":"greater than or equal to `5.0`."},{"text":""},{"text":"    let atLeastFive = 5.0..."},{"text":""},{"text":"    atLeastFive.contains(4.0)     // false"},{"text":"    atLeastFive.contains(5.0)     // true"},{"text":"    atLeastFive.contains(6.0)     // true"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the partial range's lower bound up to the end"},{"text":"of the collection."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[3...])"},{"text":"    // Prints \"[40, 50, 60, 70]\""},{"text":""},{"text":"- Parameter minimum: The lower bound for the range."},{"text":""},{"text":"- Precondition: `minimum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","spelling":"PartialRangeFrom"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:)"},"pathComponents":["Int","...(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3ggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":">>=(_:_:)"},"pathComponents":["Int16",">>=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is greater than or equal to that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"greater-than-or-equal-to operator (`>=`), even if the two instances are"},{"text":"of different types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2geoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">=(_:_:)"},"pathComponents":["UInt16",">=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a closed range that contains both of its bounds."},{"text":""},{"text":"Use the closed range operator (`...`) to create a closed range of any type"},{"text":"that conforms to the `Comparable` protocol. This example creates a"},{"text":"`ClosedRange<Character>` from \"a\" up to, and including, \"z\"."},{"text":""},{"text":"    let lowercase = \"a\"...\"z\""},{"text":"    print(lowercase.contains(\"z\"))"},{"text":"    // Prints \"true\""},{"text":""},{"text":"- Parameters:"},{"text":"  - minimum: The lower bound for the range."},{"text":"  - maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `minimum <= maximum`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"},{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:_:)"},"pathComponents":["UInt64","...(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Subtracts the second value from the first and stores the difference in the"},{"text":"left-hand-side variable, wrapping any overflow."},{"text":""},{"text":"The masking subtraction assignment operator (`&-=`) silently wraps any"},{"text":"overflow that occurs during the operation. In the following example, the"},{"text":"difference of `10` and `21` is less than zero, the minimum representable"},{"text":"`UInt` value, so the result is the result is the partial value after"},{"text":"discarding the overflowing bits."},{"text":""},{"text":"    var x: Int8 = 21"},{"text":"    x &-= 10"},{"text":"    // x == 11"},{"text":"    var y: UInt8 = 10"},{"text":"    y &-= 21"},{"text":"    // y == 245 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A numeric value."},{"text":"  - rhs: The value to subtract from `lhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&-=(_:_:)"},"pathComponents":["UInt","&-=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"rawValue"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","spelling":"UInt"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE8EncodingV8rawValueACSu_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"rawValue"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","spelling":"UInt"},{"kind":"text","spelling":")"}],"title":"init(rawValue:)"},"pathComponents":["String","Encoding","init(rawValue:)"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Adds two values and stores the result in the left-hand-side variable,"},{"text":"wrapping any overflow."},{"text":""},{"text":"The masking addition assignment operator (`&+=`) silently wraps any"},{"text":"overflow that occurs during the operation. In the following example, the"},{"text":"sum of `100` and `121` is greater than the maximum representable `Int8`"},{"text":"value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    var x: Int8 = 10"},{"text":"    x &+= 21"},{"text":"    // x == 31"},{"text":"    var y: Int8 = 100"},{"text":"    y &+= 121"},{"text":"    // y == -35 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to add."},{"text":"  - rhs: The second value to add."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3apeoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&+=(_:_:)"},"pathComponents":["UInt32","&+=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"advanced"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"n"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns a value that is offset the specified distance from this value."},{"text":""},{"text":"Use the `advanced(by:)` method in generic code to offset a value by a"},{"text":"specified distance. If you're working directly with numeric values, use"},{"text":"the addition operator (`+`) instead of this method."},{"text":""},{"text":"For a value `x`, a distance `n`, and a value `y = x.advanced(by: n)`,"},{"text":"`x.distance(to: y) == n`."},{"text":""},{"text":"- Parameter n: The distance to advance this value."},{"text":"- Returns: A value that is offset from this value by `n`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"n"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"internalName":"n","name":"by"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE8advanced2byxSi_tF::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"advanced"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"advanced(by:)"},"pathComponents":["UInt8","advanced(by:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right."},{"text":""},{"text":"The `>>` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a left shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*. An overshift results in `-1` for a"},{"text":"  negative value of `lhs` or `0` for a nonnegative value."},{"text":"- Using any other value for `rhs` performs a right shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted right by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x >> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x >> 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a left shift"},{"text":"using `abs(rhs)`."},{"text":""},{"text":"    let a = x >> -3"},{"text":"    // a == 240                       // 0b11110000"},{"text":"    let b = x << 3"},{"text":"    // b == 240                       // 0b11110000"},{"text":""},{"text":"Right shift operations on negative values \"fill in\" the high bits with"},{"text":"ones instead of zeros."},{"text":""},{"text":"    let q: Int8 = -30                 // 0b11100010"},{"text":"    let r = q >> 2"},{"text":"    // r == -8                        // 0b11111000"},{"text":""},{"text":"    let s = q >> 11"},{"text":"    // s == -1                        // 0b11111111"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":">>(_:_:)"},"pathComponents":["Int8",">>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"text"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"radix"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" = 10) "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"docComment":{"lines":[{"text":"Creates a new integer value from the given string and radix."},{"text":""},{"text":"The string passed as `text` may begin with a plus or minus sign character"},{"text":"(`+` or `-`), followed by one or more numeric digits (`0-9`) or letters"},{"text":"(`a-z` or `A-Z`). Parsing of the string is case insensitive."},{"text":""},{"text":"    let x = Int(\"123\")"},{"text":"    // x == 123"},{"text":""},{"text":"    let y = Int(\"-123\", radix: 8)"},{"text":"    // y == -83"},{"text":"    let y = Int(\"+123\", radix: 8)"},{"text":"    // y == +83"},{"text":""},{"text":"    let z = Int(\"07b\", radix: 16)"},{"text":"    // z == 123"},{"text":""},{"text":"If `text` is in an invalid format or contains characters that are out of"},{"text":"bounds for the given `radix`, or if the value it denotes in the given"},{"text":"`radix` is not representable, the result is `nil`. For example, the"},{"text":"following conversions result in `nil`:"},{"text":""},{"text":"    Int(\" 100\")                       // Includes whitespace"},{"text":"    Int(\"21-50\")                      // Invalid format"},{"text":"    Int(\"ff6600\")                     // Characters out of bounds"},{"text":"    Int(\"zzzzzzzzzzzzz\", radix: 36)   // Out of range"},{"text":""},{"text":"- Parameters:"},{"text":"  - text: The ASCII representation of a number in the radix passed as"},{"text":"    `radix`."},{"text":"  - radix: The radix, or base, to use for converting `text` to an integer"},{"text":"    value. `radix` must be in the range `2...36`. The default is 10."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"radix"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":")"}],"title":"init(_:radix:)"},"pathComponents":["UInt64","init(_:radix:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"S","rhs":"StringProtocol","rhsPrecise":"s:Sy"}],"parameters":[{"depth":1,"index":0,"name":"S"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE10firstRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:s10ArraySliceV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"firstRange(of:)"},"pathComponents":["ArraySlice","firstRange(of:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"D"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7CGFloatV","spelling":"CGFloat"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Sf10FoundationEySfAA7CGFloatVcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7CGFloatV","spelling":"CGFloat"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Float","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"distance"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"docComment":{"lines":[{"text":"Returns the distance from this value to the given value, expressed as a"},{"text":"stride."},{"text":""},{"text":"For two values `x` and `y`, and a distance `n = x.distance(to: y)`,"},{"text":"`x.advanced(by: n) == y`."},{"text":""},{"text":"- Parameter other: The value to calculate the distance to."},{"text":"- Returns: The distance from this value to `other`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"other","name":"to"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE8distance2toSix_tF::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"distance"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"distance(to:)"},"pathComponents":["UInt8","distance(to:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}],"docComment":{"lines":[{"text":"Creates a new value equal to zero."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsExycfc::SYNTHESIZED::s:Su"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}],"title":"init()"},"pathComponents":["UInt","init()"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the sum of the two given values, wrapping the result in case of"},{"text":"any overflow."},{"text":""},{"text":"The overflow addition operator (`&+`) discards any bits that overflow the"},{"text":"fixed width of the integer type. In the following example, the sum of"},{"text":"`100` and `121` is greater than the maximum representable `Int8` value,"},{"text":"so the result is the partial value after discarding the overflowing"},{"text":"bits."},{"text":""},{"text":"    let x: Int8 = 10 &+ 21"},{"text":"    // x == 31"},{"text":"    let y: Int8 = 100 &+ 121"},{"text":"    // y == -35 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to add."},{"text":"  - rhs: The second value to add."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&+(_:_:)"},"pathComponents":["UInt64","&+(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the difference of the two given values, wrapping the result in"},{"text":"case of any overflow."},{"text":""},{"text":"The overflow subtraction operator (`&-`) discards any bits that overflow"},{"text":"the fixed width of the integer type. In the following example, the"},{"text":"difference of `10` and `21` is less than zero, the minimum representable"},{"text":"`UInt` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    let x: UInt8 = 21 &- 10"},{"text":"    // x == 11"},{"text":"    let y: UInt8 = 10 &- 21"},{"text":"    // y == 245 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A numeric value."},{"text":"  - rhs: The value to subtract from `lhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2asoiyxx_xtFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&-(_:_:)"},"pathComponents":["UInt32","&-(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"text"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"radix"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" = 10) "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"docComment":{"lines":[{"text":"Creates a new integer value from the given string and radix."},{"text":""},{"text":"The string passed as `text` may begin with a plus or minus sign character"},{"text":"(`+` or `-`), followed by one or more numeric digits (`0-9`) or letters"},{"text":"(`a-z` or `A-Z`). Parsing of the string is case insensitive."},{"text":""},{"text":"    let x = Int(\"123\")"},{"text":"    // x == 123"},{"text":""},{"text":"    let y = Int(\"-123\", radix: 8)"},{"text":"    // y == -83"},{"text":"    let y = Int(\"+123\", radix: 8)"},{"text":"    // y == +83"},{"text":""},{"text":"    let z = Int(\"07b\", radix: 16)"},{"text":"    // z == 123"},{"text":""},{"text":"If `text` is in an invalid format or contains characters that are out of"},{"text":"bounds for the given `radix`, or if the value it denotes in the given"},{"text":"`radix` is not representable, the result is `nil`. For example, the"},{"text":"following conversions result in `nil`:"},{"text":""},{"text":"    Int(\" 100\")                       // Includes whitespace"},{"text":"    Int(\"21-50\")                      // Invalid format"},{"text":"    Int(\"ff6600\")                     // Characters out of bounds"},{"text":"    Int(\"zzzzzzzzzzzzz\", radix: 36)   // Out of range"},{"text":""},{"text":"- Parameters:"},{"text":"  - text: The ASCII representation of a number in the radix passed as"},{"text":"    `radix`."},{"text":"  - radix: The radix, or base, to use for converting `text` to an integer"},{"text":"    value. `radix` must be in the range `2...36`. The default is 10."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"radix"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":")"}],"title":"init(_:radix:)"},"pathComponents":["Int32","init(_:radix:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"S","rhs":"StringProtocol","rhsPrecise":"s:Sy"}],"parameters":[{"depth":1,"index":0,"name":"S"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"rawValue"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","spelling":"UInt"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE8EncodingV8rawValueSuvp"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"rawValue"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","spelling":"UInt"}],"title":"rawValue"},"pathComponents":["String","Encoding","rawValue"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is less than or equal to that of the second argument."},{"text":""},{"text":"You can compare instances of any `BinaryInteger` types using the"},{"text":"less-than-or-equal-to operator (`<=`), even if the two instances are of"},{"text":"different types."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2leoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["Int8","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a half-open range that contains its lower bound but not its upper"},{"text":"bound."},{"text":""},{"text":"Use the half-open range operator (`..<`) to create a range of any type"},{"text":"that conforms to the `Comparable` protocol. This example creates a"},{"text":"`Range<Double>` from zero up to, but not including, 5.0."},{"text":""},{"text":"    let lessThanFive = 0.0..<5.0"},{"text":"    print(lessThanFive.contains(3.14))  // Prints \"true\""},{"text":"    print(lessThanFive.contains(5.0))   // Prints \"false\""},{"text":""},{"text":"- Parameters:"},{"text":"  - minimum: The lower bound for the range."},{"text":"  - maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `minimum <= maximum`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"},{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"..<(_:_:)"},"pathComponents":["UInt32","..<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking right shift operator (`&>>`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking right shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &>> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &>> 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aggoiyxx_xtFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&>>(_:_:)"},"pathComponents":["UInt16","&>>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1goiySbx_xtFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["UInt8",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"text":"Returns a closed range that contains both of its bounds."},{"text":""},{"text":"Use the closed range operator (`...`) to create a closed range of any type"},{"text":"that conforms to the `Comparable` protocol. This example creates a"},{"text":"`ClosedRange<Character>` from \"a\" up to, and including, \"z\"."},{"text":""},{"text":"    let lowercase = \"a\"...\"z\""},{"text":"    print(lowercase.contains(\"z\"))"},{"text":"    // Prints \"true\""},{"text":""},{"text":"- Parameters:"},{"text":"  - minimum: The lower bound for the range."},{"text":"  - maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `minimum <= maximum`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"minimum"},{"declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"maximum"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","spelling":"ClosedRange"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"title":"...(_:_:)"},"pathComponents":["Int32","...(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is less than or equal to that of the second argument."},{"text":""},{"text":"This is the default implementation of the less-than-or-equal-to"},{"text":"operator (`<=`) for any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE2leoiySbx_xtFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<=(_:_:)"},"pathComponents":["UInt","<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"domain":"Swift","obsoleted":{"major":4,"minor":0}}],"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"offset"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Construct from an integer offset."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SS5IndexV10FoundationEyABSicfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["String","Index","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"~"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the inverse of the bits set in the argument."},{"text":""},{"text":"The bitwise NOT operator (`~`) is a prefix operator that returns a value"},{"text":"in which all the bits of its argument are flipped: Bits that are `1` in"},{"text":"the argument are `0` in the result, and bits that are `0` in the argument"},{"text":"are `1` in the result. This is equivalent to the inverse of a set. For"},{"text":"example:"},{"text":""},{"text":"    let x: UInt8 = 5        // 0b00000101"},{"text":"    let notX = ~x           // 0b11111010"},{"text":""},{"text":"Performing a bitwise NOT operation on 0 returns a value with every bit"},{"text":"set to `1`."},{"text":""},{"text":"    let allOnes = ~UInt8.min   // 0b11111111"},{"text":""},{"text":"- Complexity: O(1)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE1topyxxFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"~"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"~(_:)"},"pathComponents":["Int64","~(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SB","spelling":"BinaryFloatingPoint"}],"docComment":{"lines":[{"text":"Creates an integer from the given floating-point value, if it can be"},{"text":"represented exactly."},{"text":""},{"text":"If the value passed as `source` is not representable exactly, the result"},{"text":"is `nil`. In the following example, the constant `x` is successfully"},{"text":"created from a value of `21.0`, while the attempt to initialize the"},{"text":"constant `y` from `21.5` fails:"},{"text":""},{"text":"    let x = Int(exactly: 21.0)"},{"text":"    // x == Optional(21)"},{"text":"    let y = Int(exactly: 21.5)"},{"text":"    // y == nil"},{"text":""},{"text":"- Parameter source: A floating-point value to convert to an integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["UInt8","init(exactly:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryFloatingPoint","rhsPrecise":"s:SB"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"decodeIfPresent"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"forKey"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"key"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV","spelling":"KeyedDecodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation26DecodableWithConfigurationP","spelling":"DecodableWithConfiguration"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"_"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":".Type"}],"name":""},{"declarationFragments":[{"kind":"identifier","spelling":"key"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV","spelling":"KeyedDecodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"}],"internalName":"key","name":"forKey"},{"declarationFragments":[{"kind":"identifier","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"}],"name":"configuration"}],"returns":[{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s22KeyedDecodingContainerV10FoundationE15decodeIfPresent_6forKey13configurationqd__Sgqd__m_x0B13ConfigurationQyd__tKAC013DecodableWithK0Rd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"decodeIfPresent"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"forKey"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV","spelling":"KeyedDecodingContainer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"K"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Key"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"?"}],"title":"decodeIfPresent(_:forKey:configuration:)"},"pathComponents":["KeyedDecodingContainer","decodeIfPresent(_:forKey:configuration:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"K","rhs":"CodingKey","rhsPrecise":"s:s9CodingKeyP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"K","rhs":"CodingKey","rhsPrecise":"s:s9CodingKeyP"},{"kind":"conformance","lhs":"T","rhs":"DecodableWithConfiguration","rhsPrecise":"s:10Foundation26DecodableWithConfigurationP"}],"parameters":[{"depth":0,"index":0,"name":"K"},{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking left shift operator (`&<<`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking left shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &<< 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &<< 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&<<(_:_:)"},"pathComponents":["Int8","&<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"from"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPA2A15ContiguousBytesRzrlE04copyE02to4fromySryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexSlRtzr0_lF::SYNTHESIZED::s:Sa"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":")"}],"title":"copyBytes(to:from:)"},"pathComponents":["Array","copyBytes(to:from:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"ContiguousBytes","rhsPrecise":"s:10Foundation15ContiguousBytesP"}],"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"ContiguousBytes","rhsPrecise":"s:10Foundation15ContiguousBytesP"},{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"DestinationType"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE2peoiyyxz_xtFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"+=(_:_:)"},"pathComponents":["Int64","+=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The little-endian representation of this integer."},{"text":""},{"text":"If necessary, the byte order of this value is reversed from the typical"},{"text":"byte order of this integer type. On a little-endian platform, for any"},{"text":"integer `x`, `x == x.littleEndian`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE12littleEndianxvp::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"littleEndian"},"pathComponents":["UInt8","littleEndian"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nonLossyASCII"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE8EncodingV13nonLossyASCIIACvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nonLossyASCII"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"title":"nonLossyASCII"},"pathComponents":["String","Encoding","nonLossyASCII"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is greater than that of the second argument."},{"text":""},{"text":"This is the default implementation of the greater-than operator (`>`) for"},{"text":"any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE1goiySbx_xtFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["UInt",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"NSRange"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"string"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Sn10FoundationSS5IndexVRszrlE_2inSnyACGSgAA8_NSRangeV_SStcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"typeIdentifier","spelling":"NSRange"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":")"}],"title":"init(_:in:)"},"pathComponents":["Range","init(_:in:)"],"swiftExtension":{"constraints":[{"kind":"sameType","lhs":"Bound","rhs":"String.Index","rhsPrecise":"s:SS5IndexV"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"sameType","lhs":"Bound","rhs":"String.Index","rhsPrecise":"s:SS5IndexV"}],"parameters":[{"depth":0,"index":0,"name":"Bound"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The minimum representable integer in this type."},{"text":""},{"text":"For unsigned integer types, this value is always `0`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUss17FixedWidthIntegerRzrlE3minxvpZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"min"},"pathComponents":["UInt","min"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isMultiple"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"other","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE10isMultiple2ofSbx_tF::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isMultiple"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"isMultiple(of:)"},"pathComponents":["UInt32","isMultiple(of:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left."},{"text":""},{"text":"The `<<` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a right shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*, resulting in zero."},{"text":"- Using any other value for `rhs` performs a left shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted left by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x << 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x << 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a right shift"},{"text":"with `abs(rhs)`."},{"text":""},{"text":"    let a = x << -3"},{"text":"    // a == 3                         // 0b00000011"},{"text":"    let b = x >> 3"},{"text":"    // b == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"<<(_:_:)"},"pathComponents":["UInt16","<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"^"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise XOR operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise XOR operation, also known as an exclusive OR operation, results"},{"text":"in a value that has each bit set to `1` where *one or the other but not"},{"text":"both* of its arguments had that bit set to `1`. For example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x ^ y             // 0b00001011"},{"text":"    // z == 11"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1xoiyxx_xtFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"^"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"^(_:_:)"},"pathComponents":["UInt8","^(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"bigEndian"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates an integer from its big-endian representation, changing the byte"},{"text":"order if necessary."},{"text":""},{"text":"- Parameter value: A value to use as the big-endian representation of the"},{"text":"  new integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(bigEndian:)"},"pathComponents":["UInt8","init(bigEndian:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"|"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise OR operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise OR operation results in a value that has each bit set to `1`"},{"text":"where *one or both* of its arguments have that bit set to `1`. For"},{"text":"example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x | y             // 0b00001111"},{"text":"    // z == 15"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1ooiyxx_xtFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"|"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"|(_:_:)"},"pathComponents":["UInt8","|(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"from"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPA2A15ContiguousBytesRzrlE04copyE02to4fromySryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexSlRtzr0_lF::SYNTHESIZED::s:s15ContiguousArrayV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":")"}],"title":"copyBytes(to:from:)"},"pathComponents":["ContiguousArray","copyBytes(to:from:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"ContiguousBytes","rhsPrecise":"s:10Foundation15ContiguousBytesP"}],"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"ContiguousBytes","rhsPrecise":"s:10Foundation15ContiguousBytesP"},{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"DestinationType"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width, and stores the result in the left-hand-side variable."},{"text":""},{"text":"The `&<<=` operator performs a *masking shift*, where the value used as"},{"text":"`rhs` is masked to produce a value in the range `0..<lhs.bitWidth`. The"},{"text":"shift is performed using this masked value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    var x: UInt8 = 30                 // 0b00011110"},{"text":"    x &<<= 2"},{"text":"    // x == 120                       // 0b01111000"},{"text":""},{"text":"However, if you pass `19` as `rhs`, the method first bitmasks `rhs` to"},{"text":"`3`, and then uses that masked value as the number of bits to shift `lhs`."},{"text":""},{"text":"    var y: UInt8 = 30                 // 0b00011110"},{"text":"    y &<<= 19"},{"text":"    // y == 240                       // 0b11110000"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"&<<=(_:_:)"},"pathComponents":["UInt8","&<<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking right shift operator (`&>>`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking right shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &>> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &>> 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&>>(_:_:)"},"pathComponents":["UInt16","&>>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the given integer, if it can be represented"},{"text":"exactly."},{"text":""},{"text":"If the value passed as `source` is not representable exactly, the result"},{"text":"is `nil`. In the following example, the constant `x` is successfully"},{"text":"created from a value of `100`, while the attempt to initialize the"},{"text":"constant `y` from `1_000` fails because the `Int8` type can represent"},{"text":"`127` at maximum:"},{"text":""},{"text":"    let x = Int8(exactly: 100)"},{"text":"    // x == Optional(100)"},{"text":"    let y = Int8(exactly: 1_000)"},{"text":"    // y == nil"},{"text":""},{"text":"- Parameter source: A value to convert to this type of integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["Int8","init(exactly:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"},{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE2seoiyyxz_xtFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"-=(_:_:)"},"pathComponents":["Int64","-=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The maximum representable integer in this type."},{"text":""},{"text":"For signed integer types, this value is `(2 ** (bitWidth - 1)) - 1`,"},{"text":"where `**` is exponentiation."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZss17FixedWidthIntegerRzrlE3maxxvpZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"max"},"pathComponents":["Int64","max"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"quotientAndRemainder"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"dividingBy"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> (quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Returns the quotient and remainder of this value divided by the given"},{"text":"value."},{"text":""},{"text":"Use this method to calculate the quotient and remainder of a division at"},{"text":"the same time."},{"text":""},{"text":"    let x = 1_000_000"},{"text":"    let (q, r) = x.quotientAndRemainder(dividingBy: 933)"},{"text":"    // q == 1071"},{"text":"    // r == 757"},{"text":""},{"text":"- Parameter rhs: The value to divide this value by."},{"text":"- Returns: A tuple containing the quotient and remainder of this value"},{"text":"  divided by `rhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"rhs","name":"dividingBy"}],"returns":[{"kind":"text","spelling":"(quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"quotientAndRemainder"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"dividingBy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> (quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"quotientAndRemainder(dividingBy:)"},"pathComponents":["UInt8","quotientAndRemainder(dividingBy:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A textual representation of this value."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE11descriptionSSvp::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"description"},"pathComponents":["UInt16","description"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE10firstRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:s10ArraySliceV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"firstRange(of:in:)"},"pathComponents":["ArraySlice","firstRange(of:in:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"D"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the two given values are"},{"text":"equal."},{"text":""},{"text":"You can check the equality of instances of any `BinaryInteger` types"},{"text":"using the equal-to operator (`==`). For example, you can test whether"},{"text":"the first `UInt8` value in a string's UTF-8 encoding is equal to the"},{"text":"first `UInt32` value in its Unicode scalar view:"},{"text":""},{"text":"    let gameName = \"Red Light, Green Light\""},{"text":"    if let firstUTF8 = gameName.utf8.first,"},{"text":"        let firstScalar = gameName.unicodeScalars.first?.value {"},{"text":"        print(\"First code values are equal: \\(firstUTF8 == firstScalar)\")"},{"text":"    }"},{"text":"    // Prints \"First code values are equal: true\""},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"==(_:_:)"},"pathComponents":["Int8","==(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The maximum representable integer in this type."},{"text":""},{"text":"For unsigned integer types, this value is `(2 ** bitWidth) - 1`, where"},{"text":"`**` is exponentiation."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUss17FixedWidthIntegerRzrlE3maxxvpZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"max"},"pathComponents":["UInt","max"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"truncatingIfNeeded"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the bit pattern of the given instance by"},{"text":"truncating or sign-extending if needed to fit this type."},{"text":""},{"text":"When the bit width of `T` (the type of `source`) is equal to or greater"},{"text":"than this type's bit width, the result is the truncated"},{"text":"least-significant bits of `source`. For example, when converting a"},{"text":"16-bit value to an 8-bit type, only the lower 8 bits of `source` are"},{"text":"used."},{"text":""},{"text":"    let p: Int16 = -500"},{"text":"    // 'p' has a binary representation of 11111110_00001100"},{"text":"    let q = Int8(truncatingIfNeeded: p)"},{"text":"    // q == 12"},{"text":"    // 'q' has a binary representation of 00001100"},{"text":""},{"text":"When the bit width of `T` is less than this type's bit width, the result"},{"text":"is *sign-extended* to fill the remaining bits. That is, if `source` is"},{"text":"negative, the result is padded with ones; otherwise, the result is"},{"text":"padded with zeros."},{"text":""},{"text":"    let u: Int8 = 21"},{"text":"    // 'u' has a binary representation of 00010101"},{"text":"    let v = Int16(truncatingIfNeeded: u)"},{"text":"    // v == 21"},{"text":"    // 'v' has a binary representation of 00000000_00010101"},{"text":""},{"text":"    let w: Int8 = -21"},{"text":"    // 'w' has a binary representation of 11101011"},{"text":"    let x = Int16(truncatingIfNeeded: w)"},{"text":"    // x == -21"},{"text":"    // 'x' has a binary representation of 11111111_11101011"},{"text":"    let y = UInt16(truncatingIfNeeded: w)"},{"text":"    // y == 65515"},{"text":"    // 'y' has a binary representation of 11111111_11101011"},{"text":""},{"text":"- Parameter source: An integer to convert to this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"truncatingIfNeeded"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(truncatingIfNeeded:)"},"pathComponents":["Int8","init(truncatingIfNeeded:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Calculates the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width, and stores the result in the left-hand-side variable."},{"text":""},{"text":"The `&>>=` operator performs a *masking shift*, where the value passed as"},{"text":"`rhs` is masked to produce a value in the range `0..<lhs.bitWidth`. The"},{"text":"shift is performed using this masked value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    var x: UInt8 = 30                 // 0b00011110"},{"text":"    x &>>= 2"},{"text":"    // x == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `19` as `rhs`, the operation first bitmasks `rhs` to"},{"text":"`3`, and then uses that masked value as the number of bits to shift `lhs`."},{"text":""},{"text":"    var y: UInt8 = 30                 // 0b00011110"},{"text":"    y &>>= 19"},{"text":"    // y == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"&>>=(_:_:)"},"pathComponents":["Int16","&>>=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"zero"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The zero value."},{"text":""},{"text":"Zero is the identity element for addition. For any value,"},{"text":"`x + .zero == x` and `.zero + x == x`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"zero"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"zero"},"pathComponents":["Int","zero"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"ExpressibleByIntegerLiteral","rhsPrecise":"s:s27ExpressibleByIntegerLiteralP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3lleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"<<=(_:_:)"},"pathComponents":["Int8","<<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"smallestEncoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The smallest encoding to which the string can be converted without"},{"text":"loss of information."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE16smallestEncodingSSAAE0C0Vvp"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"smallestEncoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"title":"smallestEncoding"},"pathComponents":["StringProtocol","smallestEncoding"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isMultiple"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"other","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE10isMultiple2ofSbx_tF::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isMultiple"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"isMultiple(of:)"},"pathComponents":["UInt64","isMultiple(of:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise AND operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise AND operation results in a value that has each bit set to `1`"},{"text":"where *both* of its arguments have that bit set to `1`. For example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x & y             // 0b00000100"},{"text":"    // z == 4"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1aoiyxx_xtFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&(_:_:)"},"pathComponents":["UInt8","&(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left."},{"text":""},{"text":"The `<<` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a right shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*, resulting in zero."},{"text":"- Using any other value for `rhs` performs a left shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted left by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x << 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x << 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a right shift"},{"text":"with `abs(rhs)`."},{"text":""},{"text":"    let a = x << -3"},{"text":"    // a == 3                         // 0b00000011"},{"text":"    let b = x >> 3"},{"text":"    // b == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"<<(_:_:)"},"pathComponents":["Int16","<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The minimum representable integer in this type."},{"text":""},{"text":"For signed integer types, this value is `-(2 ** (bitWidth - 1))`, where"},{"text":"`**` is exponentiation."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZss17FixedWidthIntegerRzrlE3minxvpZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"min"},"pathComponents":["Int64","min"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the given integer."},{"text":""},{"text":"Use this initializer to convert from another integer type when you know"},{"text":"the value is within the bounds of this type. Passing a value that can't"},{"text":"be represented in this type results in a runtime error."},{"text":""},{"text":"In the following example, the constant `y` is successfully created from"},{"text":"`x`, an `Int` instance with a value of `100`. Because the `Int8` type"},{"text":"can represent `127` at maximum, the attempt to create `z` with a value"},{"text":"of `1000` results in a runtime error."},{"text":""},{"text":"    let x = 100"},{"text":"    let y = Int8(x)"},{"text":"    // y == 100"},{"text":"    let z = Int8(x * 10)"},{"text":"    // Error: Not enough bits to represent the given value"},{"text":""},{"text":"- Parameter source: A value to convert to this type of integer. The value"},{"text":"  passed as `source` must be representable in this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Int16","init(_:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"},{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE2seoiyyxz_xtFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"-=(_:_:)"},"pathComponents":["UInt","-=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"encode"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"C"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"t"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":".Type) "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation26EncodableWithConfigurationP","spelling":"EncodableWithConfiguration"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation30EncodingConfigurationProvidingP","spelling":"EncodingConfigurationProviding"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"EncodingConfiguration"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"EncodingConfiguration"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"t"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"t"},{"declarationFragments":[{"kind":"identifier","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":".Type"}],"name":"configuration"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s24UnkeyedEncodingContainerP10FoundationE6encode_13configurationyqd___qd_0_mtKAC26EncodableWithConfigurationRd__AC0bI9ProvidingRd_0_0bI0Qyd_0_AHRtd__r0_lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"encode"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"C"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":".Type) "},{"kind":"keyword","spelling":"throws"}],"title":"encode(_:configuration:)"},"pathComponents":["UnkeyedEncodingContainer","encode(_:configuration:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"EncodableWithConfiguration","rhsPrecise":"s:10Foundation26EncodableWithConfigurationP"},{"kind":"conformance","lhs":"C","rhs":"EncodingConfigurationProviding","rhsPrecise":"s:10Foundation30EncodingConfigurationProvidingP"},{"kind":"sameType","lhs":"T.EncodingConfiguration","rhs":"C.EncodingConfiguration"}],"parameters":[{"depth":1,"index":0,"name":"T"},{"depth":1,"index":1,"name":"C"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"from"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPA2A15ContiguousBytesRzrlE04copyE02to4fromySryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexSlRtzr0_lF::SYNTHESIZED::s:s15EmptyCollectionV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":")"}],"title":"copyBytes(to:from:)"},"pathComponents":["EmptyCollection","copyBytes(to:from:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"ContiguousBytes","rhsPrecise":"s:10Foundation15ContiguousBytesP"}],"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"ContiguousBytes","rhsPrecise":"s:10Foundation15ContiguousBytesP"},{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"DestinationType"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is greater than that of the second argument."},{"text":""},{"text":"This is the default implementation of the greater-than operator (`>`) for"},{"text":"any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE1goiySbx_xtFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["Int64",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The big-endian representation of this integer."},{"text":""},{"text":"If necessary, the byte order of this value is reversed from the typical"},{"text":"byte order of this integer type. On a big-endian platform, for any"},{"text":"integer `x`, `x == x.bigEndian`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE9bigEndianxvp::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"bigEndian"},"pathComponents":["UInt8","bigEndian"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"},{"declarationFragments":[{"kind":"identifier","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"y"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SxsE1loiySbx_xtFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<(_:_:)"},"pathComponents":["Int","<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A textual representation of this value."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE11descriptionSSvp::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"description"},"pathComponents":["Int16","description"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Calculates the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width, and stores the result in the left-hand-side variable."},{"text":""},{"text":"The `&>>=` operator performs a *masking shift*, where the value passed as"},{"text":"`rhs` is masked to produce a value in the range `0..<lhs.bitWidth`. The"},{"text":"shift is performed using this masked value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    var x: UInt8 = 30                 // 0b00011110"},{"text":"    x &>>= 2"},{"text":"    // x == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `19` as `rhs`, the operation first bitmasks `rhs` to"},{"text":"`3`, and then uses that masked value as the number of bits to shift `lhs`."},{"text":""},{"text":"    var y: UInt8 = 30                 // 0b00011110"},{"text":"    y &>>= 19"},{"text":"    // y == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"&>>=(_:_:)"},"pathComponents":["UInt16","&>>=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":11}},{"domain":"iOS","introduced":{"major":9,"minor":0}}],"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedStandardContains"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"string"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the string contains the given"},{"text":"string, taking the current locale into account."},{"text":""},{"text":"This is the most appropriate method for doing user-level string searches,"},{"text":"similar to how searches are done generally in the system.  The search is"},{"text":"locale-aware, case and diacritic insensitive.  The exact list of search"},{"text":"options applied may change over time."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"string"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"string"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE25localizedStandardContainsySbqd__SyRd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedStandardContains"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"localizedStandardContains(_:)"},"pathComponents":["StringProtocol","localizedStandardContains(_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"~"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the inverse of the bits set in the argument."},{"text":""},{"text":"The bitwise NOT operator (`~`) is a prefix operator that returns a value"},{"text":"in which all the bits of its argument are flipped: Bits that are `1` in"},{"text":"the argument are `0` in the result, and bits that are `0` in the argument"},{"text":"are `1` in the result. This is equivalent to the inverse of a set. For"},{"text":"example:"},{"text":""},{"text":"    let x: UInt8 = 5        // 0b00000101"},{"text":"    let notX = ~x           // 0b11111010"},{"text":""},{"text":"Performing a bitwise NOT operation on 0 returns a value with every bit"},{"text":"set to `1`."},{"text":""},{"text":"    let allOnes = ~UInt8.min   // 0b11111111"},{"text":""},{"text":"- Complexity: O(1)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE1topyxxFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"~"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"~(_:)"},"pathComponents":["UInt","~(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"symbol"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE8EncodingV6symbolACvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"symbol"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"title":"symbol"},"pathComponents":["String","Encoding","symbol"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking left shift operator (`&<<`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking left shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &<< 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &<< 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&<<(_:_:)"},"pathComponents":["Int8","&<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the given number unchanged."},{"text":""},{"text":"You can use the unary plus operator (`+`) to provide symmetry in your"},{"text":"code for positive numbers when also using the unary minus operator."},{"text":""},{"text":"    let x = -21"},{"text":"    let y = +21"},{"text":"    // x == -21"},{"text":"    // y == 21"},{"text":""},{"text":"- Returns: The given argument without any changes."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE1popyxxFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"+(_:)"},"pathComponents":["Int","+(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking right shift operator (`&>>`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking right shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &>> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &>> 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&>>(_:_:)"},"pathComponents":["Int16","&>>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9lastRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:s10ArraySliceV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"lastRange(of:in:)"},"pathComponents":["ArraySlice","lastRange(of:in:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"D"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE2peoiyyxz_xtFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"+=(_:_:)"},"pathComponents":["UInt","+=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the two given values are not"},{"text":"equal."},{"text":""},{"text":"You can check the inequality of instances of any `BinaryInteger` types"},{"text":"using the not-equal-to operator (`!=`). For example, you can test"},{"text":"whether the first `UInt8` value in a string's UTF-8 encoding is not"},{"text":"equal to the first `UInt32` value in its Unicode scalar view:"},{"text":""},{"text":"    let gameName = \"Red Light, Green Light\""},{"text":"    if let firstUTF8 = gameName.utf8.first,"},{"text":"        let firstScalar = gameName.unicodeScalars.first?.value {"},{"text":"        print(\"First code values are different: \\(firstUTF8 != firstScalar)\")"},{"text":"    }"},{"text":"    // Prints \"First code values are different: false\""},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2neoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"!=(_:_:)"},"pathComponents":["Int8","!=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE2peoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"+=(_:_:)"},"pathComponents":["UInt32","+=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE10firstRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:s5SliceV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"firstRange(of:)"},"pathComponents":["Slice","firstRange(of:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"D"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking left shift operator (`&<<`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking left shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &<< 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &<< 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&<<(_:_:)"},"pathComponents":["Int16","&<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9lastRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:Sa"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"lastRange(of:in:)"},"pathComponents":["Array","lastRange(of:in:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"D"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"encode"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"t"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"EncodingConfiguration"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation26EncodableWithConfigurationP","spelling":"EncodableWithConfiguration"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"t"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"t"},{"declarationFragments":[{"kind":"identifier","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"EncodingConfiguration"}],"name":"configuration"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s24UnkeyedEncodingContainerP10FoundationE6encode_13configurationyqd___0B13ConfigurationQyd__tKAC013EncodableWithG0Rd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"encode"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"EncodingConfiguration"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"title":"encode(_:configuration:)"},"pathComponents":["UnkeyedEncodingContainer","encode(_:configuration:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"EncodableWithConfiguration","rhsPrecise":"s:10Foundation26EncodableWithConfigurationP"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left."},{"text":""},{"text":"The `<<` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a right shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*, resulting in zero."},{"text":"- Using any other value for `rhs` performs a left shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted left by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x << 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x << 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a right shift"},{"text":"with `abs(rhs)`."},{"text":""},{"text":"    let a = x << -3"},{"text":"    // a == 3                         // 0b00000011"},{"text":"    let b = x >> 3"},{"text":"    // b == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"<<(_:_:)"},"pathComponents":["UInt8","<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"RHS"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"~"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the inverse of the bits set in the argument."},{"text":""},{"text":"The bitwise NOT operator (`~`) is a prefix operator that returns a value"},{"text":"in which all the bits of its argument are flipped: Bits that are `1` in"},{"text":"the argument are `0` in the result, and bits that are `0` in the argument"},{"text":"are `1` in the result. This is equivalent to the inverse of a set. For"},{"text":"example:"},{"text":""},{"text":"    let x: UInt8 = 5        // 0b00000101"},{"text":"    let notX = ~x           // 0b11111010"},{"text":""},{"text":"Performing a bitwise NOT operation on 0 returns a value with every bit"},{"text":"set to `1`."},{"text":""},{"text":"    let allOnes = ~UInt8.min   // 0b11111111"},{"text":""},{"text":"- Complexity: O(1)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE1topyxxFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"~"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"~(_:)"},"pathComponents":["UInt32","~(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedStringWithFormat"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"format"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"arguments"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7CVarArgP","spelling":"CVarArg"},{"kind":"text","spelling":"...) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"docComment":{"lines":[{"text":"Returns a string created by using a given format string as a"},{"text":"template into which the remaining argument values are substituted"},{"text":"according to the user's default locale."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"format"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"name":"format"},{"declarationFragments":[{"kind":"identifier","spelling":"arguments"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7CVarArgP","spelling":"CVarArg"},{"kind":"text","spelling":"..."}],"name":"arguments"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE25localizedStringWithFormatyS2S_s7CVarArg_pdtFZ"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedStringWithFormat"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7CVarArgP","spelling":"CVarArg"},{"kind":"text","spelling":"...) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"localizedStringWithFormat(_:_:)"},"pathComponents":["String","localizedStringWithFormat(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"utf8"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE8EncodingV4utf8ACvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"utf8"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"title":"utf8"},"pathComponents":["String","Encoding","utf8"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The maximum representable integer in this type."},{"text":""},{"text":"For unsigned integer types, this value is `(2 ** bitWidth) - 1`, where"},{"text":"`**` is exponentiation."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUss17FixedWidthIntegerRzrlE3maxxvpZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"max"},"pathComponents":["UInt64","max"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE10firstRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:s15EmptyCollectionV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"firstRange(of:in:)"},"pathComponents":["EmptyCollection","firstRange(of:in:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"D"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"appendingFormat"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"format"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"arguments"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7CVarArgP","spelling":"CVarArg"},{"kind":"text","spelling":"...) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"docComment":{"lines":[{"text":"Returns a string created by appending a string constructed from a given"},{"text":"format string and the following arguments."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"format"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"format"},{"declarationFragments":[{"kind":"identifier","spelling":"arguments"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7CVarArgP","spelling":"CVarArg"},{"kind":"text","spelling":"..."}],"name":"arguments"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE15appendingFormatySSqd___s7CVarArg_pdtSyRd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"appendingFormat"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7CVarArgP","spelling":"CVarArg"},{"kind":"text","spelling":"...) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"appendingFormat(_:_:)"},"pathComponents":["StringProtocol","appendingFormat(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SB","spelling":"BinaryFloatingPoint"}],"docComment":{"lines":[{"text":"Creates an integer from the given floating-point value, rounding toward"},{"text":"zero. Any fractional part of the value passed as `source` is removed."},{"text":""},{"text":"    let x = Int(21.5)"},{"text":"    // x == 21"},{"text":"    let y = Int(-21.5)"},{"text":"    // y == -21"},{"text":""},{"text":"If `source` is outside the bounds of this type after rounding toward"},{"text":"zero, a runtime error may occur."},{"text":""},{"text":"    let z = UInt(-21.5)"},{"text":"    // Error: ...outside the representable range"},{"text":""},{"text":"- Parameter source: A floating-point value to convert to an integer."},{"text":"  `source` must be representable in this type after rounding toward"},{"text":"  zero."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["UInt8","init(_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryFloatingPoint","rhsPrecise":"s:SB"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3lleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"<<=(_:_:)"},"pathComponents":["UInt16","<<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the two given values are not"},{"text":"equal."},{"text":""},{"text":"You can check the inequality of instances of any `BinaryInteger` types"},{"text":"using the not-equal-to operator (`!=`). For example, you can test"},{"text":"whether the first `UInt8` value in a string's UTF-8 encoding is not"},{"text":"equal to the first `UInt32` value in its Unicode scalar view:"},{"text":""},{"text":"    let gameName = \"Red Light, Green Light\""},{"text":"    if let firstUTF8 = gameName.utf8.first,"},{"text":"        let firstScalar = gameName.unicodeScalars.first?.value {"},{"text":"        print(\"First code values are different: \\(firstUTF8 != firstScalar)\")"},{"text":"    }"},{"text":"    // Prints \"First code values are different: false\""},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2neoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"!=(_:_:)"},"pathComponents":["UInt16","!=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the given integer, if it can be represented"},{"text":"exactly."},{"text":""},{"text":"If the value passed as `source` is not representable exactly, the result"},{"text":"is `nil`. In the following example, the constant `x` is successfully"},{"text":"created from a value of `100`, while the attempt to initialize the"},{"text":"constant `y` from `1_000` fails because the `Int8` type can represent"},{"text":"`127` at maximum:"},{"text":""},{"text":"    let x = Int8(exactly: 100)"},{"text":"    // x == Optional(100)"},{"text":"    let y = Int8(exactly: 1_000)"},{"text":"    // y == nil"},{"text":""},{"text":"- Parameter source: A value to convert to this type of integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["Int16","init(exactly:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"},{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is greater than that of the second argument."},{"text":""},{"text":"This is the default implementation of the greater-than operator (`>`) for"},{"text":"any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE1goiySbx_xtFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["Int32",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isoLatin1"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE8EncodingV9isoLatin1ACvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isoLatin1"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"title":"isoLatin1"},"pathComponents":["String","Encoding","isoLatin1"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Multiplies two values and stores the result in the left-hand-side"},{"text":"variable, wrapping any overflow."},{"text":""},{"text":"The masking multiplication assignment operator (`&*=`) silently wraps"},{"text":"any overflow that occurs during the operation. In the following example,"},{"text":"the product of `10` and `50` is greater than the maximum representable"},{"text":"`Int8` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    var x: Int8 = 10"},{"text":"    x &*= 5"},{"text":"    // x == 50"},{"text":"    var y: Int8 = 10"},{"text":"    y &*= 50"},{"text":"    // y == -12 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to multiply."},{"text":"  - rhs: The second value to multiply."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&*=(_:_:)"},"pathComponents":["UInt8","&*=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9lastRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:s15ContiguousArrayV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"lastRange(of:in:)"},"pathComponents":["ContiguousArray","lastRange(of:in:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"D"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"operand"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the additive inverse of the specified value."},{"text":""},{"text":"The negation operator (prefix `-`) returns the additive inverse of its"},{"text":"argument."},{"text":""},{"text":"    let x = 21"},{"text":"    let y = -x"},{"text":"    // y == -21"},{"text":""},{"text":"The resulting value must be representable in the same type as the"},{"text":"argument. In particular, negating a signed, fixed-width integer type's"},{"text":"minimum results in a value that cannot be represented."},{"text":""},{"text":"    let z = -Int8.min"},{"text":"    // Overflow error"},{"text":""},{"text":"- Returns: The additive inverse of the argument."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"operand"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"operand"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s13SignedNumericPsE1sopyxxFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"-(_:)"},"pathComponents":["Int","-(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE2seoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"-=(_:_:)"},"pathComponents":["UInt32","-=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking left shift operator (`&<<`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking left shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &<< 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &<< 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&<<(_:_:)"},"pathComponents":["UInt16","&<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The minimum representable integer in this type."},{"text":""},{"text":"For signed integer types, this value is `-(2 ** (bitWidth - 1))`, where"},{"text":"`**` is exponentiation."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZss17FixedWidthIntegerRzrlE3minxvpZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"min"},"pathComponents":["Int32","min"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedName"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"docComment":{"lines":[{"text":"Returns a human-readable string giving the name of the specified encoding."},{"text":""},{"text":"- Parameter encoding: A string encoding. For possible values, see"},{"text":"  `String.Encoding`."},{"text":"- Returns: A human-readable string giving the name of `encoding` in the"},{"text":"  current locale."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"internalName":"encoding","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE13localizedName2ofS2SAAE8EncodingV_tFZ"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedName"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"localizedName(of:)"},"pathComponents":["String","localizedName(of:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"addingPercentEncoding"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"withAllowedCharacters"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"allowedCharacters"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12CharacterSetV","spelling":"CharacterSet"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"?"}],"docComment":{"lines":[{"text":"Returns a new string created by replacing all characters in the string"},{"text":"not in the specified set with percent encoded characters."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"allowedCharacters"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12CharacterSetV","spelling":"CharacterSet"}],"internalName":"allowedCharacters","name":"withAllowedCharacters"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE21addingPercentEncoding21withAllowedCharactersSSSgAA12CharacterSetV_tF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"addingPercentEncoding"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"withAllowedCharacters"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12CharacterSetV","spelling":"CharacterSet"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"?"}],"title":"addingPercentEncoding(withAllowedCharacters:)"},"pathComponents":["StringProtocol","addingPercentEncoding(withAllowedCharacters:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is greater than that of the second argument."},{"text":""},{"text":"This is the default implementation of the greater-than operator (`>`) for"},{"text":"any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE1goiySbx_xtFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["UInt64",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Calculates the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width, and stores the result in the left-hand-side variable."},{"text":""},{"text":"The `&>>=` operator performs a *masking shift*, where the value passed as"},{"text":"`rhs` is masked to produce a value in the range `0..<lhs.bitWidth`. The"},{"text":"shift is performed using this masked value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    var x: UInt8 = 30                 // 0b00011110"},{"text":"    x &>>= 2"},{"text":"    // x == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `19` as `rhs`, the operation first bitmasks `rhs` to"},{"text":"`3`, and then uses that masked value as the number of bits to shift `lhs`."},{"text":""},{"text":"    var y: UInt8 = 30                 // 0b00011110"},{"text":"    y &>>= 19"},{"text":"    // y == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"&>>=(_:_:)"},"pathComponents":["Int8","&>>=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The minimum representable integer in this type."},{"text":""},{"text":"For unsigned integer types, this value is always `0`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUss17FixedWidthIntegerRzrlE3minxvpZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"min"},"pathComponents":["UInt64","min"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"truncatingIfNeeded"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the bit pattern of the given instance by"},{"text":"truncating or sign-extending if needed to fit this type."},{"text":""},{"text":"When the bit width of `T` (the type of `source`) is equal to or greater"},{"text":"than this type's bit width, the result is the truncated"},{"text":"least-significant bits of `source`. For example, when converting a"},{"text":"16-bit value to an 8-bit type, only the lower 8 bits of `source` are"},{"text":"used."},{"text":""},{"text":"    let p: Int16 = -500"},{"text":"    // 'p' has a binary representation of 11111110_00001100"},{"text":"    let q = Int8(truncatingIfNeeded: p)"},{"text":"    // q == 12"},{"text":"    // 'q' has a binary representation of 00001100"},{"text":""},{"text":"When the bit width of `T` is less than this type's bit width, the result"},{"text":"is *sign-extended* to fill the remaining bits. That is, if `source` is"},{"text":"negative, the result is padded with ones; otherwise, the result is"},{"text":"padded with zeros."},{"text":""},{"text":"    let u: Int8 = 21"},{"text":"    // 'u' has a binary representation of 00010101"},{"text":"    let v = Int16(truncatingIfNeeded: u)"},{"text":"    // v == 21"},{"text":"    // 'v' has a binary representation of 00000000_00010101"},{"text":""},{"text":"    let w: Int8 = -21"},{"text":"    // 'w' has a binary representation of 11101011"},{"text":"    let x = Int16(truncatingIfNeeded: w)"},{"text":"    // x == -21"},{"text":"    // 'x' has a binary representation of 11111111_11101011"},{"text":"    let y = UInt16(truncatingIfNeeded: w)"},{"text":"    // y == 65515"},{"text":"    // 'y' has a binary representation of 11111111_11101011"},{"text":""},{"text":"- Parameter source: An integer to convert to this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"truncatingIfNeeded"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(truncatingIfNeeded:)"},"pathComponents":["Int16","init(truncatingIfNeeded:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the two given values are"},{"text":"equal."},{"text":""},{"text":"You can check the equality of instances of any `BinaryInteger` types"},{"text":"using the equal-to operator (`==`). For example, you can test whether"},{"text":"the first `UInt8` value in a string's UTF-8 encoding is equal to the"},{"text":"first `UInt32` value in its Unicode scalar view:"},{"text":""},{"text":"    let gameName = \"Red Light, Green Light\""},{"text":"    if let firstUTF8 = gameName.utf8.first,"},{"text":"        let firstScalar = gameName.unicodeScalars.first?.value {"},{"text":"        print(\"First code values are equal: \\(firstUTF8 == firstScalar)\")"},{"text":"    }"},{"text":"    // Prints \"First code values are equal: true\""},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"==(_:_:)"},"pathComponents":["Int16","==(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"NSRange"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Sn10FoundationSzRzrlEySnyxGSgAA8_NSRangeVcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"typeIdentifier","spelling":"NSRange"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Range","init(_:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Bound","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Bound","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":0,"index":0,"name":"Bound"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left."},{"text":""},{"text":"The `<<` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a right shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*, resulting in zero."},{"text":"- Using any other value for `rhs` performs a left shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted left by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x << 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x << 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a right shift"},{"text":"with `abs(rhs)`."},{"text":""},{"text":"    let a = x << -3"},{"text":"    // a == 3                         // 0b00000011"},{"text":"    let b = x >> 3"},{"text":"    // b == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"<<(_:_:)"},"pathComponents":["Int8","<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bitWidth"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The number of bits in the binary representation of this value."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE03bitB0Sivp::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bitWidth"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"bitWidth"},"pathComponents":["UInt8","bitWidth"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"littleEndian"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates an integer from its little-endian representation, changing the"},{"text":"byte order if necessary."},{"text":""},{"text":"- Parameter value: A value to use as the little-endian representation of"},{"text":"  the new integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(littleEndian:)"},"pathComponents":["UInt8","init(littleEndian:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The maximum representable integer in this type."},{"text":""},{"text":"For unsigned integer types, this value is `(2 ** bitWidth) - 1`, where"},{"text":"`**` is exponentiation."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUss17FixedWidthIntegerRzrlE3maxxvpZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"max"},"pathComponents":["UInt32","max"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3lleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"<<=(_:_:)"},"pathComponents":["Int16","<<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right."},{"text":""},{"text":"The `>>` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a left shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*. An overshift results in `-1` for a"},{"text":"  negative value of `lhs` or `0` for a nonnegative value."},{"text":"- Using any other value for `rhs` performs a right shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted right by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x >> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x >> 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a left shift"},{"text":"using `abs(rhs)`."},{"text":""},{"text":"    let a = x >> -3"},{"text":"    // a == 240                       // 0b11110000"},{"text":"    let b = x << 3"},{"text":"    // b == 240                       // 0b11110000"},{"text":""},{"text":"Right shift operations on negative values \"fill in\" the high bits with"},{"text":"ones instead of zeros."},{"text":""},{"text":"    let q: Int8 = -30                 // 0b11100010"},{"text":"    let r = q >> 2"},{"text":"    // r == -8                        // 0b11111000"},{"text":""},{"text":"    let s = q >> 11"},{"text":"    // s == -1                        // 0b11111111"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":">>(_:_:)"},"pathComponents":["UInt8",">>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"RHS"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE10firstRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:Sa"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"firstRange(of:in:)"},"pathComponents":["Array","firstRange(of:in:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"D"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isSigned"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A Boolean value indicating whether this type is a signed integer type."},{"text":""},{"text":"This property is always `false` for unsigned integer types."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUsE8isSignedSbvpZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isSigned"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"isSigned"},"pathComponents":["UInt8","isSigned"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"deprecated":{"major":4},"domain":"Swift","renamed":"init(truncating:)"}],"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s4Int8V10FoundationEyAbC8NSNumberCcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Int8","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9lastRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:s15EmptyCollectionV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"lastRange(of:in:)"},"pathComponents":["EmptyCollection","lastRange(of:in:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"D"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"~"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the inverse of the bits set in the argument."},{"text":""},{"text":"The bitwise NOT operator (`~`) is a prefix operator that returns a value"},{"text":"in which all the bits of its argument are flipped: Bits that are `1` in"},{"text":"the argument are `0` in the result, and bits that are `0` in the argument"},{"text":"are `1` in the result. This is equivalent to the inverse of a set. For"},{"text":"example:"},{"text":""},{"text":"    let x: UInt8 = 5        // 0b00000101"},{"text":"    let notX = ~x           // 0b11111010"},{"text":""},{"text":"Performing a bitwise NOT operation on 0 returns a value with every bit"},{"text":"set to `1`."},{"text":""},{"text":"    let allOnes = ~UInt8.min   // 0b11111111"},{"text":""},{"text":"- Complexity: O(1)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE1topyxxFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"~"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"~(_:)"},"pathComponents":["UInt64","~(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"appending"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"aString"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"aString"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"aString"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE9appendingySSqd__SyRd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"appending"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"appending(_:)"},"pathComponents":["StringProtocol","appending(_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE2seoiyyxz_xtFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"-=(_:_:)"},"pathComponents":["Int32","-=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking left shift operator (`&<<`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking left shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &<< 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &<< 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&<<(_:_:)"},"pathComponents":["UInt16","&<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","availability":[{"domain":"Swift","obsoleted":{"major":4,"minor":0}}],"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"distance"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS9UTF16ViewV","spelling":"UTF16View"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS9UTF16ViewV5Indexa","spelling":"Index"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS9UTF16ViewV","spelling":"UTF16View"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS9UTF16ViewV5Indexa","spelling":"Index"},{"kind":"text","spelling":"?"}],"internalName":"other","name":"to"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SS5IndexV10FoundationE8distance2toSiABSg_tF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"distance"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS9UTF16ViewV","spelling":"UTF16View"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS9UTF16ViewV5Indexa","spelling":"Index"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"distance(to:)"},"pathComponents":["String","Index","distance(to:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The maximum representable integer in this type."},{"text":""},{"text":"For signed integer types, this value is `(2 ** (bitWidth - 1)) - 1`,"},{"text":"where `**` is exponentiation."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZss17FixedWidthIntegerRzrlE3maxxvpZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"max"},"pathComponents":["Int32","max"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE2peoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"+=(_:_:)"},"pathComponents":["UInt64","+=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the given integer."},{"text":""},{"text":"Use this initializer to convert from another integer type when you know"},{"text":"the value is within the bounds of this type. Passing a value that can't"},{"text":"be represented in this type results in a runtime error."},{"text":""},{"text":"In the following example, the constant `y` is successfully created from"},{"text":"`x`, an `Int` instance with a value of `100`. Because the `Int8` type"},{"text":"can represent `127` at maximum, the attempt to create `z` with a value"},{"text":"of `1000` results in a runtime error."},{"text":""},{"text":"    let x = 100"},{"text":"    let y = Int8(x)"},{"text":"    // y == 100"},{"text":"    let z = Int8(x * 10)"},{"text":"    // Error: Not enough bits to represent the given value"},{"text":""},{"text":"- Parameter source: A value to convert to this type of integer. The value"},{"text":"  passed as `source` must be representable in this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Int8","init(_:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"},{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"utf8String"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"bytes"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SP","spelling":"UnsafePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5CChara","spelling":"CChar"},{"kind":"text","spelling":">)"}],"docComment":{"lines":[{"text":"Creates a string by copying the data from a given"},{"text":"C array of UTF8-encoded bytes."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE10utf8StringSSSgSPys4Int8VG_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"utf8String"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SP","spelling":"UnsafePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5CChara","spelling":"CChar"},{"kind":"text","spelling":">)"}],"title":"init(utf8String:)"},"pathComponents":["String","init(utf8String:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isMultiple"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"other","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE10isMultiple2ofSbx_tF::SYNTHESIZED::s:Su"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isMultiple"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"isMultiple(of:)"},"pathComponents":["UInt","isMultiple(of:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the two given values are"},{"text":"equal."},{"text":""},{"text":"You can check the equality of instances of any `BinaryInteger` types"},{"text":"using the equal-to operator (`==`). For example, you can test whether"},{"text":"the first `UInt8` value in a string's UTF-8 encoding is equal to the"},{"text":"first `UInt32` value in its Unicode scalar view:"},{"text":""},{"text":"    let gameName = \"Red Light, Green Light\""},{"text":"    if let firstUTF8 = gameName.utf8.first,"},{"text":"        let firstScalar = gameName.unicodeScalars.first?.value {"},{"text":"        print(\"First code values are equal: \\(firstUTF8 == firstScalar)\")"},{"text":"    }"},{"text":"    // Prints \"First code values are equal: true\""},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"==(_:_:)"},"pathComponents":["UInt16","==(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"truncatingIfNeeded"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the bit pattern of the given instance by"},{"text":"truncating or sign-extending if needed to fit this type."},{"text":""},{"text":"When the bit width of `T` (the type of `source`) is equal to or greater"},{"text":"than this type's bit width, the result is the truncated"},{"text":"least-significant bits of `source`. For example, when converting a"},{"text":"16-bit value to an 8-bit type, only the lower 8 bits of `source` are"},{"text":"used."},{"text":""},{"text":"    let p: Int16 = -500"},{"text":"    // 'p' has a binary representation of 11111110_00001100"},{"text":"    let q = Int8(truncatingIfNeeded: p)"},{"text":"    // q == 12"},{"text":"    // 'q' has a binary representation of 00001100"},{"text":""},{"text":"When the bit width of `T` is less than this type's bit width, the result"},{"text":"is *sign-extended* to fill the remaining bits. That is, if `source` is"},{"text":"negative, the result is padded with ones; otherwise, the result is"},{"text":"padded with zeros."},{"text":""},{"text":"    let u: Int8 = 21"},{"text":"    // 'u' has a binary representation of 00010101"},{"text":"    let v = Int16(truncatingIfNeeded: u)"},{"text":"    // v == 21"},{"text":"    // 'v' has a binary representation of 00000000_00010101"},{"text":""},{"text":"    let w: Int8 = -21"},{"text":"    // 'w' has a binary representation of 11101011"},{"text":"    let x = Int16(truncatingIfNeeded: w)"},{"text":"    // x == -21"},{"text":"    // 'x' has a binary representation of 11111111_11101011"},{"text":"    let y = UInt16(truncatingIfNeeded: w)"},{"text":"    // y == 65515"},{"text":"    // 'y' has a binary representation of 11111111_11101011"},{"text":""},{"text":"- Parameter source: An integer to convert to this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"truncatingIfNeeded"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(truncatingIfNeeded:)"},"pathComponents":["UInt16","init(truncatingIfNeeded:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A textual representation of this value."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE11descriptionSSvp::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"description"},"pathComponents":["Int8","description"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"in"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE10firstRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF::SYNTHESIZED::s:s15ContiguousArrayV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"firstRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"firstRange(of:in:)"},"pathComponents":["ContiguousArray","firstRange(of:in:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"D"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is greater than that of the second argument."},{"text":""},{"text":"This is the default implementation of the greater-than operator (`>`) for"},{"text":"any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE1goiySbx_xtFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["UInt32",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The minimum representable integer in this type."},{"text":""},{"text":"For unsigned integer types, this value is always `0`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUss17FixedWidthIntegerRzrlE3minxvpZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"min"},"pathComponents":["UInt32","min"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE2peoiyyxz_xtFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"+=(_:_:)"},"pathComponents":["Int32","+=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"from"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPA2A15ContiguousBytesRzrlE04copyE02to4fromySryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexSlRtzr0_lF::SYNTHESIZED::s:s10ArraySliceV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":")"}],"title":"copyBytes(to:from:)"},"pathComponents":["ArraySlice","copyBytes(to:from:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"ContiguousBytes","rhsPrecise":"s:10Foundation15ContiguousBytesP"}],"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"ContiguousBytes","rhsPrecise":"s:10Foundation15ContiguousBytesP"},{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"DestinationType"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the two given values are not"},{"text":"equal."},{"text":""},{"text":"You can check the inequality of instances of any `BinaryInteger` types"},{"text":"using the not-equal-to operator (`!=`). For example, you can test"},{"text":"whether the first `UInt8` value in a string's UTF-8 encoding is not"},{"text":"equal to the first `UInt32` value in its Unicode scalar view:"},{"text":""},{"text":"    let gameName = \"Red Light, Green Light\""},{"text":"    if let firstUTF8 = gameName.utf8.first,"},{"text":"        let firstScalar = gameName.unicodeScalars.first?.value {"},{"text":"        print(\"First code values are different: \\(firstUTF8 != firstScalar)\")"},{"text":"    }"},{"text":"    // Prints \"First code values are different: false\""},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2neoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"!=(_:_:)"},"pathComponents":["Int16","!=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking right shift operator (`&>>`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking right shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &>> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &>> 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&>>(_:_:)"},"pathComponents":["Int8","&>>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"japaneseEUC"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE8EncodingV11japaneseEUCACvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"japaneseEUC"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"title":"japaneseEUC"},"pathComponents":["String","Encoding","japaneseEUC"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE2seoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"-=(_:_:)"},"pathComponents":["UInt64","-=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"negate"},{"kind":"text","spelling":"()"}],"docComment":{"lines":[{"text":"Replaces this value with its additive inverse."},{"text":""},{"text":"The following example uses the `negate()` method to negate the value of"},{"text":"an integer `x`:"},{"text":""},{"text":"    var x = 21"},{"text":"    x.negate()"},{"text":"    // x == -21"},{"text":""},{"text":"The resulting value must be representable within the value's type. In"},{"text":"particular, negating a signed, fixed-width integer type's minimum"},{"text":"results in a value that cannot be represented."},{"text":""},{"text":"    var y = Int8.min"},{"text":"    y.negate()"},{"text":"    // Overflow error"}]},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s13SignedNumericPsE6negateyyF::SYNTHESIZED::s:Si"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"negate"},{"kind":"text","spelling":"()"}],"title":"negate()"},"pathComponents":["Int","negate()"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"region"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"string"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation16AttributedStringV","spelling":"AttributedString"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation16AttributedStringV5IndexV","spelling":"Index"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Sn10FoundationSS5IndexVRszrlE_2inSnyACGSgqd___qd_0_tcSXRd__SyRd_0_AA16AttributedStringVABV5BoundRtd__r0_lufc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":")"}],"title":"init(_:in:)"},"pathComponents":["Range","init(_:in:)"],"swiftExtension":{"constraints":[{"kind":"sameType","lhs":"Bound","rhs":"String.Index","rhsPrecise":"s:SS5IndexV"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"sameType","lhs":"Bound","rhs":"String.Index","rhsPrecise":"s:SS5IndexV"},{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"conformance","lhs":"S","rhs":"StringProtocol","rhsPrecise":"s:Sy"},{"kind":"sameType","lhs":"R.Bound","rhs":"AttributedString.Index","rhsPrecise":"s:10Foundation16AttributedStringV5IndexV"}],"parameters":[{"depth":0,"index":0,"name":"Bound"},{"depth":1,"index":0,"name":"R"},{"depth":1,"index":1,"name":"S"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"~"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the inverse of the bits set in the argument."},{"text":""},{"text":"The bitwise NOT operator (`~`) is a prefix operator that returns a value"},{"text":"in which all the bits of its argument are flipped: Bits that are `1` in"},{"text":"the argument are `0` in the result, and bits that are `0` in the argument"},{"text":"are `1` in the result. This is equivalent to the inverse of a set. For"},{"text":"example:"},{"text":""},{"text":"    let x: UInt8 = 5        // 0b00000101"},{"text":"    let notX = ~x           // 0b11111010"},{"text":""},{"text":"Performing a bitwise NOT operation on 0 returns a value with every bit"},{"text":"set to `1`."},{"text":""},{"text":"    let allOnes = ~UInt8.min   // 0b11111111"},{"text":""},{"text":"- Complexity: O(1)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE1topyxxFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"~"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"~(_:)"},"pathComponents":["Int32","~(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"NSRange"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Sn10FoundationSiRszrlEySnySiGSgAA8_NSRangeVcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"typeIdentifier","spelling":"NSRange"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Range","init(_:)"],"swiftExtension":{"constraints":[{"kind":"sameType","lhs":"Bound","rhs":"Int","rhsPrecise":"s:Si"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"sameType","lhs":"Bound","rhs":"Int","rhsPrecise":"s:Si"}],"parameters":[{"depth":0,"index":0,"name":"Bound"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking left shift operator (`&<<`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking left shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &<< 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &<< 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&<<(_:_:)"},"pathComponents":["Int16","&<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"quotientAndRemainder"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"dividingBy"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> (quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Returns the quotient and remainder of this value divided by the given"},{"text":"value."},{"text":""},{"text":"Use this method to calculate the quotient and remainder of a division at"},{"text":"the same time."},{"text":""},{"text":"    let x = 1_000_000"},{"text":"    let (q, r) = x.quotientAndRemainder(dividingBy: 933)"},{"text":"    // q == 1071"},{"text":"    // r == 757"},{"text":""},{"text":"- Parameter rhs: The value to divide this value by."},{"text":"- Returns: A tuple containing the quotient and remainder of this value"},{"text":"  divided by `rhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"rhs","name":"dividingBy"}],"returns":[{"kind":"text","spelling":"(quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"quotientAndRemainder"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"dividingBy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> (quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"quotientAndRemainder(dividingBy:)"},"pathComponents":["UInt16","quotientAndRemainder(dividingBy:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"from"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexRtzr0_lF::SYNTHESIZED::s:s15EmptyCollectionV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:from:)"},"pathComponents":["EmptyCollection","copyBytes(to:from:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"DestinationType"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A textual representation of this value."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE11descriptionSSvp::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"description"},"pathComponents":["UInt8","description"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The big-endian representation of this integer."},{"text":""},{"text":"If necessary, the byte order of this value is reversed from the typical"},{"text":"byte order of this integer type. On a big-endian platform, for any"},{"text":"integer `x`, `x == x.bigEndian`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE9bigEndianxvp::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"bigEndian"},"pathComponents":["Int16","bigEndian"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"operand"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the additive inverse of the specified value."},{"text":""},{"text":"The negation operator (prefix `-`) returns the additive inverse of its"},{"text":"argument."},{"text":""},{"text":"    let x = 21"},{"text":"    let y = -x"},{"text":"    // y == -21"},{"text":""},{"text":"The resulting value must be representable in the same type as the"},{"text":"argument. In particular, negating a signed, fixed-width integer type's"},{"text":"minimum results in a value that cannot be represented."},{"text":""},{"text":"    let z = -Int8.min"},{"text":"    // Overflow error"},{"text":""},{"text":"- Returns: The additive inverse of the argument."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"operand"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"operand"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s13SignedNumericPsE1sopyxxFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"-(_:)"},"pathComponents":["Int64","-(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"bytesNoCopy"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"bytes"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sv","spelling":"UnsafeMutableRawPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"length"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"freeWhenDone"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"flag"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates a new string that contains the specified number of bytes from the"},{"text":"given buffer, interpreted in the specified encoding, and optionally"},{"text":"frees the buffer."},{"text":""},{"text":"- Warning: This initializer is not memory-safe!"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE11bytesNoCopy6length8encoding12freeWhenDoneSSSgSv_SiSSAAE8EncodingVSbtcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"bytesNoCopy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sv","spelling":"UnsafeMutableRawPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"length"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"freeWhenDone"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":")"}],"title":"init(bytesNoCopy:length:encoding:freeWhenDone:)"},"pathComponents":["String","init(bytesNoCopy:length:encoding:freeWhenDone:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the given number unchanged."},{"text":""},{"text":"You can use the unary plus operator (`+`) to provide symmetry in your"},{"text":"code for positive numbers when also using the unary minus operator."},{"text":""},{"text":"    let x = -21"},{"text":"    let y = +21"},{"text":"    // x == -21"},{"text":"    // y == 21"},{"text":""},{"text":"- Returns: The given argument without any changes."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE1popyxxFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"+(_:)"},"pathComponents":["UInt64","+(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSryqd__G_tlF::SYNTHESIZED::s:s5SliceV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:)"},"pathComponents":["Slice","copyBytes(to:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"DestinationType"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"bigEndian"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates an integer from its big-endian representation, changing the byte"},{"text":"order if necessary."},{"text":""},{"text":"- Parameter value: A value to use as the big-endian representation of the"},{"text":"  new integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(bigEndian:)"},"pathComponents":["UInt16","init(bigEndian:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"zero"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The zero value."},{"text":""},{"text":"Zero is the identity element for addition. For any value,"},{"text":"`x + .zero == x` and `.zero + x == x`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"zero"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"zero"},"pathComponents":["UInt32","zero"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"ExpressibleByIntegerLiteral","rhsPrecise":"s:s27ExpressibleByIntegerLiteralP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"},{"declarationFragments":[{"kind":"identifier","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"y"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SxsE1loiySbx_xtFZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<(_:_:)"},"pathComponents":["UInt64","<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"|"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise OR operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise OR operation results in a value that has each bit set to `1`"},{"text":"where *one or both* of its arguments have that bit set to `1`. For"},{"text":"example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x | y             // 0b00001111"},{"text":"    // z == 15"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1ooiyxx_xtFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"|"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"|(_:_:)"},"pathComponents":["UInt16","|(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isMultiple"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"other","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZss17FixedWidthIntegerRzrlE10isMultiple2ofSbx_tF::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isMultiple"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"isMultiple(of:)"},"pathComponents":["Int16","isMultiple(of:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking right shift operator (`&>>`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking right shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &>> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &>> 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&>>(_:_:)"},"pathComponents":["UInt8","&>>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s4Int8V10FoundationE7exactlyABSgAC8NSNumberC_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["Int8","init(exactly:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width, and stores the result in the left-hand-side variable."},{"text":""},{"text":"The `&<<=` operator performs a *masking shift*, where the value used as"},{"text":"`rhs` is masked to produce a value in the range `0..<lhs.bitWidth`. The"},{"text":"shift is performed using this masked value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    var x: UInt8 = 30                 // 0b00011110"},{"text":"    x &<<= 2"},{"text":"    // x == 120                       // 0b01111000"},{"text":""},{"text":"However, if you pass `19` as `rhs`, the method first bitmasks `rhs` to"},{"text":"`3`, and then uses that masked value as the number of bits to shift `lhs`."},{"text":""},{"text":"    var y: UInt8 = 30                 // 0b00011110"},{"text":"    y &<<= 19"},{"text":"    // y == 240                       // 0b11110000"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"&<<=(_:_:)"},"pathComponents":["UInt16","&<<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right."},{"text":""},{"text":"The `>>` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a left shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*. An overshift results in `-1` for a"},{"text":"  negative value of `lhs` or `0` for a nonnegative value."},{"text":"- Using any other value for `rhs` performs a right shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted right by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x >> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x >> 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a left shift"},{"text":"using `abs(rhs)`."},{"text":""},{"text":"    let a = x >> -3"},{"text":"    // a == 240                       // 0b11110000"},{"text":"    let b = x << 3"},{"text":"    // b == 240                       // 0b11110000"},{"text":""},{"text":"Right shift operations on negative values \"fill in\" the high bits with"},{"text":"ones instead of zeros."},{"text":""},{"text":"    let q: Int8 = -30                 // 0b11100010"},{"text":"    let r = q >> 2"},{"text":"    // r == -8                        // 0b11111000"},{"text":""},{"text":"    let s = q >> 11"},{"text":"    // s == -1                        // 0b11111111"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":">>(_:_:)"},"pathComponents":["Int8",">>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"RHS"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"truncating"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s4Int8V10FoundationE10truncatingAbC8NSNumberC_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"truncating"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(truncating:)"},"pathComponents":["Int8","init(truncating:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the given number unchanged."},{"text":""},{"text":"You can use the unary plus operator (`+`) to provide symmetry in your"},{"text":"code for positive numbers when also using the unary minus operator."},{"text":""},{"text":"    let x = -21"},{"text":"    let y = +21"},{"text":"    // x == -21"},{"text":"    // y == 21"},{"text":""},{"text":"- Returns: The given argument without any changes."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE1popyxxFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"+(_:)"},"pathComponents":["Int32","+(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"name":"count"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSw_SitF::SYNTHESIZED::s:s5SliceV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:count:)"},"pathComponents":["Slice","copyBytes(to:count:)"],"swiftExtension":{"extendedModule":"Foundation"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"littleEndian"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates an integer from its little-endian representation, changing the"},{"text":"byte order if necessary."},{"text":""},{"text":"- Parameter value: A value to use as the little-endian representation of"},{"text":"  the new integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(littleEndian:)"},"pathComponents":["Int8","init(littleEndian:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bitWidth"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The number of bits in the binary representation of this value."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE03bitB0Sivp::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bitWidth"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"bitWidth"},"pathComponents":["Int8","bitWidth"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left."},{"text":""},{"text":"The `<<` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a right shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*, resulting in zero."},{"text":"- Using any other value for `rhs` performs a left shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted left by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x << 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x << 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a right shift"},{"text":"with `abs(rhs)`."},{"text":""},{"text":"    let a = x << -3"},{"text":"    // a == 3                         // 0b00000011"},{"text":"    let b = x >> 3"},{"text":"    // b == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"<<(_:_:)"},"pathComponents":["UInt8","<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"^"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise XOR operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise XOR operation, also known as an exclusive OR operation, results"},{"text":"in a value that has each bit set to `1` where *one or the other but not"},{"text":"both* of its arguments had that bit set to `1`. For example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x ^ y             // 0b00001011"},{"text":"    // z == 11"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1xoiyxx_xtFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"^"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"^(_:_:)"},"pathComponents":["UInt16","^(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise AND operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise AND operation results in a value that has each bit set to `1`"},{"text":"where *both* of its arguments have that bit set to `1`. For example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x & y             // 0b00000100"},{"text":"    // z == 4"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1aoiyxx_xtFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&(_:_:)"},"pathComponents":["Int16","&(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"domain":"Swift","obsoleted":{"major":4,"minor":0}}],"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"advanced"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"n"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS9UTF16ViewV","spelling":"UTF16View"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS9UTF16ViewV5Indexa","spelling":"Index"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"n"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"internalName":"n","name":"by"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS9UTF16ViewV","spelling":"UTF16View"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS9UTF16ViewV5Indexa","spelling":"Index"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SS5IndexV10FoundationE8advanced2byABSi_tF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"advanced"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS9UTF16ViewV","spelling":"UTF16View"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS9UTF16ViewV5Indexa","spelling":"Index"}],"title":"advanced(by:)"},"pathComponents":["String","Index","advanced(by:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"bytes"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:ST","spelling":"Sequence"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","spelling":"UInt8"}],"docComment":{"lines":[{"text":"Creates a new string equivalent to the given bytes interpreted in the"},{"text":"specified encoding."},{"text":""},{"text":"- Parameters:"},{"text":"  - bytes: A sequence of bytes to interpret using `encoding`."},{"text":"  - encoding: The ecoding to use to interpret `bytes`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE5bytes8encodingSSSgxh_SSAAE8EncodingVtcSTRzs5UInt8V7ElementRtzlufc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"bytes"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":")"}],"title":"init(bytes:encoding:)"},"pathComponents":["String","init(bytes:encoding:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"S","rhs":"Sequence","rhsPrecise":"s:ST"},{"kind":"sameType","lhs":"S.Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"parameters":[{"depth":0,"index":0,"name":"S"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"unicodeScalarLiteral"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"scalar"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s13UnicodeScalara","spelling":"UnicodeScalar"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s6UInt16V10FoundationE20unicodeScalarLiteralABs7UnicodeO0D0V_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"unicodeScalarLiteral"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s13UnicodeScalara","spelling":"UnicodeScalar"},{"kind":"text","spelling":")"}],"title":"init(unicodeScalarLiteral:)"},"pathComponents":["UInt16","init(unicodeScalarLiteral:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"windowsCP1253"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE8EncodingV13windowsCP1253ACvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"windowsCP1253"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"title":"windowsCP1253"},"pathComponents":["String","Encoding","windowsCP1253"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SB","spelling":"BinaryFloatingPoint"}],"docComment":{"lines":[{"text":"Creates an integer from the given floating-point value, if it can be"},{"text":"represented exactly."},{"text":""},{"text":"If the value passed as `source` is not representable exactly, the result"},{"text":"is `nil`. In the following example, the constant `x` is successfully"},{"text":"created from a value of `21.0`, while the attempt to initialize the"},{"text":"constant `y` from `21.5` fails:"},{"text":""},{"text":"    let x = Int(exactly: 21.0)"},{"text":"    // x == Optional(21)"},{"text":"    let y = Int(exactly: 21.5)"},{"text":"    // y == nil"},{"text":""},{"text":"- Parameter source: A floating-point value to convert to an integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["UInt16","init(exactly:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryFloatingPoint","rhsPrecise":"s:SB"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"from"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSw_qd__tSXRd__5BoundQyd__5IndexRtzlF::SYNTHESIZED::s:s10ArraySliceV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:from:)"},"pathComponents":["ArraySlice","copyBytes(to:from:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedCompare"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"aString"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation16ComparisonResultO","spelling":"ComparisonResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"docComment":{"lines":[{"text":"Compares the string and the given string using a localized comparison."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"aString"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"aString"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation16ComparisonResultO","spelling":"ComparisonResult"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE16localizedCompareyAA16ComparisonResultOqd__SyRd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedCompare"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation16ComparisonResultO","spelling":"ComparisonResult"}],"title":"localizedCompare(_:)"},"pathComponents":["StringProtocol","localizedCompare(_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The little-endian representation of this integer."},{"text":""},{"text":"If necessary, the byte order of this value is reversed from the typical"},{"text":"byte order of this integer type. On a little-endian platform, for any"},{"text":"integer `x`, `x == x.littleEndian`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE12littleEndianxvp::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"littleEndian"},"pathComponents":["UInt16","littleEndian"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"},{"declarationFragments":[{"kind":"identifier","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"y"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SxsE1loiySbx_xtFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<(_:_:)"},"pathComponents":["Int32","<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"region"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"attrStr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation24AttributedStringProtocolP","spelling":"AttributedStringProtocol"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS5IndexV","spelling":"Index"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Sn10FoundationAA16AttributedStringV5IndexVRszrlE_2inSnyAEGSgqd___qd_0_tcSXRd__AA0bC8ProtocolRd_0_SSADV5BoundRtd__r0_lufc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":")"}],"title":"init(_:in:)"},"pathComponents":["Range","init(_:in:)"],"swiftExtension":{"constraints":[{"kind":"sameType","lhs":"Bound","rhs":"AttributedString.Index","rhsPrecise":"s:10Foundation16AttributedStringV5IndexV"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"sameType","lhs":"Bound","rhs":"AttributedString.Index","rhsPrecise":"s:10Foundation16AttributedStringV5IndexV"},{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"conformance","lhs":"S","rhs":"AttributedStringProtocol","rhsPrecise":"s:10Foundation24AttributedStringProtocolP"},{"kind":"sameType","lhs":"R.Bound","rhs":"String.Index","rhsPrecise":"s:SS5IndexV"}],"parameters":[{"depth":0,"index":0,"name":"Bound"},{"depth":1,"index":0,"name":"R"},{"depth":1,"index":1,"name":"S"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"|"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise OR operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise OR operation results in a value that has each bit set to `1`"},{"text":"where *one or both* of its arguments have that bit set to `1`. For"},{"text":"example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x | y             // 0b00001111"},{"text":"    // z == 15"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1ooiyxx_xtFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"|"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"|(_:_:)"},"pathComponents":["Int16","|(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"bigEndian"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates an integer from its big-endian representation, changing the byte"},{"text":"order if necessary."},{"text":""},{"text":"- Parameter value: A value to use as the big-endian representation of the"},{"text":"  new integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(bigEndian:)"},"pathComponents":["Int16","init(bigEndian:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"sourcePosition"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation16AttributedStringV","spelling":"AttributedString"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation16AttributedStringV5IndexV","spelling":"Index"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"within"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"target"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS5IndexV10FoundationE_6withinABSgAC16AttributedStringVAAV_xtcSyRzlufc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation16AttributedStringV","spelling":"AttributedString"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation16AttributedStringV5IndexV","spelling":"Index"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"within"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":")"}],"title":"init(_:within:)"},"pathComponents":["String","Index","init(_:within:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"S","rhs":"StringProtocol","rhsPrecise":"s:Sy"}],"parameters":[{"depth":0,"index":0,"name":"S"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Multiplies two values and stores the result in the left-hand-side"},{"text":"variable, wrapping any overflow."},{"text":""},{"text":"The masking multiplication assignment operator (`&*=`) silently wraps"},{"text":"any overflow that occurs during the operation. In the following example,"},{"text":"the product of `10` and `50` is greater than the maximum representable"},{"text":"`Int8` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    var x: Int8 = 10"},{"text":"    x &*= 5"},{"text":"    // x == 50"},{"text":"    var y: Int8 = 10"},{"text":"    y &*= 50"},{"text":"    // y == -12 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to multiply."},{"text":"  - rhs: The second value to multiply."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&*=(_:_:)"},"pathComponents":["Int8","&*=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"},{"declarationFragments":[{"kind":"identifier","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"y"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SxsE1loiySbx_xtFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<(_:_:)"},"pathComponents":["UInt32","<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width, and stores the result in the left-hand-side variable."},{"text":""},{"text":"The `&<<=` operator performs a *masking shift*, where the value used as"},{"text":"`rhs` is masked to produce a value in the range `0..<lhs.bitWidth`. The"},{"text":"shift is performed using this masked value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    var x: UInt8 = 30                 // 0b00011110"},{"text":"    x &<<= 2"},{"text":"    // x == 120                       // 0b01111000"},{"text":""},{"text":"However, if you pass `19` as `rhs`, the method first bitmasks `rhs` to"},{"text":"`3`, and then uses that masked value as the number of bits to shift `lhs`."},{"text":""},{"text":"    var y: UInt8 = 30                 // 0b00011110"},{"text":"    y &<<= 19"},{"text":"    // y == 240                       // 0b11110000"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"&<<=(_:_:)"},"pathComponents":["Int16","&<<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"zero"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The zero value."},{"text":""},{"text":"Zero is the identity element for addition. For any value,"},{"text":"`x + .zero == x` and `.zero + x == x`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ::SYNTHESIZED::s:s6UInt64V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"zero"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"zero"},"pathComponents":["UInt64","zero"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"ExpressibleByIntegerLiteral","rhsPrecise":"s:s27ExpressibleByIntegerLiteralP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The big-endian representation of this integer."},{"text":""},{"text":"If necessary, the byte order of this value is reversed from the typical"},{"text":"byte order of this integer type. On a big-endian platform, for any"},{"text":"integer `x`, `x == x.bigEndian`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE9bigEndianxvp::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"bigEndian"},"pathComponents":["UInt16","bigEndian"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"from"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexRtzr0_lF::SYNTHESIZED::s:Sa"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:from:)"},"pathComponents":["Array","copyBytes(to:from:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"DestinationType"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"quotientAndRemainder"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"dividingBy"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> (quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Returns the quotient and remainder of this value divided by the given"},{"text":"value."},{"text":""},{"text":"Use this method to calculate the quotient and remainder of a division at"},{"text":"the same time."},{"text":""},{"text":"    let x = 1_000_000"},{"text":"    let (q, r) = x.quotientAndRemainder(dividingBy: 933)"},{"text":"    // q == 1071"},{"text":"    // r == 757"},{"text":""},{"text":"- Parameter rhs: The value to divide this value by."},{"text":"- Returns: A tuple containing the quotient and remainder of this value"},{"text":"  divided by `rhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"rhs","name":"dividingBy"}],"returns":[{"kind":"text","spelling":"(quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"quotientAndRemainder"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"dividingBy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> (quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"quotientAndRemainder(dividingBy:)"},"pathComponents":["Int16","quotientAndRemainder(dividingBy:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":11}},{"domain":"iOS","introduced":{"major":9,"minor":0}}],"declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedLowercase"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A lowercase version of the string that is produced using the current"},{"text":"locale."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE18localizedLowercaseSSvp"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedLowercase"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"localizedLowercase"},"pathComponents":["StringProtocol","localizedLowercase"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the given number unchanged."},{"text":""},{"text":"You can use the unary plus operator (`+`) to provide symmetry in your"},{"text":"code for positive numbers when also using the unary minus operator."},{"text":""},{"text":"    let x = -21"},{"text":"    let y = +21"},{"text":"    // x == -21"},{"text":"    // y == 21"},{"text":""},{"text":"- Returns: The given argument without any changes."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE1popyxxFZ::SYNTHESIZED::s:s6UInt32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"+(_:)"},"pathComponents":["UInt32","+(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"utf16CodeUnits"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SP","spelling":"UnsafePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7unichara","spelling":"unichar"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates a new string that contains the specified number of characters"},{"text":"from the given C array of Unicode characters."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE14utf16CodeUnits5countSSSPys6UInt16VG_Sitcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"utf16CodeUnits"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SP","spelling":"UnsafePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7unichara","spelling":"unichar"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":")"}],"title":"init(utf16CodeUnits:count:)"},"pathComponents":["String","init(utf16CodeUnits:count:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Calculates the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right, masking the shift amount to the"},{"text":"type's bit width, and stores the result in the left-hand-side variable."},{"text":""},{"text":"The `&>>=` operator performs a *masking shift*, where the value passed as"},{"text":"`rhs` is masked to produce a value in the range `0..<lhs.bitWidth`. The"},{"text":"shift is performed using this masked value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    var x: UInt8 = 30                 // 0b00011110"},{"text":"    x &>>= 2"},{"text":"    // x == 7                         // 0b00000111"},{"text":""},{"text":"However, if you use `19` as `rhs`, the operation first bitmasks `rhs` to"},{"text":"`3`, and then uses that masked value as the number of bits to shift `lhs`."},{"text":""},{"text":"    var y: UInt8 = 30                 // 0b00011110"},{"text":"    y &>>= 19"},{"text":"    // y == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&>>="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"&>>=(_:_:)"},"pathComponents":["UInt8","&>>=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation12DataProtocolP","spelling":"DataProtocol"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"data"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"}],"internalName":"data","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9lastRange2ofSny5IndexQzGSgqd___tAaBRd__lF::SYNTHESIZED::s:s5SliceV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lastRange"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"D"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"D"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","spelling":"Range"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":">?"}],"title":"lastRange(of:)"},"pathComponents":["Slice","lastRange(of:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"D"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"negate"},{"kind":"text","spelling":"()"}],"docComment":{"lines":[{"text":"Replaces this value with its additive inverse."},{"text":""},{"text":"The following example uses the `negate()` method to negate the value of"},{"text":"an integer `x`:"},{"text":""},{"text":"    var x = 21"},{"text":"    x.negate()"},{"text":"    // x == -21"},{"text":""},{"text":"The resulting value must be representable within the value's type. In"},{"text":"particular, negating a signed, fixed-width integer type's minimum"},{"text":"results in a value that cannot be represented."},{"text":""},{"text":"    var y = Int8.min"},{"text":"    y.negate()"},{"text":"    // Overflow error"}]},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s13SignedNumericPsE6negateyyF::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"negate"},{"kind":"text","spelling":"()"}],"title":"negate()"},"pathComponents":["Int64","negate()"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SB","spelling":"BinaryFloatingPoint"}],"docComment":{"lines":[{"text":"Creates an integer from the given floating-point value, if it can be"},{"text":"represented exactly."},{"text":""},{"text":"If the value passed as `source` is not representable exactly, the result"},{"text":"is `nil`. In the following example, the constant `x` is successfully"},{"text":"created from a value of `21.0`, while the attempt to initialize the"},{"text":"constant `y` from `21.5` fails:"},{"text":""},{"text":"    let x = Int(exactly: 21.0)"},{"text":"    // x == Optional(21)"},{"text":"    let y = Int(exactly: 21.5)"},{"text":"    // y == nil"},{"text":""},{"text":"- Parameter source: A floating-point value to convert to an integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["Int16","init(exactly:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryFloatingPoint","rhsPrecise":"s:SB"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"windowsCP1251"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE8EncodingV13windowsCP1251ACvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"windowsCP1251"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"title":"windowsCP1251"},"pathComponents":["String","Encoding","windowsCP1251"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"zero"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The zero value."},{"text":""},{"text":"Zero is the identity element for addition. For any value,"},{"text":"`x + .zero == x` and `.zero + x == x`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"zero"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"zero"},"pathComponents":["Int32","zero"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"ExpressibleByIntegerLiteral","rhsPrecise":"s:s27ExpressibleByIntegerLiteralP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left."},{"text":""},{"text":"The `<<` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a right shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*, resulting in zero."},{"text":"- Using any other value for `rhs` performs a left shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted left by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x << 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x << 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a right shift"},{"text":"with `abs(rhs)`."},{"text":""},{"text":"    let a = x << -3"},{"text":"    // a == 3                         // 0b00000011"},{"text":"    let b = x >> 3"},{"text":"    // b == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"<<(_:_:)"},"pathComponents":["Int8","<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"RHS"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"windowsCP1252"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE8EncodingV13windowsCP1252ACvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"windowsCP1252"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"title":"windowsCP1252"},"pathComponents":["String","Encoding","windowsCP1252"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The little-endian representation of this integer."},{"text":""},{"text":"If necessary, the byte order of this value is reversed from the typical"},{"text":"byte order of this integer type. On a little-endian platform, for any"},{"text":"integer `x`, `x == x.littleEndian`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE12littleEndianxvp::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"littleEndian"},"pathComponents":["Int16","littleEndian"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedStandardCompare"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"string"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation16ComparisonResultO","spelling":"ComparisonResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","spelling":"StringProtocol"}],"docComment":{"lines":[{"text":"Compares the string and the given string as sorted by the Finder."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"string"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"string"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation16ComparisonResultO","spelling":"ComparisonResult"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE24localizedStandardCompareyAA16ComparisonResultOqd__SyRd__lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"localizedStandardCompare"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation16ComparisonResultO","spelling":"ComparisonResult"}],"title":"localizedStandardCompare(_:)"},"pathComponents":["StringProtocol","localizedStandardCompare(_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"NSRange"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"attrStr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation24AttributedStringProtocolP","spelling":"AttributedStringProtocol"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Sn10FoundationAA16AttributedStringV5IndexVRszrlE_2inSnyAEGSgAA8_NSRangeV_qd__tcAA0bC8ProtocolRd__lufc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"S"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"NSRange"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"in"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"S"},{"kind":"text","spelling":")"}],"title":"init(_:in:)"},"pathComponents":["Range","init(_:in:)"],"swiftExtension":{"constraints":[{"kind":"sameType","lhs":"Bound","rhs":"AttributedString.Index","rhsPrecise":"s:10Foundation16AttributedStringV5IndexV"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"sameType","lhs":"Bound","rhs":"AttributedString.Index","rhsPrecise":"s:10Foundation16AttributedStringV5IndexV"},{"kind":"conformance","lhs":"S","rhs":"AttributedStringProtocol","rhsPrecise":"s:10Foundation24AttributedStringProtocolP"}],"parameters":[{"depth":0,"index":0,"name":"Bound"},{"depth":1,"index":0,"name":"S"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SB","spelling":"BinaryFloatingPoint"}],"docComment":{"lines":[{"text":"Creates an integer from the given floating-point value, rounding toward"},{"text":"zero. Any fractional part of the value passed as `source` is removed."},{"text":""},{"text":"    let x = Int(21.5)"},{"text":"    // x == 21"},{"text":"    let y = Int(-21.5)"},{"text":"    // y == -21"},{"text":""},{"text":"If `source` is outside the bounds of this type after rounding toward"},{"text":"zero, a runtime error may occur."},{"text":""},{"text":"    let z = UInt(-21.5)"},{"text":"    // Error: ...outside the representable range"},{"text":""},{"text":"- Parameter source: A floating-point value to convert to an integer."},{"text":"  `source` must be representable in this type after rounding toward"},{"text":"  zero."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Int8","init(_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryFloatingPoint","rhsPrecise":"s:SB"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"from"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexRtzr0_lF::SYNTHESIZED::s:s15ContiguousArrayV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:from:)"},"pathComponents":["ContiguousArray","copyBytes(to:from:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"DestinationType"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"}],"internalName":"ptr","name":"to"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2toSiSw_tF::SYNTHESIZED::s:s5SliceV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:)"},"pathComponents":["Slice","copyBytes(to:)"],"swiftExtension":{"extendedModule":"Foundation"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"^"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise XOR operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise XOR operation, also known as an exclusive OR operation, results"},{"text":"in a value that has each bit set to `1` where *one or the other but not"},{"text":"both* of its arguments had that bit set to `1`. For example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x ^ y             // 0b00001011"},{"text":"    // z == 11"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1xoiyxx_xtFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"^"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"^(_:_:)"},"pathComponents":["Int16","^(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"deprecated":{"major":4},"domain":"Swift","renamed":"init(truncating:)"}],"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s5UInt8V10FoundationEyAbC8NSNumberCcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["UInt8","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise AND operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise AND operation results in a value that has each bit set to `1`"},{"text":"where *both* of its arguments have that bit set to `1`. For example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x & y             // 0b00000100"},{"text":"    // z == 4"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1aoiyxx_xtFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&(_:_:)"},"pathComponents":["UInt16","&(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The maximum representable integer in this type."},{"text":""},{"text":"For signed integer types, this value is `(2 ** (bitWidth - 1)) - 1`,"},{"text":"where `**` is exponentiation."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZss17FixedWidthIntegerRzrlE3maxxvpZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"max"},"pathComponents":["Int","max"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lowercased"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"locale"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV","spelling":"Locale"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"docComment":{"lines":[{"text":"Returns a version of the string with all letters"},{"text":"converted to lowercase, taking into account the specified"},{"text":"locale."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"locale"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV","spelling":"Locale"},{"kind":"text","spelling":"?"}],"internalName":"locale","name":"with"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE10lowercased4withSSAA6LocaleVSg_tF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lowercased"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV","spelling":"Locale"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"lowercased(with:)"},"pathComponents":["StringProtocol","lowercased(with:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE2seoiyyxz_xtFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"-=(_:_:)"},"pathComponents":["Int","-=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The big-endian representation of this integer."},{"text":""},{"text":"If necessary, the byte order of this value is reversed from the typical"},{"text":"byte order of this integer type. On a big-endian platform, for any"},{"text":"integer `x`, `x == x.bigEndian`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE9bigEndianxvp::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"bigEndian"},"pathComponents":["Int8","bigEndian"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"deprecated":{"major":4},"domain":"Swift","renamed":"init(truncating:)"}],"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Sf10FoundationEySfAA8NSNumberCcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Float","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the two given values are not"},{"text":"equal."},{"text":""},{"text":"You can check the inequality of instances of any `BinaryInteger` types"},{"text":"using the not-equal-to operator (`!=`). For example, you can test"},{"text":"whether the first `UInt8` value in a string's UTF-8 encoding is not"},{"text":"equal to the first `UInt32` value in its Unicode scalar view:"},{"text":""},{"text":"    let gameName = \"Red Light, Green Light\""},{"text":"    if let firstUTF8 = gameName.utf8.first,"},{"text":"        let firstScalar = gameName.unicodeScalars.first?.value {"},{"text":"        print(\"First code values are different: \\(firstUTF8 != firstScalar)\")"},{"text":"    }"},{"text":"    // Prints \"First code values are different: false\""},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2neoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"!=(_:_:)"},"pathComponents":["UInt8","!=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isMultiple"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"other","name":"of"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZss17FixedWidthIntegerRzrlE10isMultiple2ofSbx_tF::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isMultiple"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"isMultiple(of:)"},"pathComponents":["Int8","isMultiple(of:)"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"unicode"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE8EncodingV7unicodeACvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"unicode"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"title":"unicode"},"pathComponents":["String","Encoding","unicode"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Multiplies two values and stores the result in the left-hand-side"},{"text":"variable, wrapping any overflow."},{"text":""},{"text":"The masking multiplication assignment operator (`&*=`) silently wraps"},{"text":"any overflow that occurs during the operation. In the following example,"},{"text":"the product of `10` and `50` is greater than the maximum representable"},{"text":"`Int8` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    var x: Int8 = 10"},{"text":"    x &*= 5"},{"text":"    // x == 50"},{"text":"    var y: Int8 = 10"},{"text":"    y &*= 50"},{"text":"    // y == -12 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to multiply."},{"text":"  - rhs: The second value to multiply."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&*=(_:_:)"},"pathComponents":["UInt16","&*=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"maximumLengthOfBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"docComment":{"lines":[{"text":"Returns the maximum number of bytes needed to store the"},{"text":"`String` in a given encoding."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"internalName":"encoding","name":"using"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE20maximumLengthOfBytes5usingSiSSAAE8EncodingV_tF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"maximumLengthOfBytes"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"maximumLengthOfBytes(using:)"},"pathComponents":["StringProtocol","maximumLengthOfBytes(using:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking left shift operator (`&<<`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking left shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &<< 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &<< 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3alloiyxx_xtFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&<<(_:_:)"},"pathComponents":["UInt8","&<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"from"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSw_qd__tSXRd__5BoundQyd__5IndexRtzlF::SYNTHESIZED::s:s15EmptyCollectionV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:from:)"},"pathComponents":["EmptyCollection","copyBytes(to:from:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"truncating"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s5UInt8V10FoundationE10truncatingAbC8NSNumberC_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"truncating"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(truncating:)"},"pathComponents":["UInt8","init(truncating:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"zero"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The zero value."},{"text":""},{"text":"Zero is the identity element for addition. For any value,"},{"text":"`x + .zero == x` and `.zero + x == x`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"zero"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"zero"},"pathComponents":["Int64","zero"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"ExpressibleByIntegerLiteral","rhsPrecise":"s:s27ExpressibleByIntegerLiteralP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"~"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the inverse of the bits set in the argument."},{"text":""},{"text":"The bitwise NOT operator (`~`) is a prefix operator that returns a value"},{"text":"in which all the bits of its argument are flipped: Bits that are `1` in"},{"text":"the argument are `0` in the result, and bits that are `0` in the argument"},{"text":"are `1` in the result. This is equivalent to the inverse of a set. For"},{"text":"example:"},{"text":""},{"text":"    let x: UInt8 = 5        // 0b00000101"},{"text":"    let notX = ~x           // 0b11111010"},{"text":""},{"text":"Performing a bitwise NOT operation on 0 returns a value with every bit"},{"text":"set to `1`."},{"text":""},{"text":"    let allOnes = ~UInt8.min   // 0b11111111"},{"text":""},{"text":"- Complexity: O(1)."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE1topyxxFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"~"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"~(_:)"},"pathComponents":["Int","~(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bitWidth"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The number of bits in the binary representation of this value."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE03bitB0Sivp::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bitWidth"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"bitWidth"},"pathComponents":["Int16","bitWidth"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s5UInt8V10FoundationE7exactlyABSgAC8NSNumberC_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["UInt8","init(exactly:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"littleEndian"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates an integer from its little-endian representation, changing the"},{"text":"byte order if necessary."},{"text":""},{"text":"- Parameter value: A value to use as the little-endian representation of"},{"text":"  the new integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(littleEndian:)"},"pathComponents":["Int16","init(littleEndian:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise AND operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise AND operation results in a value that has each bit set to `1`"},{"text":"where *both* of its arguments have that bit set to `1`. For example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x & y             // 0b00000100"},{"text":"    // z == 4"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1aoiyxx_xtFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&(_:_:)"},"pathComponents":["Int8","&(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"negate"},{"kind":"text","spelling":"()"}],"docComment":{"lines":[{"text":"Replaces this value with its additive inverse."},{"text":""},{"text":"The following example uses the `negate()` method to negate the value of"},{"text":"an integer `x`:"},{"text":""},{"text":"    var x = 21"},{"text":"    x.negate()"},{"text":"    // x == -21"},{"text":""},{"text":"The resulting value must be representable within the value's type. In"},{"text":"particular, negating a signed, fixed-width integer type's minimum"},{"text":"results in a value that cannot be represented."},{"text":""},{"text":"    var y = Int8.min"},{"text":"    y.negate()"},{"text":"    // Overflow error"}]},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s13SignedNumericPsE6negateyyF::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"negate"},{"kind":"text","spelling":"()"}],"title":"negate()"},"pathComponents":["Int32","negate()"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"utf16CodeUnitsNoCopy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SP","spelling":"UnsafePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7unichara","spelling":"unichar"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"freeWhenDone"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"flag"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates a new string that contains the specified number of characters"},{"text":"from the given C array of UTF-16 code units."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE20utf16CodeUnitsNoCopy5count12freeWhenDoneSSSPys6UInt16VG_SiSbtcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"utf16CodeUnitsNoCopy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SP","spelling":"UnsafePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation7unichara","spelling":"unichar"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"freeWhenDone"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":")"}],"title":"init(utf16CodeUnitsNoCopy:count:freeWhenDone:)"},"pathComponents":["String","init(utf16CodeUnitsNoCopy:count:freeWhenDone:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right."},{"text":""},{"text":"The `>>` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a left shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*. An overshift results in `-1` for a"},{"text":"  negative value of `lhs` or `0` for a nonnegative value."},{"text":"- Using any other value for `rhs` performs a right shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted right by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x >> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x >> 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a left shift"},{"text":"using `abs(rhs)`."},{"text":""},{"text":"    let a = x >> -3"},{"text":"    // a == 240                       // 0b11110000"},{"text":"    let b = x << 3"},{"text":"    // b == 240                       // 0b11110000"},{"text":""},{"text":"Right shift operations on negative values \"fill in\" the high bits with"},{"text":"ones instead of zeros."},{"text":""},{"text":"    let q: Int8 = -30                 // 0b11100010"},{"text":"    let r = q >> 2"},{"text":"    // r == -8                        // 0b11111000"},{"text":""},{"text":"    let s = q >> 11"},{"text":"    // s == -1                        // 0b11111111"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":">>(_:_:)"},"pathComponents":["Int16",">>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"RHS"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the given number unchanged."},{"text":""},{"text":"You can use the unary plus operator (`+`) to provide symmetry in your"},{"text":"code for positive numbers when also using the unary minus operator."},{"text":""},{"text":"    let x = -21"},{"text":"    let y = +21"},{"text":"    // x == -21"},{"text":"    // y == 21"},{"text":""},{"text":"- Returns: The given argument without any changes."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE1popyxxFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"+(_:)"},"pathComponents":["UInt","+(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"from"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSryqd__G_qd_0_tSXRd_0_5BoundQyd_0_5IndexRtzr0_lF::SYNTHESIZED::s:s10ArraySliceV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:from:)"},"pathComponents":["ArraySlice","copyBytes(to:from:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"DestinationType"},{"depth":1,"index":1,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SB","spelling":"BinaryFloatingPoint"}],"docComment":{"lines":[{"text":"Creates an integer from the given floating-point value, rounding toward"},{"text":"zero. Any fractional part of the value passed as `source` is removed."},{"text":""},{"text":"    let x = Int(21.5)"},{"text":"    // x == 21"},{"text":"    let y = Int(-21.5)"},{"text":"    // y == -21"},{"text":""},{"text":"If `source` is outside the bounds of this type after rounding toward"},{"text":"zero, a runtime error may occur."},{"text":""},{"text":"    let z = UInt(-21.5)"},{"text":"    // Error: ...outside the representable range"},{"text":""},{"text":"- Parameter source: A floating-point value to convert to an integer."},{"text":"  `source` must be representable in this type after rounding toward"},{"text":"  zero."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["UInt16","init(_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryFloatingPoint","rhsPrecise":"s:SB"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE2peoiyyxz_xtFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"+=(_:_:)"},"pathComponents":["Int","+=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3lleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"<<=(_:_:)"},"pathComponents":["UInt8","<<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"truncating"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Sf10FoundationE10truncatingSfAA8NSNumberC_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"truncating"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(truncating:)"},"pathComponents":["Float","init(truncating:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"},{"declarationFragments":[{"kind":"identifier","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"y"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SxsE1loiySbx_xtFZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<(_:_:)"},"pathComponents":["UInt","<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left."},{"text":""},{"text":"The `<<` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a right shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*, resulting in zero."},{"text":"- Using any other value for `rhs` performs a left shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted left by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x << 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x << 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a right shift"},{"text":"with `abs(rhs)`."},{"text":""},{"text":"    let a = x << -3"},{"text":"    // a == 3                         // 0b00000011"},{"text":"    let b = x >> 3"},{"text":"    // b == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"<<(_:_:)"},"pathComponents":["UInt16","<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"RHS"}]}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"decodeIfPresent"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"C"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":".Type) "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"? "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation26DecodableWithConfigurationP","spelling":"DecodableWithConfiguration"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation30DecodingConfigurationProvidingP","spelling":"DecodingConfigurationProviding"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"_"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":".Type"}],"name":""},{"declarationFragments":[{"kind":"identifier","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":".Type"}],"name":"configuration"}],"returns":[{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"?"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s24UnkeyedDecodingContainerP10FoundationE15decodeIfPresent_13configurationqd__Sgqd__m_qd_0_mtKAC26DecodableWithConfigurationRd__AC0bK9ProvidingRd_0_0bK0Qyd_0_AIRtd__r0_lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"decodeIfPresent"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"C"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":".Type) "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"?"}],"title":"decodeIfPresent(_:configuration:)"},"pathComponents":["UnkeyedDecodingContainer","decodeIfPresent(_:configuration:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"DecodableWithConfiguration","rhsPrecise":"s:10Foundation26DecodableWithConfigurationP"},{"kind":"conformance","lhs":"C","rhs":"DecodingConfigurationProviding","rhsPrecise":"s:10Foundation30DecodingConfigurationProvidingP"},{"kind":"sameType","lhs":"T.DecodingConfiguration","rhs":"C.DecodingConfiguration"}],"parameters":[{"depth":1,"index":0,"name":"T"},{"depth":1,"index":1,"name":"C"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Multiplies two values and stores the result in the left-hand-side"},{"text":"variable, wrapping any overflow."},{"text":""},{"text":"The masking multiplication assignment operator (`&*=`) silently wraps"},{"text":"any overflow that occurs during the operation. In the following example,"},{"text":"the product of `10` and `50` is greater than the maximum representable"},{"text":"`Int8` value, so the result is the partial value after discarding the"},{"text":"overflowing bits."},{"text":""},{"text":"    var x: Int8 = 10"},{"text":"    x &*= 5"},{"text":"    // x == 50"},{"text":"    var y: Int8 = 10"},{"text":"    y &*= 50"},{"text":"    // y == -12 (after overflow)"},{"text":""},{"text":"For more about arithmetic with overflow operators, see [Overflow"},{"text":"Operators][overflow] in *[The Swift Programming Language][tspl]*."},{"text":""},{"text":"[overflow]: https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The first value to multiply."},{"text":"  - rhs: The second value to multiply."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3ameoiyyxz_xtFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&*="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"&*=(_:_:)"},"pathComponents":["Int16","&*=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is greater than that of the second argument."},{"text":""},{"text":"This is the default implementation of the greater-than operator (`>`) for"},{"text":"any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SLsE1goiySbx_xtFZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":">(_:_:)"},"pathComponents":["Int",">(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width, and stores the result in the left-hand-side variable."},{"text":""},{"text":"The `&<<=` operator performs a *masking shift*, where the value used as"},{"text":"`rhs` is masked to produce a value in the range `0..<lhs.bitWidth`. The"},{"text":"shift is performed using this masked value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    var x: UInt8 = 30                 // 0b00011110"},{"text":"    x &<<= 2"},{"text":"    // x == 120                       // 0b01111000"},{"text":""},{"text":"However, if you pass `19` as `rhs`, the method first bitmasks `rhs` to"},{"text":"`3`, and then uses that masked value as the number of bits to shift `lhs`."},{"text":""},{"text":"    var y: UInt8 = 30                 // 0b00011110"},{"text":"    y &<<= 19"},{"text":"    // y == 240                       // 0b11110000"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":")"}],"title":"&<<=(_:_:)"},"pathComponents":["Int8","&<<=(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"|"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise OR operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise OR operation results in a value that has each bit set to `1`"},{"text":"where *one or both* of its arguments have that bit set to `1`. For"},{"text":"example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x | y             // 0b00001111"},{"text":"    // z == 15"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1ooiyxx_xtFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"|"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"|(_:_:)"},"pathComponents":["Int8","|(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"},{"declarationFragments":[{"kind":"identifier","spelling":"y"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"y"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SxsE1loiySbx_xtFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"<(_:_:)"},"pathComponents":["Int64","<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Su10FoundationE7exactlySuSgAA8NSNumberC_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["UInt","init(exactly:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"from"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSw_qd__tSXRd__5BoundQyd__5IndexRtzlF::SYNTHESIZED::s:Sa"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:from:)"},"pathComponents":["Array","copyBytes(to:from:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"regions"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s15CollectionOfOneV","spelling":"CollectionOfOne"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s15ContiguousArrayV","spelling":"ContiguousArray"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","spelling":"UInt8"},{"kind":"text","spelling":">> { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:s15ContiguousArrayV10Foundations5UInt8VRszlE7regionss15CollectionOfOneVyAByAEGGvp"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"regions"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s15CollectionOfOneV","spelling":"CollectionOfOne"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s15ContiguousArrayV","spelling":"ContiguousArray"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","spelling":"UInt8"},{"kind":"text","spelling":">>"}],"title":"regions"},"pathComponents":["ContiguousArray","regions"],"swiftExtension":{"constraints":[{"kind":"sameType","lhs":"Element","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"bigEndian"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates an integer from its big-endian representation, changing the byte"},{"text":"order if necessary."},{"text":""},{"text":"- Parameter value: A value to use as the big-endian representation of the"},{"text":"  new integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE9bigEndianxx_tcfc::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"bigEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(bigEndian:)"},"pathComponents":["Int8","init(bigEndian:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"precomposedStringWithCompatibilityMapping"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A string created by normalizing the string's contents using Form KC."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE41precomposedStringWithCompatibilityMappingSSvp"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"precomposedStringWithCompatibilityMapping"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"precomposedStringWithCompatibilityMapping"},"pathComponents":["StringProtocol","precomposedStringWithCompatibilityMapping"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"contentsOfFile"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"path"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"usedEncoding"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"docComment":{"lines":[{"text":"Produces a string created by reading data from the file at"},{"text":"a given path and returns by reference the encoding used to"},{"text":"interpret the file."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE14contentsOfFile12usedEncodingS2Sh_SSAAE0F0VztKcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"contentsOfFile"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"usedEncoding"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"title":"init(contentsOfFile:usedEncoding:)"},"pathComponents":["String","init(contentsOfFile:usedEncoding:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"shiftJIS"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE8EncodingV8shiftJISACvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"shiftJIS"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"title":"shiftJIS"},"pathComponents":["String","Encoding","shiftJIS"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the given number unchanged."},{"text":""},{"text":"You can use the unary plus operator (`+`) to provide symmetry in your"},{"text":"code for positive numbers when also using the unary minus operator."},{"text":""},{"text":"    let x = -21"},{"text":"    let y = +21"},{"text":"    // x == -21"},{"text":"    // y == 21"},{"text":""},{"text":"- Returns: The given argument without any changes."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"x"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"x"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPsE1popyxxFZ::SYNTHESIZED::s:s5Int64V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"+"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"+(_:)"},"pathComponents":["Int64","+(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the two given values are"},{"text":"equal."},{"text":""},{"text":"You can check the equality of instances of any `BinaryInteger` types"},{"text":"using the equal-to operator (`==`). For example, you can test whether"},{"text":"the first `UInt8` value in a string's UTF-8 encoding is equal to the"},{"text":"first `UInt32` value in its Unicode scalar view:"},{"text":""},{"text":"    let gameName = \"Red Light, Green Light\""},{"text":"    if let firstUTF8 = gameName.utf8.first,"},{"text":"        let firstScalar = gameName.unicodeScalars.first?.value {"},{"text":"        print(\"First code values are equal: \\(firstUTF8 == firstScalar)\")"},{"text":"    }"},{"text":"    // Prints \"First code values are equal: true\""},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer to compare."},{"text":"  - rhs: Another integer to compare."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"==(_:_:)"},"pathComponents":["UInt8","==(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"truncatingIfNeeded"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Creates a new instance from the bit pattern of the given instance by"},{"text":"truncating or sign-extending if needed to fit this type."},{"text":""},{"text":"When the bit width of `T` (the type of `source`) is equal to or greater"},{"text":"than this type's bit width, the result is the truncated"},{"text":"least-significant bits of `source`. For example, when converting a"},{"text":"16-bit value to an 8-bit type, only the lower 8 bits of `source` are"},{"text":"used."},{"text":""},{"text":"    let p: Int16 = -500"},{"text":"    // 'p' has a binary representation of 11111110_00001100"},{"text":"    let q = Int8(truncatingIfNeeded: p)"},{"text":"    // q == 12"},{"text":"    // 'q' has a binary representation of 00001100"},{"text":""},{"text":"When the bit width of `T` is less than this type's bit width, the result"},{"text":"is *sign-extended* to fill the remaining bits. That is, if `source` is"},{"text":"negative, the result is padded with ones; otherwise, the result is"},{"text":"padded with zeros."},{"text":""},{"text":"    let u: Int8 = 21"},{"text":"    // 'u' has a binary representation of 00010101"},{"text":"    let v = Int16(truncatingIfNeeded: u)"},{"text":"    // v == 21"},{"text":"    // 'v' has a binary representation of 00000000_00010101"},{"text":""},{"text":"    let w: Int8 = -21"},{"text":"    // 'w' has a binary representation of 11101011"},{"text":"    let x = Int16(truncatingIfNeeded: w)"},{"text":"    // x == -21"},{"text":"    // 'x' has a binary representation of 11111111_11101011"},{"text":"    let y = UInt16(truncatingIfNeeded: w)"},{"text":"    // y == 65515"},{"text":"    // 'y' has a binary representation of 11111111_11101011"},{"text":""},{"text":"- Parameter source: An integer to convert to this type."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"truncatingIfNeeded"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(truncatingIfNeeded:)"},"pathComponents":["UInt8","init(truncatingIfNeeded:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"quotientAndRemainder"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"dividingBy"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> (quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Returns the quotient and remainder of this value divided by the given"},{"text":"value."},{"text":""},{"text":"Use this method to calculate the quotient and remainder of a division at"},{"text":"the same time."},{"text":""},{"text":"    let x = 1_000_000"},{"text":"    let (q, r) = x.quotientAndRemainder(dividingBy: 933)"},{"text":"    // q == 1071"},{"text":"    // r == 757"},{"text":""},{"text":"- Parameter rhs: The value to divide this value by."},{"text":"- Returns: A tuple containing the quotient and remainder of this value"},{"text":"  divided by `rhs`."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"internalName":"rhs","name":"dividingBy"}],"returns":[{"kind":"text","spelling":"(quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"quotientAndRemainder"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"dividingBy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> (quotient"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", remainder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"quotientAndRemainder(dividingBy:)"},"pathComponents":["Int8","quotientAndRemainder(dividingBy:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"name":"count"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to5countSiSryqd__G_SitlF::SYNTHESIZED::s:s5SliceV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"DestinationType"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","spelling":"UnsafeMutableBufferPointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"DestinationType"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:count:)"},"pathComponents":["Slice","copyBytes(to:count:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"DestinationType"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The little-endian representation of this integer."},{"text":""},{"text":"If necessary, the byte order of this value is reversed from the typical"},{"text":"byte order of this integer type. On a little-endian platform, for any"},{"text":"integer `x`, `x == x.littleEndian`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE12littleEndianxvp::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"littleEndian"},"pathComponents":["Int8","littleEndian"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left, masking the shift amount to the"},{"text":"type's bit width."},{"text":""},{"text":"Use the masking left shift operator (`&<<`) when you need to perform a"},{"text":"shift and are sure that the shift amount is in the range"},{"text":"`0..<lhs.bitWidth`. Before shifting, the masking left shift operator"},{"text":"masks the shift to this range. The shift is performed using this masked"},{"text":"value."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the shift amount requires no masking."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x &<< 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"However, if you use `8` as the shift amount, the method first masks the"},{"text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":"to the original value."},{"text":""},{"text":"    let z = x &<< 8"},{"text":"    // z == 30                        // 0b00011110"},{"text":""},{"text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":"modulo operation."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left. If `rhs` is"},{"text":"    outside the range `0..<lhs.bitWidth`, it is masked to produce a"},{"text":"    value within that range."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Other"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"&<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Other"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Other"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"&<<(_:_:)"},"pathComponents":["UInt8","&<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Other","rhs":"BinaryInteger","rhsPrecise":"s:Sz"}],"parameters":[{"depth":1,"index":0,"name":"Other"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SB","spelling":"BinaryFloatingPoint"}],"docComment":{"lines":[{"text":"Creates an integer from the given floating-point value, if it can be"},{"text":"represented exactly."},{"text":""},{"text":"If the value passed as `source` is not representable exactly, the result"},{"text":"is `nil`. In the following example, the constant `x` is successfully"},{"text":"created from a value of `21.0`, while the attempt to initialize the"},{"text":"constant `y` from `21.5` fails:"},{"text":""},{"text":"    let x = Int(exactly: 21.0)"},{"text":"    // x == Optional(21)"},{"text":"    let y = Int(exactly: 21.5)"},{"text":"    // y == nil"},{"text":""},{"text":"- Parameter source: A floating-point value to convert to an integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"?<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"exactly"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(exactly:)"},"pathComponents":["Int8","init(exactly:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryFloatingPoint","rhsPrecise":"s:SB"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SX","spelling":"RangeExpression"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Index"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Bound"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"ptr"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"}],"internalName":"ptr","name":"to"},{"declarationFragments":[{"kind":"identifier","spelling":"range"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"}],"internalName":"range","name":"from"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:10Foundation12DataProtocolPAAE9copyBytes2to4fromSiSw_qd__tSXRd__5BoundQyd__5IndexRtzlF::SYNTHESIZED::s:s15ContiguousArrayV"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"copyBytes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","spelling":"UnsafeMutableRawBufferPointer"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"copyBytes(to:from:)"},"pathComponents":["ContiguousArray","copyBytes(to:from:)"],"swiftExtension":{"extendedModule":"Foundation"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"R","rhs":"RangeExpression","rhsPrecise":"s:SX"},{"kind":"sameType","lhs":"Self.Index","rhs":"R.Bound"}],"parameters":[{"depth":1,"index":0,"name":"R"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"truncating"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Su10FoundationE10truncatingSuAA8NSNumberC_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"truncating"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(truncating:)"},"pathComponents":["UInt","init(truncating:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the left."},{"text":""},{"text":"The `<<` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a right shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*, resulting in zero."},{"text":"- Using any other value for `rhs` performs a left shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted left by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x << 2"},{"text":"    // y == 120                       // 0b01111000"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x << 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a right shift"},{"text":"with `abs(rhs)`."},{"text":""},{"text":"    let a = x << -3"},{"text":"    // a == 3                         // 0b00000011"},{"text":"    let b = x >> 3"},{"text":"    // b == 3                         // 0b00000011"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the left."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"<<(_:_:)"},"pathComponents":["Int16","<<(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"RHS"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"zero"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The zero value."},{"text":""},{"text":"Zero is the identity element for addition. For any value,"},{"text":"`x + .zero == x` and `.zero + x == x`."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ::SYNTHESIZED::s:Su"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"zero"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"zero"},"pathComponents":["UInt","zero"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"ExpressibleByIntegerLiteral","rhsPrecise":"s:s27ExpressibleByIntegerLiteralP"}],"extendedModule":"Swift"}},{"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":12}},{"domain":"watchOS","introduced":{"major":8}},{"domain":"iOS","introduced":{"major":15}},{"domain":"tvOS","introduced":{"major":15}}],"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"decode"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"C"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":".Type) "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation26DecodableWithConfigurationP","spelling":"DecodableWithConfiguration"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation30DecodingConfigurationProvidingP","spelling":"DecodingConfigurationProviding"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"DecodingConfiguration"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"_"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":".Type"}],"name":""},{"declarationFragments":[{"kind":"identifier","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":".Type"}],"name":"configuration"}],"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s24UnkeyedDecodingContainerP10FoundationE6decode_13configurationqd__qd__m_qd_0_mtKAC26DecodableWithConfigurationRd__AC0bI9ProvidingRd_0_0bI0Qyd_0_AHRtd__r0_lF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"decode"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"C"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"configuration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"C"},{"kind":"text","spelling":".Type) "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}],"title":"decode(_:configuration:)"},"pathComponents":["UnkeyedDecodingContainer","decode(_:configuration:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"DecodableWithConfiguration","rhsPrecise":"s:10Foundation26DecodableWithConfigurationP"},{"kind":"conformance","lhs":"C","rhs":"DecodingConfigurationProviding","rhsPrecise":"s:10Foundation30DecodingConfigurationProvidingP"},{"kind":"sameType","lhs":"T.DecodingConfiguration","rhs":"C.DecodingConfiguration"}],"parameters":[{"depth":1,"index":0,"name":"T"},{"depth":1,"index":1,"name":"C"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The minimum representable integer in this type."},{"text":""},{"text":"For signed integer types, this value is `-(2 ** (bitWidth - 1))`, where"},{"text":"`**` is exponentiation."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SZss17FixedWidthIntegerRzrlE3minxvpZ::SYNTHESIZED::s:Si"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"min"},"pathComponents":["Int","min"],"swiftExtension":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"FixedWidthInteger","rhsPrecise":"s:s17FixedWidthIntegerP"}],"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"contentsOfFile"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"path"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"encoding"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"enc"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"docComment":{"lines":[{"text":"Produces a string created by reading data from the file at a"},{"text":"given path interpreted using a given encoding."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE14contentsOfFile8encodingS2Sh_SSAAE8EncodingVtKcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"contentsOfFile"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"encoding"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"title":"init(contentsOfFile:encoding:)"},"pathComponents":["String","init(contentsOfFile:encoding:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"^"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the result of performing a bitwise XOR operation on the two given"},{"text":"values."},{"text":""},{"text":"A bitwise XOR operation, also known as an exclusive OR operation, results"},{"text":"in a value that has each bit set to `1` where *one or the other but not"},{"text":"both* of its arguments had that bit set to `1`. For example:"},{"text":""},{"text":"    let x: UInt8 = 5          // 0b00000101"},{"text":"    let y: UInt8 = 14         // 0b00001110"},{"text":"    let z = x ^ y             // 0b00001011"},{"text":"    // z == 11"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: An integer value."},{"text":"  - rhs: Another integer value."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE1xoiyxx_xtFZ::SYNTHESIZED::s:s4Int8V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"^"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"^(_:_:)"},"pathComponents":["Int8","^(_:_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bitWidth"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"The number of bits in the binary representation of this value."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE03bitB0Sivp::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bitWidth"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","spelling":"Int"}],"title":"bitWidth"},"pathComponents":["UInt16","bitWidth"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isSigned"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A Boolean value indicating whether this type is a signed integer type."},{"text":""},{"text":"This property is always `false` for unsigned integer types."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SUsE8isSignedSbvpZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isSigned"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"isSigned"},"pathComponents":["UInt16","isSigned"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"littleEndian"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"text":"Creates an integer from its little-endian representation, changing the"},{"text":"byte order if necessary."},{"text":""},{"text":"- Parameter value: A value to use as the little-endian representation of"},{"text":"  the new integer."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsE12littleEndianxx_tcfc::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"littleEndian"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":")"}],"title":"init(littleEndian:)"},"pathComponents":["UInt16","init(littleEndian:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"source"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SB","spelling":"BinaryFloatingPoint"}],"docComment":{"lines":[{"text":"Creates an integer from the given floating-point value, rounding toward"},{"text":"zero. Any fractional part of the value passed as `source` is removed."},{"text":""},{"text":"    let x = Int(21.5)"},{"text":"    // x == 21"},{"text":"    let y = Int(-21.5)"},{"text":"    // y == -21"},{"text":""},{"text":"If `source` is outside the bounds of this type after rounding toward"},{"text":"zero, a runtime error may occur."},{"text":""},{"text":"    let z = UInt(-21.5)"},{"text":"    // Error: ...outside the representable range"},{"text":""},{"text":"- Parameter source: A floating-point value to convert to an integer."},{"text":"  `source` must be representable in this type after rounding toward"},{"text":"  zero."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s17FixedWidthIntegerPsEyxqd__cSBRd__lufc::SYNTHESIZED::s:s5Int16V"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["Int16","init(_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"BinaryFloatingPoint","rhsPrecise":"s:SB"}],"parameters":[{"depth":1,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isoLatin2"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"identifier":{"interfaceLanguage":"swift","precise":"s:SS10FoundationE8EncodingV9isoLatin2ACvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isoLatin2"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","spelling":"Encoding"}],"title":"isoLatin2"},"pathComponents":["String","Encoding","isoLatin2"]},{"accessLevel":"public","availability":[{"deprecated":{"major":4},"domain":"Swift","renamed":"init(truncating:)"}],"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"number"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:Su10FoundationEySuAA8NSNumberCcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8NSNumberC","spelling":"NSNumber"},{"kind":"text","spelling":")"}],"title":"init(_:)"},"pathComponents":["UInt","init(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"operand"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"docComment":{"lines":[{"text":"Returns the additive inverse of the specified value."},{"text":""},{"text":"The negation operator (prefix `-`) returns the additive inverse of its"},{"text":"argument."},{"text":""},{"text":"    let x = 21"},{"text":"    let y = -x"},{"text":"    // y == -21"},{"text":""},{"text":"The resulting value must be representable in the same type as the"},{"text":"argument. In particular, negating a signed, fixed-width integer type's"},{"text":"minimum results in a value that cannot be represented."},{"text":""},{"text":"    let z = -Int8.min"},{"text":"    // Overflow error"},{"text":""},{"text":"- Returns: The additive inverse of the argument."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"operand"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"operand"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:s13SignedNumericPsE1sopyxxFZ::SYNTHESIZED::s:s5Int32V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"-"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"-(_:)"},"pathComponents":["Int32","-(_:)"],"swiftExtension":{"extendedModule":"Swift"}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sz","spelling":"BinaryInteger"}],"docComment":{"lines":[{"text":"Returns the result of shifting a value's binary representation the"},{"text":"specified number of digits to the right."},{"text":""},{"text":"The `>>` operator performs a *smart shift*, which defines a result for a"},{"text":"shift of any value."},{"text":""},{"text":"- Using a negative value for `rhs` performs a left shift using"},{"text":"  `abs(rhs)`."},{"text":"- Using a value for `rhs` that is greater than or equal to the bit width"},{"text":"  of `lhs` is an *overshift*. An overshift results in `-1` for a"},{"text":"  negative value of `lhs` or `0` for a nonnegative value."},{"text":"- Using any other value for `rhs` performs a right shift on `lhs` by that"},{"text":"  amount."},{"text":""},{"text":"The following example defines `x` as an instance of `UInt8`, an 8-bit,"},{"text":"unsigned integer type. If you use `2` as the right-hand-side value in an"},{"text":"operation on `x`, the value is shifted right by two bits."},{"text":""},{"text":"    let x: UInt8 = 30                 // 0b00011110"},{"text":"    let y = x >> 2"},{"text":"    // y == 7                         // 0b00000111"},{"text":""},{"text":"If you use `11` as `rhs`, `x` is overshifted such that all of its bits"},{"text":"are set to zero."},{"text":""},{"text":"    let z = x >> 11"},{"text":"    // z == 0                         // 0b00000000"},{"text":""},{"text":"Using a negative value as `rhs` is the same as performing a left shift"},{"text":"using `abs(rhs)`."},{"text":""},{"text":"    let a = x >> -3"},{"text":"    // a == 240                       // 0b11110000"},{"text":"    let b = x << 3"},{"text":"    // b == 240                       // 0b11110000"},{"text":""},{"text":"Right shift operations on negative values \"fill in\" the high bits with"},{"text":"ones instead of zeros."},{"text":""},{"text":"    let q: Int8 = -30                 // 0b11100010"},{"text":"    let r = q >> 2"},{"text":"    // r == -8                        // 0b11111000"},{"text":""},{"text":"    let s = q >> 11"},{"text":"    // s == -1                        // 0b11111111"},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: The value to shift."},{"text":"  - rhs: The number of bits to shift `lhs` to the right."}]},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}],"name":"lhs"},{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RHS"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"Self"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V"},"kind":{"displayName":"Operator","identifier":"swift.func.op"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">>"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"RHS"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"RHS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":">>(_:_:)"},"pathComponents":["UInt16",">>(_:_:)"],"swiftExtension":{"extendedModule":"Swift"},"swiftGenerics":{"parameters":[{"depth":1,"index":0,"name":"RHS"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"precomposedStringWithCanonicalMapping"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"text":"A string created by normalizing the string's contents using Form C."}]},"identifier":{"interfaceLanguage":"swift","precise":"s:Sy10FoundationE37precomposedStringWithCanonicalMappingSSvp"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"precomposedStringWithCanonicalMapping"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","spelling":"String"}],"title":"precomposedStringWithCanonicalMapping"},"pathComponents":["StringProtocol","precomposedStringWithCanonicalMapping"],"swiftExtension":{"extendedModule":"Swift"}}]}
